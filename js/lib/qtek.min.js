!function(a){"undefined"!=typeof define&&define.amd?define(["exports"],a.bind(window)):a(window.qtek={})}(function(a){var b,c,d;!function(a){function e(a,b){return u.call(a,b)}function f(a,b){var c,d,e,f,g,h,i,j,k,l,m=b&&b.split("/"),n=s.map,o=n&&n["*"]||{};if(a&&"."===a.charAt(0))if(b){for(m=m.slice(0,m.length-1),a=m.concat(a.split("/")),j=0;j<a.length;j+=1)if(l=a[j],"."===l)a.splice(j,1),j-=1;else if(".."===l){if(1===j&&(".."===a[2]||".."===a[0]))break;j>0&&(a.splice(j-1,2),j-=2)}a=a.join("/")}else 0===a.indexOf("./")&&(a=a.substring(2));if((m||o)&&n){for(c=a.split("/"),j=c.length;j>0;j-=1){if(d=c.slice(0,j).join("/"),m)for(k=m.length;k>0;k-=1)if(e=n[m.slice(0,k).join("/")],e&&(e=e[d])){f=e,g=j;break}if(f)break;!h&&o&&o[d]&&(h=o[d],i=j)}!f&&h&&(f=h,g=i),f&&(c.splice(0,g,f),a=c.join("/"))}return a}function g(b,c){return function(){return n.apply(a,v.call(arguments,0).concat([b,c]))}}function h(a){return function(b){return f(b,a)}}function i(a){return function(b){q[a]=b}}function j(b){if(e(r,b)){var c=r[b];delete r[b],t[b]=!0,m.apply(a,c)}if(!e(q,b)&&!e(t,b))throw new Error("No "+b);return q[b]}function k(a){var b,c=a?a.indexOf("!"):-1;return c>-1&&(b=a.substring(0,c),a=a.substring(c+1,a.length)),[b,a]}function l(a){return function(){return s&&s.config&&s.config[a]||{}}}var m,n,o,p,q={},r={},s={},t={},u=Object.prototype.hasOwnProperty,v=[].slice;o=function(a,b){var c,d=k(a),e=d[0];return a=d[1],e&&(e=f(e,b),c=j(e)),e?a=c&&c.normalize?c.normalize(a,h(b)):f(a,b):(a=f(a,b),d=k(a),e=d[0],a=d[1],e&&(c=j(e))),{f:e?e+"!"+a:a,n:a,pr:e,p:c}},p={require:function(a){return g(a)},exports:function(a){var b=q[a];return"undefined"!=typeof b?b:q[a]={}},module:function(a){return{id:a,uri:"",exports:q[a],config:l(a)}}},m=function(b,c,d,f){var h,k,l,m,n,s,u=[];if(f=f||b,"function"==typeof d){for(c=!c.length&&d.length?["require","exports","module"]:c,n=0;n<c.length;n+=1)if(m=o(c[n],f),k=m.f,"require"===k)u[n]=p.require(b);else if("exports"===k)u[n]=p.exports(b),s=!0;else if("module"===k)h=u[n]=p.module(b);else if(e(q,k)||e(r,k)||e(t,k))u[n]=j(k);else{if(!m.p)throw new Error(b+" missing "+k);m.p.load(m.n,g(f,!0),i(k),{}),u[n]=q[k]}l=d.apply(q[b],u),b&&(h&&h.exports!==a&&h.exports!==q[b]?q[b]=h.exports:l===a&&s||(q[b]=l))}else b&&(q[b]=d)},b=c=n=function(b,c,d,e,f){return"string"==typeof b?p[b]?p[b](c):j(o(b,c).f):(b.splice||(s=b,c.splice?(b=c,c=d,d=null):b=a),c=c||function(){},"function"==typeof d&&(d=e,e=f),e?m(a,b,c,d):setTimeout(function(){m(a,b,c,d)},4),n)},n.config=function(a){return s=a,s.deps&&n(s.deps,s.callback),n},d=function(a,b,c){b.splice||(c=b,b=[]),e(q,a)||e(r,a)||(r[a]=[a,b,c])},d.amd={jQuery:!0}}(),d("qtek/core/mixin/derive",["require"],function(){function a(a,d,e){"object"==typeof d&&(e=d,d=null);var f,g=this;if(!(a instanceof Function)){f=[];for(var h in a)a.hasOwnProperty(h)&&f.push(h)}var i=function(){if(g.apply(this,arguments),a instanceof Function?b(this,a.call(this)):c(this,a,f),this.constructor===i)for(var d=i.__initializers__,e=0;e<d.length;e++)d[e].apply(this,arguments)};i.__super__=g,i.__initializers__=g.__initializers__?g.__initializers__.slice():[],d&&i.__initializers__.push(d);var j=function(){};return j.prototype=g.prototype,i.prototype=new j,i.prototype.constructor=i,b(i.prototype,e),i.derive=g.derive,i}function b(a,b){if(b)for(var c in b)b.hasOwnProperty(c)&&(a[c]=b[c])}function c(a,b,c){for(var d=0;d<c.length;d++){var e=c[d];a[e]=b[e]}}return{derive:a}}),d("qtek/core/mixin/notifier",[],function(){function a(a,b){this.action=a,this.context=b}var b={trigger:function(a){if(this.hasOwnProperty("__handlers__")&&this.__handlers__.hasOwnProperty(a)){var b=this.__handlers__[a],c=b.length,d=-1,e=arguments;switch(e.length){case 1:for(;++d<c;)b[d].action.call(b[d].context);return;case 2:for(;++d<c;)b[d].action.call(b[d].context,e[1]);return;case 3:for(;++d<c;)b[d].action.call(b[d].context,e[1],e[2]);return;case 4:for(;++d<c;)b[d].action.call(b[d].context,e[1],e[2],e[3]);return;case 5:for(;++d<c;)b[d].action.call(b[d].context,e[1],e[2],e[3],e[4]);return;default:for(;++d<c;)b[d].action.apply(b[d].context,Array.prototype.slice.call(e,1));return}}},on:function(b,c,d){if(b&&c){var e=this.__handlers__||(this.__handlers__={});if(e[b]){if(this.has(b,c))return}else e[b]=[];var f=new a(c,d||this);return e[b].push(f),this}},once:function(a,b,c){function d(){e.off(a,d),b.apply(this,arguments)}if(a&&b){var e=this;return this.on(a,d,c)}},before:function(a,b,c){return a&&b?(a="before"+a,this.on(a,b,c)):void 0},after:function(a,b,c){return a&&b?(a="after"+a,this.on(a,b,c)):void 0},success:function(a,b){return this.once("success",a,b)},error:function(a,b){return this.once("error",a,b)},off:function(a,b){var c=this.__handlers__||(this.__handlers__={});if(!b)return c[a]=[],void 0;if(c[a]){for(var d=c[a],e=[],f=0;f<d.length;f++)b&&d[f].action!==b&&e.push(d[f]);c[a]=e}return this},has:function(a,b){var c=this.__handlers__;if(!c||!c[a])return!1;for(var d=c[a],e=0;e<d.length;e++)if(d[e].action===b)return!0}};return b}),d("qtek/core/util",["require"],function(){var a=0,b=Array.prototype,c=b.forEach,d={genGUID:function(){return++a},relative2absolute:function(a,b){if(!b||a.match(/^\//))return a;for(var c=a.split("/"),d=b.split("/"),e=c[0];"."===e||".."===e;)".."===e&&d.pop(),c.shift(),e=c[0];return d.join("/")+"/"+c.join("/")},extend:function(a,b){if(b)for(var c in b)b.hasOwnProperty(c)&&(a[c]=b[c]);return a},defaults:function(a,b){if(b)for(var c in b)void 0===a[c]&&(a[c]=b[c]);return a},extendWithPropList:function(a,b,c){if(b)for(var d=0;d<c.length;d++){var e=c[d];a[e]=b[e]}return a},defaultsWithPropList:function(a,b,c){if(b)for(var d=0;d<c.length;d++){var e=c[d];void 0===a[e]&&(a[e]=b[e])}return a},each:function(a,b,d){if(a&&b)if(a.forEach&&a.forEach===c)a.forEach(b,d);else if(a.length===+a.length)for(var e=0,f=a.length;f>e;e++)b.call(d,a[e],e,a);else for(var g in a)a.hasOwnProperty(g)&&b.call(d,a[g],g,a)},isObject:function(a){return a===Object(a)},isArray:function(a){return a instanceof Array},isArrayLike:function(a){return a?a.length===+a.length:!1},clone:function(a){if(d.isObject(a)){if(d.isArray(a))return a.slice();if(d.isArrayLike(a)){for(var b=new a.constructor(a.length),c=0;c<a.length;c++)b[c]=a[c];return b}return d.extend({},a)}return a}};return d}),d("qtek/core/Base",["require","./mixin/derive","./mixin/notifier","./util"],function(a){var b=a("./mixin/derive"),c=a("./mixin/notifier"),d=a("./util"),e=function(){this.__GUID__=d.genGUID()};return e.__initializers__=[function(a){d.extend(this,a)}],d.extend(e,b),d.extend(e.prototype,c),e}),function(a){var b={};"undefined"==typeof exports?"function"==typeof d&&"object"==typeof d.amd&&d.amd?(b.exports={},d("qtek/dep/glmatrix",[],function(){return b.exports})):b.exports="undefined"!=typeof window?window:a:b.exports=exports,function(a){if(!b)var b=1e-6;if(!c)var c="undefined"!=typeof Float32Array?Float32Array:Array;if(!d)var d=Math.random;var e={};e.setMatrixArrayType=function(a){c=a},"undefined"!=typeof a&&(a.glMatrix=e);var f=Math.PI/180;e.toRadian=function(a){return a*f};var g={};g.create=function(){var a=new c(2);return a[0]=0,a[1]=0,a},g.clone=function(a){var b=new c(2);return b[0]=a[0],b[1]=a[1],b},g.fromValues=function(a,b){var d=new c(2);return d[0]=a,d[1]=b,d},g.copy=function(a,b){return a[0]=b[0],a[1]=b[1],a},g.set=function(a,b,c){return a[0]=b,a[1]=c,a},g.add=function(a,b,c){return a[0]=b[0]+c[0],a[1]=b[1]+c[1],a},g.subtract=function(a,b,c){return a[0]=b[0]-c[0],a[1]=b[1]-c[1],a},g.sub=g.subtract,g.multiply=function(a,b,c){return a[0]=b[0]*c[0],a[1]=b[1]*c[1],a},g.mul=g.multiply,g.divide=function(a,b,c){return a[0]=b[0]/c[0],a[1]=b[1]/c[1],a},g.div=g.divide,g.min=function(a,b,c){return a[0]=Math.min(b[0],c[0]),a[1]=Math.min(b[1],c[1]),a},g.max=function(a,b,c){return a[0]=Math.max(b[0],c[0]),a[1]=Math.max(b[1],c[1]),a},g.scale=function(a,b,c){return a[0]=b[0]*c,a[1]=b[1]*c,a},g.scaleAndAdd=function(a,b,c,d){return a[0]=b[0]+c[0]*d,a[1]=b[1]+c[1]*d,a},g.distance=function(a,b){var c=b[0]-a[0],d=b[1]-a[1];return Math.sqrt(c*c+d*d)},g.dist=g.distance,g.squaredDistance=function(a,b){var c=b[0]-a[0],d=b[1]-a[1];return c*c+d*d},g.sqrDist=g.squaredDistance,g.length=function(a){var b=a[0],c=a[1];return Math.sqrt(b*b+c*c)},g.len=g.length,g.squaredLength=function(a){var b=a[0],c=a[1];return b*b+c*c},g.sqrLen=g.squaredLength,g.negate=function(a,b){return a[0]=-b[0],a[1]=-b[1],a},g.inverse=function(a,b){return a[0]=1/b[0],a[1]=1/b[1],a},g.normalize=function(a,b){var c=b[0],d=b[1],e=c*c+d*d;return e>0&&(e=1/Math.sqrt(e),a[0]=b[0]*e,a[1]=b[1]*e),a},g.dot=function(a,b){return a[0]*b[0]+a[1]*b[1]},g.cross=function(a,b,c){var d=b[0]*c[1]-b[1]*c[0];return a[0]=a[1]=0,a[2]=d,a},g.lerp=function(a,b,c,d){var e=b[0],f=b[1];return a[0]=e+d*(c[0]-e),a[1]=f+d*(c[1]-f),a},g.random=function(a,b){b=b||1;var c=2*d()*Math.PI;return a[0]=Math.cos(c)*b,a[1]=Math.sin(c)*b,a},g.transformMat2=function(a,b,c){var d=b[0],e=b[1];return a[0]=c[0]*d+c[2]*e,a[1]=c[1]*d+c[3]*e,a},g.transformMat2d=function(a,b,c){var d=b[0],e=b[1];return a[0]=c[0]*d+c[2]*e+c[4],a[1]=c[1]*d+c[3]*e+c[5],a},g.transformMat3=function(a,b,c){var d=b[0],e=b[1];return a[0]=c[0]*d+c[3]*e+c[6],a[1]=c[1]*d+c[4]*e+c[7],a},g.transformMat4=function(a,b,c){var d=b[0],e=b[1];return a[0]=c[0]*d+c[4]*e+c[12],a[1]=c[1]*d+c[5]*e+c[13],a},g.forEach=function(){var a=g.create();return function(b,c,d,e,f,g){var h,i;for(c||(c=2),d||(d=0),i=e?Math.min(e*c+d,b.length):b.length,h=d;i>h;h+=c)a[0]=b[h],a[1]=b[h+1],f(a,a,g),b[h]=a[0],b[h+1]=a[1];return b}}(),g.str=function(a){return"vec2("+a[0]+", "+a[1]+")"},"undefined"!=typeof a&&(a.vec2=g);var h={};h.create=function(){var a=new c(3);return a[0]=0,a[1]=0,a[2]=0,a},h.clone=function(a){var b=new c(3);return b[0]=a[0],b[1]=a[1],b[2]=a[2],b},h.fromValues=function(a,b,d){var e=new c(3);return e[0]=a,e[1]=b,e[2]=d,e},h.copy=function(a,b){return a[0]=b[0],a[1]=b[1],a[2]=b[2],a},h.set=function(a,b,c,d){return a[0]=b,a[1]=c,a[2]=d,a},h.add=function(a,b,c){return a[0]=b[0]+c[0],a[1]=b[1]+c[1],a[2]=b[2]+c[2],a},h.subtract=function(a,b,c){return a[0]=b[0]-c[0],a[1]=b[1]-c[1],a[2]=b[2]-c[2],a},h.sub=h.subtract,h.multiply=function(a,b,c){return a[0]=b[0]*c[0],a[1]=b[1]*c[1],a[2]=b[2]*c[2],a},h.mul=h.multiply,h.divide=function(a,b,c){return a[0]=b[0]/c[0],a[1]=b[1]/c[1],a[2]=b[2]/c[2],a},h.div=h.divide,h.min=function(a,b,c){return a[0]=Math.min(b[0],c[0]),a[1]=Math.min(b[1],c[1]),a[2]=Math.min(b[2],c[2]),a},h.max=function(a,b,c){return a[0]=Math.max(b[0],c[0]),a[1]=Math.max(b[1],c[1]),a[2]=Math.max(b[2],c[2]),a},h.scale=function(a,b,c){return a[0]=b[0]*c,a[1]=b[1]*c,a[2]=b[2]*c,a},h.scaleAndAdd=function(a,b,c,d){return a[0]=b[0]+c[0]*d,a[1]=b[1]+c[1]*d,a[2]=b[2]+c[2]*d,a},h.distance=function(a,b){var c=b[0]-a[0],d=b[1]-a[1],e=b[2]-a[2];return Math.sqrt(c*c+d*d+e*e)},h.dist=h.distance,h.squaredDistance=function(a,b){var c=b[0]-a[0],d=b[1]-a[1],e=b[2]-a[2];return c*c+d*d+e*e},h.sqrDist=h.squaredDistance,h.length=function(a){var b=a[0],c=a[1],d=a[2];return Math.sqrt(b*b+c*c+d*d)},h.len=h.length,h.squaredLength=function(a){var b=a[0],c=a[1],d=a[2];return b*b+c*c+d*d},h.sqrLen=h.squaredLength,h.negate=function(a,b){return a[0]=-b[0],a[1]=-b[1],a[2]=-b[2],a},h.inverse=function(a,b){return a[0]=1/b[0],a[1]=1/b[1],a[2]=1/b[2],a},h.normalize=function(a,b){var c=b[0],d=b[1],e=b[2],f=c*c+d*d+e*e;return f>0&&(f=1/Math.sqrt(f),a[0]=b[0]*f,a[1]=b[1]*f,a[2]=b[2]*f),a},h.dot=function(a,b){return a[0]*b[0]+a[1]*b[1]+a[2]*b[2]},h.cross=function(a,b,c){var d=b[0],e=b[1],f=b[2],g=c[0],h=c[1],i=c[2];return a[0]=e*i-f*h,a[1]=f*g-d*i,a[2]=d*h-e*g,a},h.lerp=function(a,b,c,d){var e=b[0],f=b[1],g=b[2];return a[0]=e+d*(c[0]-e),a[1]=f+d*(c[1]-f),a[2]=g+d*(c[2]-g),a},h.random=function(a,b){b=b||1;var c=2*d()*Math.PI,e=2*d()-1,f=Math.sqrt(1-e*e)*b;return a[0]=Math.cos(c)*f,a[1]=Math.sin(c)*f,a[2]=e*b,a},h.transformMat4=function(a,b,c){var d=b[0],e=b[1],f=b[2],g=c[3]*d+c[7]*e+c[11]*f+c[15];return g=g||1,a[0]=(c[0]*d+c[4]*e+c[8]*f+c[12])/g,a[1]=(c[1]*d+c[5]*e+c[9]*f+c[13])/g,a[2]=(c[2]*d+c[6]*e+c[10]*f+c[14])/g,a},h.transformMat3=function(a,b,c){var d=b[0],e=b[1],f=b[2];return a[0]=d*c[0]+e*c[3]+f*c[6],a[1]=d*c[1]+e*c[4]+f*c[7],a[2]=d*c[2]+e*c[5]+f*c[8],a},h.transformQuat=function(a,b,c){var d=b[0],e=b[1],f=b[2],g=c[0],h=c[1],i=c[2],j=c[3],k=j*d+h*f-i*e,l=j*e+i*d-g*f,m=j*f+g*e-h*d,n=-g*d-h*e-i*f;return a[0]=k*j+n*-g+l*-i-m*-h,a[1]=l*j+n*-h+m*-g-k*-i,a[2]=m*j+n*-i+k*-h-l*-g,a},h.rotateX=function(a,b,c,d){var e=[],f=[];return e[0]=b[0]-c[0],e[1]=b[1]-c[1],e[2]=b[2]-c[2],f[0]=e[0],f[1]=e[1]*Math.cos(d)-e[2]*Math.sin(d),f[2]=e[1]*Math.sin(d)+e[2]*Math.cos(d),a[0]=f[0]+c[0],a[1]=f[1]+c[1],a[2]=f[2]+c[2],a},h.rotateY=function(a,b,c,d){var e=[],f=[];return e[0]=b[0]-c[0],e[1]=b[1]-c[1],e[2]=b[2]-c[2],f[0]=e[2]*Math.sin(d)+e[0]*Math.cos(d),f[1]=e[1],f[2]=e[2]*Math.cos(d)-e[0]*Math.sin(d),a[0]=f[0]+c[0],a[1]=f[1]+c[1],a[2]=f[2]+c[2],a},h.rotateZ=function(a,b,c,d){var e=[],f=[];return e[0]=b[0]-c[0],e[1]=b[1]-c[1],e[2]=b[2]-c[2],f[0]=e[0]*Math.cos(d)-e[1]*Math.sin(d),f[1]=e[0]*Math.sin(d)+e[1]*Math.cos(d),f[2]=e[2],a[0]=f[0]+c[0],a[1]=f[1]+c[1],a[2]=f[2]+c[2],a},h.forEach=function(){var a=h.create();return function(b,c,d,e,f,g){var h,i;for(c||(c=3),d||(d=0),i=e?Math.min(e*c+d,b.length):b.length,h=d;i>h;h+=c)a[0]=b[h],a[1]=b[h+1],a[2]=b[h+2],f(a,a,g),b[h]=a[0],b[h+1]=a[1],b[h+2]=a[2];return b}}(),h.angle=function(a,b){var c=h.fromValues(a[0],a[1],a[2]),d=h.fromValues(b[0],b[1],b[2]);h.normalize(c,c),h.normalize(d,d);var e=h.dot(c,d);return e>1?0:Math.acos(e)},h.str=function(a){return"vec3("+a[0]+", "+a[1]+", "+a[2]+")"},"undefined"!=typeof a&&(a.vec3=h);var i={};i.create=function(){var a=new c(4);return a[0]=0,a[1]=0,a[2]=0,a[3]=0,a},i.clone=function(a){var b=new c(4);return b[0]=a[0],b[1]=a[1],b[2]=a[2],b[3]=a[3],b},i.fromValues=function(a,b,d,e){var f=new c(4);return f[0]=a,f[1]=b,f[2]=d,f[3]=e,f},i.copy=function(a,b){return a[0]=b[0],a[1]=b[1],a[2]=b[2],a[3]=b[3],a},i.set=function(a,b,c,d,e){return a[0]=b,a[1]=c,a[2]=d,a[3]=e,a},i.add=function(a,b,c){return a[0]=b[0]+c[0],a[1]=b[1]+c[1],a[2]=b[2]+c[2],a[3]=b[3]+c[3],a},i.subtract=function(a,b,c){return a[0]=b[0]-c[0],a[1]=b[1]-c[1],a[2]=b[2]-c[2],a[3]=b[3]-c[3],a},i.sub=i.subtract,i.multiply=function(a,b,c){return a[0]=b[0]*c[0],a[1]=b[1]*c[1],a[2]=b[2]*c[2],a[3]=b[3]*c[3],a},i.mul=i.multiply,i.divide=function(a,b,c){return a[0]=b[0]/c[0],a[1]=b[1]/c[1],a[2]=b[2]/c[2],a[3]=b[3]/c[3],a},i.div=i.divide,i.min=function(a,b,c){return a[0]=Math.min(b[0],c[0]),a[1]=Math.min(b[1],c[1]),a[2]=Math.min(b[2],c[2]),a[3]=Math.min(b[3],c[3]),a},i.max=function(a,b,c){return a[0]=Math.max(b[0],c[0]),a[1]=Math.max(b[1],c[1]),a[2]=Math.max(b[2],c[2]),a[3]=Math.max(b[3],c[3]),a},i.scale=function(a,b,c){return a[0]=b[0]*c,a[1]=b[1]*c,a[2]=b[2]*c,a[3]=b[3]*c,a},i.scaleAndAdd=function(a,b,c,d){return a[0]=b[0]+c[0]*d,a[1]=b[1]+c[1]*d,a[2]=b[2]+c[2]*d,a[3]=b[3]+c[3]*d,a},i.distance=function(a,b){var c=b[0]-a[0],d=b[1]-a[1],e=b[2]-a[2],f=b[3]-a[3];return Math.sqrt(c*c+d*d+e*e+f*f)},i.dist=i.distance,i.squaredDistance=function(a,b){var c=b[0]-a[0],d=b[1]-a[1],e=b[2]-a[2],f=b[3]-a[3];return c*c+d*d+e*e+f*f},i.sqrDist=i.squaredDistance,i.length=function(a){var b=a[0],c=a[1],d=a[2],e=a[3];return Math.sqrt(b*b+c*c+d*d+e*e)},i.len=i.length,i.squaredLength=function(a){var b=a[0],c=a[1],d=a[2],e=a[3];return b*b+c*c+d*d+e*e},i.sqrLen=i.squaredLength,i.negate=function(a,b){return a[0]=-b[0],a[1]=-b[1],a[2]=-b[2],a[3]=-b[3],a},i.inverse=function(a,b){return a[0]=1/b[0],a[1]=1/b[1],a[2]=1/b[2],a[3]=1/b[3],a},i.normalize=function(a,b){var c=b[0],d=b[1],e=b[2],f=b[3],g=c*c+d*d+e*e+f*f;return g>0&&(g=1/Math.sqrt(g),a[0]=b[0]*g,a[1]=b[1]*g,a[2]=b[2]*g,a[3]=b[3]*g),a},i.dot=function(a,b){return a[0]*b[0]+a[1]*b[1]+a[2]*b[2]+a[3]*b[3]},i.lerp=function(a,b,c,d){var e=b[0],f=b[1],g=b[2],h=b[3];return a[0]=e+d*(c[0]-e),a[1]=f+d*(c[1]-f),a[2]=g+d*(c[2]-g),a[3]=h+d*(c[3]-h),a},i.random=function(a,b){return b=b||1,a[0]=d(),a[1]=d(),a[2]=d(),a[3]=d(),i.normalize(a,a),i.scale(a,a,b),a},i.transformMat4=function(a,b,c){var d=b[0],e=b[1],f=b[2],g=b[3];return a[0]=c[0]*d+c[4]*e+c[8]*f+c[12]*g,a[1]=c[1]*d+c[5]*e+c[9]*f+c[13]*g,a[2]=c[2]*d+c[6]*e+c[10]*f+c[14]*g,a[3]=c[3]*d+c[7]*e+c[11]*f+c[15]*g,a},i.transformQuat=function(a,b,c){var d=b[0],e=b[1],f=b[2],g=c[0],h=c[1],i=c[2],j=c[3],k=j*d+h*f-i*e,l=j*e+i*d-g*f,m=j*f+g*e-h*d,n=-g*d-h*e-i*f;return a[0]=k*j+n*-g+l*-i-m*-h,a[1]=l*j+n*-h+m*-g-k*-i,a[2]=m*j+n*-i+k*-h-l*-g,a},i.forEach=function(){var a=i.create();return function(b,c,d,e,f,g){var h,i;for(c||(c=4),d||(d=0),i=e?Math.min(e*c+d,b.length):b.length,h=d;i>h;h+=c)a[0]=b[h],a[1]=b[h+1],a[2]=b[h+2],a[3]=b[h+3],f(a,a,g),b[h]=a[0],b[h+1]=a[1],b[h+2]=a[2],b[h+3]=a[3];return b}}(),i.str=function(a){return"vec4("+a[0]+", "+a[1]+", "+a[2]+", "+a[3]+")"},"undefined"!=typeof a&&(a.vec4=i);var j={};j.create=function(){var a=new c(4);return a[0]=1,a[1]=0,a[2]=0,a[3]=1,a},j.clone=function(a){var b=new c(4);return b[0]=a[0],b[1]=a[1],b[2]=a[2],b[3]=a[3],b},j.copy=function(a,b){return a[0]=b[0],a[1]=b[1],a[2]=b[2],a[3]=b[3],a},j.identity=function(a){return a[0]=1,a[1]=0,a[2]=0,a[3]=1,a},j.transpose=function(a,b){if(a===b){var c=b[1];a[1]=b[2],a[2]=c}else a[0]=b[0],a[1]=b[2],a[2]=b[1],a[3]=b[3];return a},j.invert=function(a,b){var c=b[0],d=b[1],e=b[2],f=b[3],g=c*f-e*d;return g?(g=1/g,a[0]=f*g,a[1]=-d*g,a[2]=-e*g,a[3]=c*g,a):null},j.adjoint=function(a,b){var c=b[0];return a[0]=b[3],a[1]=-b[1],a[2]=-b[2],a[3]=c,a},j.determinant=function(a){return a[0]*a[3]-a[2]*a[1]},j.multiply=function(a,b,c){var d=b[0],e=b[1],f=b[2],g=b[3],h=c[0],i=c[1],j=c[2],k=c[3];return a[0]=d*h+f*i,a[1]=e*h+g*i,a[2]=d*j+f*k,a[3]=e*j+g*k,a},j.mul=j.multiply,j.rotate=function(a,b,c){var d=b[0],e=b[1],f=b[2],g=b[3],h=Math.sin(c),i=Math.cos(c);return a[0]=d*i+f*h,a[1]=e*i+g*h,a[2]=d*-h+f*i,a[3]=e*-h+g*i,a},j.scale=function(a,b,c){var d=b[0],e=b[1],f=b[2],g=b[3],h=c[0],i=c[1];return a[0]=d*h,a[1]=e*h,a[2]=f*i,a[3]=g*i,a},j.str=function(a){return"mat2("+a[0]+", "+a[1]+", "+a[2]+", "+a[3]+")"},j.frob=function(a){return Math.sqrt(Math.pow(a[0],2)+Math.pow(a[1],2)+Math.pow(a[2],2)+Math.pow(a[3],2))},j.LDU=function(a,b,c,d){return a[2]=d[2]/d[0],c[0]=d[0],c[1]=d[1],c[3]=d[3]-a[2]*c[1],[a,b,c]},"undefined"!=typeof a&&(a.mat2=j);var k={};k.create=function(){var a=new c(6);return a[0]=1,a[1]=0,a[2]=0,a[3]=1,a[4]=0,a[5]=0,a},k.clone=function(a){var b=new c(6);return b[0]=a[0],b[1]=a[1],b[2]=a[2],b[3]=a[3],b[4]=a[4],b[5]=a[5],b},k.copy=function(a,b){return a[0]=b[0],a[1]=b[1],a[2]=b[2],a[3]=b[3],a[4]=b[4],a[5]=b[5],a},k.identity=function(a){return a[0]=1,a[1]=0,a[2]=0,a[3]=1,a[4]=0,a[5]=0,a},k.invert=function(a,b){var c=b[0],d=b[1],e=b[2],f=b[3],g=b[4],h=b[5],i=c*f-d*e;return i?(i=1/i,a[0]=f*i,a[1]=-d*i,a[2]=-e*i,a[3]=c*i,a[4]=(e*h-f*g)*i,a[5]=(d*g-c*h)*i,a):null},k.determinant=function(a){return a[0]*a[3]-a[1]*a[2]},k.multiply=function(a,b,c){var d=b[0],e=b[1],f=b[2],g=b[3],h=b[4],i=b[5],j=c[0],k=c[1],l=c[2],m=c[3],n=c[4],o=c[5];return a[0]=d*j+f*k,a[1]=e*j+g*k,a[2]=d*l+f*m,a[3]=e*l+g*m,a[4]=d*n+f*o+h,a[5]=e*n+g*o+i,a},k.mul=k.multiply,k.rotate=function(a,b,c){var d=b[0],e=b[1],f=b[2],g=b[3],h=b[4],i=b[5],j=Math.sin(c),k=Math.cos(c);return a[0]=d*k+f*j,a[1]=e*k+g*j,a[2]=d*-j+f*k,a[3]=e*-j+g*k,a[4]=h,a[5]=i,a},k.scale=function(a,b,c){var d=b[0],e=b[1],f=b[2],g=b[3],h=b[4],i=b[5],j=c[0],k=c[1];return a[0]=d*j,a[1]=e*j,a[2]=f*k,a[3]=g*k,a[4]=h,a[5]=i,a},k.translate=function(a,b,c){var d=b[0],e=b[1],f=b[2],g=b[3],h=b[4],i=b[5],j=c[0],k=c[1];return a[0]=d,a[1]=e,a[2]=f,a[3]=g,a[4]=d*j+f*k+h,a[5]=e*j+g*k+i,a},k.str=function(a){return"mat2d("+a[0]+", "+a[1]+", "+a[2]+", "+a[3]+", "+a[4]+", "+a[5]+")"},k.frob=function(a){return Math.sqrt(Math.pow(a[0],2)+Math.pow(a[1],2)+Math.pow(a[2],2)+Math.pow(a[3],2)+Math.pow(a[4],2)+Math.pow(a[5],2)+1)},"undefined"!=typeof a&&(a.mat2d=k);var l={};l.create=function(){var a=new c(9);return a[0]=1,a[1]=0,a[2]=0,a[3]=0,a[4]=1,a[5]=0,a[6]=0,a[7]=0,a[8]=1,a},l.fromMat4=function(a,b){return a[0]=b[0],a[1]=b[1],a[2]=b[2],a[3]=b[4],a[4]=b[5],a[5]=b[6],a[6]=b[8],a[7]=b[9],a[8]=b[10],a},l.clone=function(a){var b=new c(9);return b[0]=a[0],b[1]=a[1],b[2]=a[2],b[3]=a[3],b[4]=a[4],b[5]=a[5],b[6]=a[6],b[7]=a[7],b[8]=a[8],b},l.copy=function(a,b){return a[0]=b[0],a[1]=b[1],a[2]=b[2],a[3]=b[3],a[4]=b[4],a[5]=b[5],a[6]=b[6],a[7]=b[7],a[8]=b[8],a},l.identity=function(a){return a[0]=1,a[1]=0,a[2]=0,a[3]=0,a[4]=1,a[5]=0,a[6]=0,a[7]=0,a[8]=1,a},l.transpose=function(a,b){if(a===b){var c=b[1],d=b[2],e=b[5];a[1]=b[3],a[2]=b[6],a[3]=c,a[5]=b[7],a[6]=d,a[7]=e}else a[0]=b[0],a[1]=b[3],a[2]=b[6],a[3]=b[1],a[4]=b[4],a[5]=b[7],a[6]=b[2],a[7]=b[5],a[8]=b[8];return a},l.invert=function(a,b){var c=b[0],d=b[1],e=b[2],f=b[3],g=b[4],h=b[5],i=b[6],j=b[7],k=b[8],l=k*g-h*j,m=-k*f+h*i,n=j*f-g*i,o=c*l+d*m+e*n;return o?(o=1/o,a[0]=l*o,a[1]=(-k*d+e*j)*o,a[2]=(h*d-e*g)*o,a[3]=m*o,a[4]=(k*c-e*i)*o,a[5]=(-h*c+e*f)*o,a[6]=n*o,a[7]=(-j*c+d*i)*o,a[8]=(g*c-d*f)*o,a):null},l.adjoint=function(a,b){var c=b[0],d=b[1],e=b[2],f=b[3],g=b[4],h=b[5],i=b[6],j=b[7],k=b[8];return a[0]=g*k-h*j,a[1]=e*j-d*k,a[2]=d*h-e*g,a[3]=h*i-f*k,a[4]=c*k-e*i,a[5]=e*f-c*h,a[6]=f*j-g*i,a[7]=d*i-c*j,a[8]=c*g-d*f,a},l.determinant=function(a){var b=a[0],c=a[1],d=a[2],e=a[3],f=a[4],g=a[5],h=a[6],i=a[7],j=a[8];return b*(j*f-g*i)+c*(-j*e+g*h)+d*(i*e-f*h)},l.multiply=function(a,b,c){var d=b[0],e=b[1],f=b[2],g=b[3],h=b[4],i=b[5],j=b[6],k=b[7],l=b[8],m=c[0],n=c[1],o=c[2],p=c[3],q=c[4],r=c[5],s=c[6],t=c[7],u=c[8];return a[0]=m*d+n*g+o*j,a[1]=m*e+n*h+o*k,a[2]=m*f+n*i+o*l,a[3]=p*d+q*g+r*j,a[4]=p*e+q*h+r*k,a[5]=p*f+q*i+r*l,a[6]=s*d+t*g+u*j,a[7]=s*e+t*h+u*k,a[8]=s*f+t*i+u*l,a},l.mul=l.multiply,l.translate=function(a,b,c){var d=b[0],e=b[1],f=b[2],g=b[3],h=b[4],i=b[5],j=b[6],k=b[7],l=b[8],m=c[0],n=c[1];return a[0]=d,a[1]=e,a[2]=f,a[3]=g,a[4]=h,a[5]=i,a[6]=m*d+n*g+j,a[7]=m*e+n*h+k,a[8]=m*f+n*i+l,a},l.rotate=function(a,b,c){var d=b[0],e=b[1],f=b[2],g=b[3],h=b[4],i=b[5],j=b[6],k=b[7],l=b[8],m=Math.sin(c),n=Math.cos(c);return a[0]=n*d+m*g,a[1]=n*e+m*h,a[2]=n*f+m*i,a[3]=n*g-m*d,a[4]=n*h-m*e,a[5]=n*i-m*f,a[6]=j,a[7]=k,a[8]=l,a},l.scale=function(a,b,c){var d=c[0],e=c[1];return a[0]=d*b[0],a[1]=d*b[1],a[2]=d*b[2],a[3]=e*b[3],a[4]=e*b[4],a[5]=e*b[5],a[6]=b[6],a[7]=b[7],a[8]=b[8],a},l.fromMat2d=function(a,b){return a[0]=b[0],a[1]=b[1],a[2]=0,a[3]=b[2],a[4]=b[3],a[5]=0,a[6]=b[4],a[7]=b[5],a[8]=1,a},l.fromQuat=function(a,b){var c=b[0],d=b[1],e=b[2],f=b[3],g=c+c,h=d+d,i=e+e,j=c*g,k=d*g,l=d*h,m=e*g,n=e*h,o=e*i,p=f*g,q=f*h,r=f*i;return a[0]=1-l-o,a[3]=k-r,a[6]=m+q,a[1]=k+r,a[4]=1-j-o,a[7]=n-p,a[2]=m-q,a[5]=n+p,a[8]=1-j-l,a},l.normalFromMat4=function(a,b){var c=b[0],d=b[1],e=b[2],f=b[3],g=b[4],h=b[5],i=b[6],j=b[7],k=b[8],l=b[9],m=b[10],n=b[11],o=b[12],p=b[13],q=b[14],r=b[15],s=c*h-d*g,t=c*i-e*g,u=c*j-f*g,v=d*i-e*h,w=d*j-f*h,x=e*j-f*i,y=k*p-l*o,z=k*q-m*o,A=k*r-n*o,B=l*q-m*p,C=l*r-n*p,D=m*r-n*q,E=s*D-t*C+u*B+v*A-w*z+x*y;return E?(E=1/E,a[0]=(h*D-i*C+j*B)*E,a[1]=(i*A-g*D-j*z)*E,a[2]=(g*C-h*A+j*y)*E,a[3]=(e*C-d*D-f*B)*E,a[4]=(c*D-e*A+f*z)*E,a[5]=(d*A-c*C-f*y)*E,a[6]=(p*x-q*w+r*v)*E,a[7]=(q*u-o*x-r*t)*E,a[8]=(o*w-p*u+r*s)*E,a):null},l.str=function(a){return"mat3("+a[0]+", "+a[1]+", "+a[2]+", "+a[3]+", "+a[4]+", "+a[5]+", "+a[6]+", "+a[7]+", "+a[8]+")"},l.frob=function(a){return Math.sqrt(Math.pow(a[0],2)+Math.pow(a[1],2)+Math.pow(a[2],2)+Math.pow(a[3],2)+Math.pow(a[4],2)+Math.pow(a[5],2)+Math.pow(a[6],2)+Math.pow(a[7],2)+Math.pow(a[8],2))},"undefined"!=typeof a&&(a.mat3=l);var m={};m.create=function(){var a=new c(16);return a[0]=1,a[1]=0,a[2]=0,a[3]=0,a[4]=0,a[5]=1,a[6]=0,a[7]=0,a[8]=0,a[9]=0,a[10]=1,a[11]=0,a[12]=0,a[13]=0,a[14]=0,a[15]=1,a},m.clone=function(a){var b=new c(16);return b[0]=a[0],b[1]=a[1],b[2]=a[2],b[3]=a[3],b[4]=a[4],b[5]=a[5],b[6]=a[6],b[7]=a[7],b[8]=a[8],b[9]=a[9],b[10]=a[10],b[11]=a[11],b[12]=a[12],b[13]=a[13],b[14]=a[14],b[15]=a[15],b},m.copy=function(a,b){return a[0]=b[0],a[1]=b[1],a[2]=b[2],a[3]=b[3],a[4]=b[4],a[5]=b[5],a[6]=b[6],a[7]=b[7],a[8]=b[8],a[9]=b[9],a[10]=b[10],a[11]=b[11],a[12]=b[12],a[13]=b[13],a[14]=b[14],a[15]=b[15],a},m.identity=function(a){return a[0]=1,a[1]=0,a[2]=0,a[3]=0,a[4]=0,a[5]=1,a[6]=0,a[7]=0,a[8]=0,a[9]=0,a[10]=1,a[11]=0,a[12]=0,a[13]=0,a[14]=0,a[15]=1,a},m.transpose=function(a,b){if(a===b){var c=b[1],d=b[2],e=b[3],f=b[6],g=b[7],h=b[11];a[1]=b[4],a[2]=b[8],a[3]=b[12],a[4]=c,a[6]=b[9],a[7]=b[13],a[8]=d,a[9]=f,a[11]=b[14],a[12]=e,a[13]=g,a[14]=h}else a[0]=b[0],a[1]=b[4],a[2]=b[8],a[3]=b[12],a[4]=b[1],a[5]=b[5],a[6]=b[9],a[7]=b[13],a[8]=b[2],a[9]=b[6],a[10]=b[10],a[11]=b[14],a[12]=b[3],a[13]=b[7],a[14]=b[11],a[15]=b[15];return a},m.invert=function(a,b){var c=b[0],d=b[1],e=b[2],f=b[3],g=b[4],h=b[5],i=b[6],j=b[7],k=b[8],l=b[9],m=b[10],n=b[11],o=b[12],p=b[13],q=b[14],r=b[15],s=c*h-d*g,t=c*i-e*g,u=c*j-f*g,v=d*i-e*h,w=d*j-f*h,x=e*j-f*i,y=k*p-l*o,z=k*q-m*o,A=k*r-n*o,B=l*q-m*p,C=l*r-n*p,D=m*r-n*q,E=s*D-t*C+u*B+v*A-w*z+x*y;return E?(E=1/E,a[0]=(h*D-i*C+j*B)*E,a[1]=(e*C-d*D-f*B)*E,a[2]=(p*x-q*w+r*v)*E,a[3]=(m*w-l*x-n*v)*E,a[4]=(i*A-g*D-j*z)*E,a[5]=(c*D-e*A+f*z)*E,a[6]=(q*u-o*x-r*t)*E,a[7]=(k*x-m*u+n*t)*E,a[8]=(g*C-h*A+j*y)*E,a[9]=(d*A-c*C-f*y)*E,a[10]=(o*w-p*u+r*s)*E,a[11]=(l*u-k*w-n*s)*E,a[12]=(h*z-g*B-i*y)*E,a[13]=(c*B-d*z+e*y)*E,a[14]=(p*t-o*v-q*s)*E,a[15]=(k*v-l*t+m*s)*E,a):null},m.adjoint=function(a,b){var c=b[0],d=b[1],e=b[2],f=b[3],g=b[4],h=b[5],i=b[6],j=b[7],k=b[8],l=b[9],m=b[10],n=b[11],o=b[12],p=b[13],q=b[14],r=b[15];return a[0]=h*(m*r-n*q)-l*(i*r-j*q)+p*(i*n-j*m),a[1]=-(d*(m*r-n*q)-l*(e*r-f*q)+p*(e*n-f*m)),a[2]=d*(i*r-j*q)-h*(e*r-f*q)+p*(e*j-f*i),a[3]=-(d*(i*n-j*m)-h*(e*n-f*m)+l*(e*j-f*i)),a[4]=-(g*(m*r-n*q)-k*(i*r-j*q)+o*(i*n-j*m)),a[5]=c*(m*r-n*q)-k*(e*r-f*q)+o*(e*n-f*m),a[6]=-(c*(i*r-j*q)-g*(e*r-f*q)+o*(e*j-f*i)),a[7]=c*(i*n-j*m)-g*(e*n-f*m)+k*(e*j-f*i),a[8]=g*(l*r-n*p)-k*(h*r-j*p)+o*(h*n-j*l),a[9]=-(c*(l*r-n*p)-k*(d*r-f*p)+o*(d*n-f*l)),a[10]=c*(h*r-j*p)-g*(d*r-f*p)+o*(d*j-f*h),a[11]=-(c*(h*n-j*l)-g*(d*n-f*l)+k*(d*j-f*h)),a[12]=-(g*(l*q-m*p)-k*(h*q-i*p)+o*(h*m-i*l)),a[13]=c*(l*q-m*p)-k*(d*q-e*p)+o*(d*m-e*l),a[14]=-(c*(h*q-i*p)-g*(d*q-e*p)+o*(d*i-e*h)),a[15]=c*(h*m-i*l)-g*(d*m-e*l)+k*(d*i-e*h),a},m.determinant=function(a){var b=a[0],c=a[1],d=a[2],e=a[3],f=a[4],g=a[5],h=a[6],i=a[7],j=a[8],k=a[9],l=a[10],m=a[11],n=a[12],o=a[13],p=a[14],q=a[15],r=b*g-c*f,s=b*h-d*f,t=b*i-e*f,u=c*h-d*g,v=c*i-e*g,w=d*i-e*h,x=j*o-k*n,y=j*p-l*n,z=j*q-m*n,A=k*p-l*o,B=k*q-m*o,C=l*q-m*p;return r*C-s*B+t*A+u*z-v*y+w*x},m.multiply=function(a,b,c){var d=b[0],e=b[1],f=b[2],g=b[3],h=b[4],i=b[5],j=b[6],k=b[7],l=b[8],m=b[9],n=b[10],o=b[11],p=b[12],q=b[13],r=b[14],s=b[15],t=c[0],u=c[1],v=c[2],w=c[3];return a[0]=t*d+u*h+v*l+w*p,a[1]=t*e+u*i+v*m+w*q,a[2]=t*f+u*j+v*n+w*r,a[3]=t*g+u*k+v*o+w*s,t=c[4],u=c[5],v=c[6],w=c[7],a[4]=t*d+u*h+v*l+w*p,a[5]=t*e+u*i+v*m+w*q,a[6]=t*f+u*j+v*n+w*r,a[7]=t*g+u*k+v*o+w*s,t=c[8],u=c[9],v=c[10],w=c[11],a[8]=t*d+u*h+v*l+w*p,a[9]=t*e+u*i+v*m+w*q,a[10]=t*f+u*j+v*n+w*r,a[11]=t*g+u*k+v*o+w*s,t=c[12],u=c[13],v=c[14],w=c[15],a[12]=t*d+u*h+v*l+w*p,a[13]=t*e+u*i+v*m+w*q,a[14]=t*f+u*j+v*n+w*r,a[15]=t*g+u*k+v*o+w*s,a},m.mul=m.multiply,m.translate=function(a,b,c){var d,e,f,g,h,i,j,k,l,m,n,o,p=c[0],q=c[1],r=c[2];return b===a?(a[12]=b[0]*p+b[4]*q+b[8]*r+b[12],a[13]=b[1]*p+b[5]*q+b[9]*r+b[13],a[14]=b[2]*p+b[6]*q+b[10]*r+b[14],a[15]=b[3]*p+b[7]*q+b[11]*r+b[15]):(d=b[0],e=b[1],f=b[2],g=b[3],h=b[4],i=b[5],j=b[6],k=b[7],l=b[8],m=b[9],n=b[10],o=b[11],a[0]=d,a[1]=e,a[2]=f,a[3]=g,a[4]=h,a[5]=i,a[6]=j,a[7]=k,a[8]=l,a[9]=m,a[10]=n,a[11]=o,a[12]=d*p+h*q+l*r+b[12],a[13]=e*p+i*q+m*r+b[13],a[14]=f*p+j*q+n*r+b[14],a[15]=g*p+k*q+o*r+b[15]),a},m.scale=function(a,b,c){var d=c[0],e=c[1],f=c[2];return a[0]=b[0]*d,a[1]=b[1]*d,a[2]=b[2]*d,a[3]=b[3]*d,a[4]=b[4]*e,a[5]=b[5]*e,a[6]=b[6]*e,a[7]=b[7]*e,a[8]=b[8]*f,a[9]=b[9]*f,a[10]=b[10]*f,a[11]=b[11]*f,a[12]=b[12],a[13]=b[13],a[14]=b[14],a[15]=b[15],a},m.rotate=function(a,c,d,e){var f,g,h,i,j,k,l,m,n,o,p,q,r,s,t,u,v,w,x,y,z,A,B,C,D=e[0],E=e[1],F=e[2],G=Math.sqrt(D*D+E*E+F*F);return Math.abs(G)<b?null:(G=1/G,D*=G,E*=G,F*=G,f=Math.sin(d),g=Math.cos(d),h=1-g,i=c[0],j=c[1],k=c[2],l=c[3],m=c[4],n=c[5],o=c[6],p=c[7],q=c[8],r=c[9],s=c[10],t=c[11],u=D*D*h+g,v=E*D*h+F*f,w=F*D*h-E*f,x=D*E*h-F*f,y=E*E*h+g,z=F*E*h+D*f,A=D*F*h+E*f,B=E*F*h-D*f,C=F*F*h+g,a[0]=i*u+m*v+q*w,a[1]=j*u+n*v+r*w,a[2]=k*u+o*v+s*w,a[3]=l*u+p*v+t*w,a[4]=i*x+m*y+q*z,a[5]=j*x+n*y+r*z,a[6]=k*x+o*y+s*z,a[7]=l*x+p*y+t*z,a[8]=i*A+m*B+q*C,a[9]=j*A+n*B+r*C,a[10]=k*A+o*B+s*C,a[11]=l*A+p*B+t*C,c!==a&&(a[12]=c[12],a[13]=c[13],a[14]=c[14],a[15]=c[15]),a)},m.rotateX=function(a,b,c){var d=Math.sin(c),e=Math.cos(c),f=b[4],g=b[5],h=b[6],i=b[7],j=b[8],k=b[9],l=b[10],m=b[11];return b!==a&&(a[0]=b[0],a[1]=b[1],a[2]=b[2],a[3]=b[3],a[12]=b[12],a[13]=b[13],a[14]=b[14],a[15]=b[15]),a[4]=f*e+j*d,a[5]=g*e+k*d,a[6]=h*e+l*d,a[7]=i*e+m*d,a[8]=j*e-f*d,a[9]=k*e-g*d,a[10]=l*e-h*d,a[11]=m*e-i*d,a},m.rotateY=function(a,b,c){var d=Math.sin(c),e=Math.cos(c),f=b[0],g=b[1],h=b[2],i=b[3],j=b[8],k=b[9],l=b[10],m=b[11];return b!==a&&(a[4]=b[4],a[5]=b[5],a[6]=b[6],a[7]=b[7],a[12]=b[12],a[13]=b[13],a[14]=b[14],a[15]=b[15]),a[0]=f*e-j*d,a[1]=g*e-k*d,a[2]=h*e-l*d,a[3]=i*e-m*d,a[8]=f*d+j*e,a[9]=g*d+k*e,a[10]=h*d+l*e,a[11]=i*d+m*e,a},m.rotateZ=function(a,b,c){var d=Math.sin(c),e=Math.cos(c),f=b[0],g=b[1],h=b[2],i=b[3],j=b[4],k=b[5],l=b[6],m=b[7];return b!==a&&(a[8]=b[8],a[9]=b[9],a[10]=b[10],a[11]=b[11],a[12]=b[12],a[13]=b[13],a[14]=b[14],a[15]=b[15]),a[0]=f*e+j*d,a[1]=g*e+k*d,a[2]=h*e+l*d,a[3]=i*e+m*d,a[4]=j*e-f*d,a[5]=k*e-g*d,a[6]=l*e-h*d,a[7]=m*e-i*d,a},m.fromRotationTranslation=function(a,b,c){var d=b[0],e=b[1],f=b[2],g=b[3],h=d+d,i=e+e,j=f+f,k=d*h,l=d*i,m=d*j,n=e*i,o=e*j,p=f*j,q=g*h,r=g*i,s=g*j;return a[0]=1-(n+p),a[1]=l+s,a[2]=m-r,a[3]=0,a[4]=l-s,a[5]=1-(k+p),a[6]=o+q,a[7]=0,a[8]=m+r,a[9]=o-q,a[10]=1-(k+n),a[11]=0,a[12]=c[0],a[13]=c[1],a[14]=c[2],a[15]=1,a},m.fromQuat=function(a,b){var c=b[0],d=b[1],e=b[2],f=b[3],g=c+c,h=d+d,i=e+e,j=c*g,k=d*g,l=d*h,m=e*g,n=e*h,o=e*i,p=f*g,q=f*h,r=f*i;return a[0]=1-l-o,a[1]=k+r,a[2]=m-q,a[3]=0,a[4]=k-r,a[5]=1-j-o,a[6]=n+p,a[7]=0,a[8]=m+q,a[9]=n-p,a[10]=1-j-l,a[11]=0,a[12]=0,a[13]=0,a[14]=0,a[15]=1,a},m.frustum=function(a,b,c,d,e,f,g){var h=1/(c-b),i=1/(e-d),j=1/(f-g);return a[0]=2*f*h,a[1]=0,a[2]=0,a[3]=0,a[4]=0,a[5]=2*f*i,a[6]=0,a[7]=0,a[8]=(c+b)*h,a[9]=(e+d)*i,a[10]=(g+f)*j,a[11]=-1,a[12]=0,a[13]=0,a[14]=2*g*f*j,a[15]=0,a},m.perspective=function(a,b,c,d,e){var f=1/Math.tan(b/2),g=1/(d-e);return a[0]=f/c,a[1]=0,a[2]=0,a[3]=0,a[4]=0,a[5]=f,a[6]=0,a[7]=0,a[8]=0,a[9]=0,a[10]=(e+d)*g,a[11]=-1,a[12]=0,a[13]=0,a[14]=2*e*d*g,a[15]=0,a},m.ortho=function(a,b,c,d,e,f,g){var h=1/(b-c),i=1/(d-e),j=1/(f-g);return a[0]=-2*h,a[1]=0,a[2]=0,a[3]=0,a[4]=0,a[5]=-2*i,a[6]=0,a[7]=0,a[8]=0,a[9]=0,a[10]=2*j,a[11]=0,a[12]=(b+c)*h,a[13]=(e+d)*i,a[14]=(g+f)*j,a[15]=1,a},m.lookAt=function(a,c,d,e){var f,g,h,i,j,k,l,n,o,p,q=c[0],r=c[1],s=c[2],t=e[0],u=e[1],v=e[2],w=d[0],x=d[1],y=d[2];return Math.abs(q-w)<b&&Math.abs(r-x)<b&&Math.abs(s-y)<b?m.identity(a):(l=q-w,n=r-x,o=s-y,p=1/Math.sqrt(l*l+n*n+o*o),l*=p,n*=p,o*=p,f=u*o-v*n,g=v*l-t*o,h=t*n-u*l,p=Math.sqrt(f*f+g*g+h*h),p?(p=1/p,f*=p,g*=p,h*=p):(f=0,g=0,h=0),i=n*h-o*g,j=o*f-l*h,k=l*g-n*f,p=Math.sqrt(i*i+j*j+k*k),p?(p=1/p,i*=p,j*=p,k*=p):(i=0,j=0,k=0),a[0]=f,a[1]=i,a[2]=l,a[3]=0,a[4]=g,a[5]=j,a[6]=n,a[7]=0,a[8]=h,a[9]=k,a[10]=o,a[11]=0,a[12]=-(f*q+g*r+h*s),a[13]=-(i*q+j*r+k*s),a[14]=-(l*q+n*r+o*s),a[15]=1,a)},m.str=function(a){return"mat4("+a[0]+", "+a[1]+", "+a[2]+", "+a[3]+", "+a[4]+", "+a[5]+", "+a[6]+", "+a[7]+", "+a[8]+", "+a[9]+", "+a[10]+", "+a[11]+", "+a[12]+", "+a[13]+", "+a[14]+", "+a[15]+")"},m.frob=function(a){return Math.sqrt(Math.pow(a[0],2)+Math.pow(a[1],2)+Math.pow(a[2],2)+Math.pow(a[3],2)+Math.pow(a[4],2)+Math.pow(a[5],2)+Math.pow(a[6],2)+Math.pow(a[7],2)+Math.pow(a[8],2)+Math.pow(a[9],2)+Math.pow(a[10],2)+Math.pow(a[11],2)+Math.pow(a[12],2)+Math.pow(a[13],2)+Math.pow(a[14],2)+Math.pow(a[15],2))},"undefined"!=typeof a&&(a.mat4=m);var n={};n.create=function(){var a=new c(4);return a[0]=0,a[1]=0,a[2]=0,a[3]=1,a},n.rotationTo=function(){var a=h.create(),b=h.fromValues(1,0,0),c=h.fromValues(0,1,0);return function(d,e,f){var g=h.dot(e,f);return-.999999>g?(h.cross(a,b,e),h.length(a)<1e-6&&h.cross(a,c,e),h.normalize(a,a),n.setAxisAngle(d,a,Math.PI),d):g>.999999?(d[0]=0,d[1]=0,d[2]=0,d[3]=1,d):(h.cross(a,e,f),d[0]=a[0],d[1]=a[1],d[2]=a[2],d[3]=1+g,n.normalize(d,d))
}}(),n.setAxes=function(){var a=l.create();return function(b,c,d,e){return a[0]=d[0],a[3]=d[1],a[6]=d[2],a[1]=e[0],a[4]=e[1],a[7]=e[2],a[2]=-c[0],a[5]=-c[1],a[8]=-c[2],n.normalize(b,n.fromMat3(b,a))}}(),n.clone=i.clone,n.fromValues=i.fromValues,n.copy=i.copy,n.set=i.set,n.identity=function(a){return a[0]=0,a[1]=0,a[2]=0,a[3]=1,a},n.setAxisAngle=function(a,b,c){c=.5*c;var d=Math.sin(c);return a[0]=d*b[0],a[1]=d*b[1],a[2]=d*b[2],a[3]=Math.cos(c),a},n.add=i.add,n.multiply=function(a,b,c){var d=b[0],e=b[1],f=b[2],g=b[3],h=c[0],i=c[1],j=c[2],k=c[3];return a[0]=d*k+g*h+e*j-f*i,a[1]=e*k+g*i+f*h-d*j,a[2]=f*k+g*j+d*i-e*h,a[3]=g*k-d*h-e*i-f*j,a},n.mul=n.multiply,n.scale=i.scale,n.rotateX=function(a,b,c){c*=.5;var d=b[0],e=b[1],f=b[2],g=b[3],h=Math.sin(c),i=Math.cos(c);return a[0]=d*i+g*h,a[1]=e*i+f*h,a[2]=f*i-e*h,a[3]=g*i-d*h,a},n.rotateY=function(a,b,c){c*=.5;var d=b[0],e=b[1],f=b[2],g=b[3],h=Math.sin(c),i=Math.cos(c);return a[0]=d*i-f*h,a[1]=e*i+g*h,a[2]=f*i+d*h,a[3]=g*i-e*h,a},n.rotateZ=function(a,b,c){c*=.5;var d=b[0],e=b[1],f=b[2],g=b[3],h=Math.sin(c),i=Math.cos(c);return a[0]=d*i+e*h,a[1]=e*i-d*h,a[2]=f*i+g*h,a[3]=g*i-f*h,a},n.calculateW=function(a,b){var c=b[0],d=b[1],e=b[2];return a[0]=c,a[1]=d,a[2]=e,a[3]=Math.sqrt(Math.abs(1-c*c-d*d-e*e)),a},n.dot=i.dot,n.lerp=i.lerp,n.slerp=function(a,b,c,d){var e,f,g,h,i,j=b[0],k=b[1],l=b[2],m=b[3],n=c[0],o=c[1],p=c[2],q=c[3];return f=j*n+k*o+l*p+m*q,0>f&&(f=-f,n=-n,o=-o,p=-p,q=-q),1-f>1e-6?(e=Math.acos(f),g=Math.sin(e),h=Math.sin((1-d)*e)/g,i=Math.sin(d*e)/g):(h=1-d,i=d),a[0]=h*j+i*n,a[1]=h*k+i*o,a[2]=h*l+i*p,a[3]=h*m+i*q,a},n.invert=function(a,b){var c=b[0],d=b[1],e=b[2],f=b[3],g=c*c+d*d+e*e+f*f,h=g?1/g:0;return a[0]=-c*h,a[1]=-d*h,a[2]=-e*h,a[3]=f*h,a},n.conjugate=function(a,b){return a[0]=-b[0],a[1]=-b[1],a[2]=-b[2],a[3]=b[3],a},n.length=i.length,n.len=n.length,n.squaredLength=i.squaredLength,n.sqrLen=n.squaredLength,n.normalize=i.normalize,n.fromMat3=function(a,b){var c,d=b[0]+b[4]+b[8];if(d>0)c=Math.sqrt(d+1),a[3]=.5*c,c=.5/c,a[0]=(b[5]-b[7])*c,a[1]=(b[6]-b[2])*c,a[2]=(b[1]-b[3])*c;else{var e=0;b[4]>b[0]&&(e=1),b[8]>b[3*e+e]&&(e=2);var f=(e+1)%3,g=(e+2)%3;c=Math.sqrt(b[3*e+e]-b[3*f+f]-b[3*g+g]+1),a[e]=.5*c,c=.5/c,a[3]=(b[3*f+g]-b[3*g+f])*c,a[f]=(b[3*f+e]+b[3*e+f])*c,a[g]=(b[3*g+e]+b[3*e+g])*c}return a},n.str=function(a){return"quat("+a[0]+", "+a[1]+", "+a[2]+", "+a[3]+")"},"undefined"!=typeof a&&(a.quat=n)}(b.exports)}(this),d("qtek/math/Vector3",["require","../dep/glmatrix"],function(a){function b(a,b,c){return b>a?b:a>c?c:a}var c=a("../dep/glmatrix"),d=c.vec3,e=function(a,b,c){a=a||0,b=b||0,c=c||0,this._array=d.fromValues(a,b,c),this._dirty=!0};e.prototype={constructor:e,add:function(a){return d.add(this._array,this._array,a._array),this._dirty=!0,this},set:function(a,b,c){return this._array[0]=a,this._array[1]=b,this._array[2]=c,this._dirty=!0,this},setArray:function(a){return this._array[0]=a[0],this._array[1]=a[1],this._array[2]=a[2],this._dirty=!0,this},clone:function(){return new e(this.x,this.y,this.z)},copy:function(a){return d.copy(this._array,a._array),this._dirty=!0,this},cross:function(a,b){return d.cross(this._array,a._array,b._array),this._dirty=!0,this},dist:function(a){return d.dist(this._array,a._array)},distance:function(a){return d.distance(this._array,a._array)},div:function(a){return d.div(this._array,this._array,a._array),this._dirty=!0,this},divide:function(a){return d.divide(this._array,this._array,a._array),this._dirty=!0,this},dot:function(a){return d.dot(this._array,a._array)},len:function(){return d.len(this._array)},length:function(){return d.length(this._array)},lerp:function(a,b,c){return d.lerp(this._array,a._array,b._array,c),this._dirty=!0,this},min:function(a){return d.min(this._array,this._array,a._array),this._dirty=!0,this},max:function(a){return d.max(this._array,this._array,a._array),this._dirty=!0,this},mul:function(a){return d.mul(this._array,this._array,a._array),this._dirty=!0,this},multiply:function(a){return d.multiply(this._array,this._array,a._array),this._dirty=!0,this},negate:function(){return d.negate(this._array,this._array),this._dirty=!0,this},normalize:function(){return d.normalize(this._array,this._array),this._dirty=!0,this},random:function(a){return d.random(this._array,a),this._dirty=!0,this},scale:function(a){return d.scale(this._array,this._array,a),this._dirty=!0,this},scaleAndAdd:function(a,b){return d.scaleAndAdd(this._array,this._array,a._array,b),this._dirty=!0,this},sqrDist:function(a){return d.sqrDist(this._array,a._array)},squaredDistance:function(a){return d.squaredDistance(this._array,a._array)},sqrLen:function(){return d.sqrLen(this._array)},squaredLength:function(){return d.squaredLength(this._array)},sub:function(a){return d.sub(this._array,this._array,a._array),this._dirty=!0,this},subtract:function(a){return d.subtract(this._array,this._array,a._array),this._dirty=!0,this},transformMat3:function(a){return d.transformMat3(this._array,this._array,a._array),this._dirty=!0,this},transformMat4:function(a){return d.transformMat4(this._array,this._array,a._array),this._dirty=!0,this},transformQuat:function(a){return d.transformQuat(this._array,this._array,a._array),this._dirty=!0,this},applyProjection:function(a){var b=this._array;if(a=a._array,0===a[15]){var c=-1/b[2];b[0]=a[0]*b[0]*c,b[1]=a[5]*b[1]*c,b[2]=(a[10]*b[2]+a[14])*c}else b[0]=a[0]*b[0]+a[12],b[1]=a[5]*b[1]+a[13],b[2]=a[10]*b[2]+a[14];return this._dirty=!0,this},eulerFromQuaternion:function(a,b){e.eulerFromQuaternion(this,a,b)},toString:function(){return"["+Array.prototype.join.call(this._array,",")+"]"}};var f=Object.defineProperty;if(f){var g=e.prototype;f(g,"x",{get:function(){return this._array[0]},set:function(a){this._array[0]=a,this._dirty=!0}}),f(g,"y",{get:function(){return this._array[1]},set:function(a){this._array[1]=a,this._dirty=!0}}),f(g,"z",{get:function(){return this._array[2]},set:function(a){this._array[2]=a,this._dirty=!0}})}return e.add=function(a,b,c){return d.add(a._array,b._array,c._array),a._dirty=!0,a},e.set=function(a,b,c,e){d.set(a._array,b,c,e),a._dirty=!0},e.copy=function(a,b){return d.copy(a._array,b._array),a._dirty=!0,a},e.cross=function(a,b,c){return d.cross(a._array,b._array,c._array),a._dirty=!0,a},e.dist=function(a,b){return d.distance(a._array,b._array)},e.distance=e.dist,e.div=function(a,b,c){return d.divide(a._array,b._array,c._array),a._dirty=!0,a},e.divide=e.div,e.dot=function(a,b){return d.dot(a._array,b._array)},e.len=function(a){return d.length(a._array)},e.lerp=function(a,b,c,e){return d.lerp(a._array,b._array,c._array,e),a._dirty=!0,a},e.min=function(a,b,c){return d.min(a._array,b._array,c._array),a._dirty=!0,a},e.max=function(a,b,c){return d.max(a._array,b._array,c._array),a._dirty=!0,a},e.mul=function(a,b,c){return d.multiply(a._array,b._array,c._array),a._dirty=!0,a},e.multiply=e.mul,e.negate=function(a,b){return d.negate(a._array,b._array),a._dirty=!0,a},e.normalize=function(a,b){return d.normalize(a._array,b._array),a._dirty=!0,a},e.random=function(a,b){return d.random(a._array,b),a._dirty=!0,a},e.scale=function(a,b,c){return d.scale(a._array,b._array,c),a._dirty=!0,a},e.scaleAndAdd=function(a,b,c,e){return d.scaleAndAdd(a._array,b._array,c._array,e),a._dirty=!0,a},e.sqrDist=function(a,b){return d.sqrDist(a._array,b._array)},e.squaredDistance=e.sqrDist,e.sqrLen=function(a){return d.sqrLen(a._array)},e.squaredLength=e.sqrLen,e.sub=function(a,b,c){return d.subtract(a._array,b._array,c._array),a._dirty=!0,a},e.subtract=e.sub,e.transformMat3=function(a,b,c){return d.transformMat3(a._array,b._array,c._array),a._dirty=!0,a},e.transformMat4=function(a,b,c){return d.transformMat4(a._array,b._array,c._array),a._dirty=!0,a},e.transformQuat=function(a,b,c){return d.transformQuat(a._array,b._array,c._array),a._dirty=!0,a},e.eulerFromQuaternion=function(a,c,d){a=a._array,c=c._array;var e=c[0],f=c[1],g=c[2],h=c[3],i=e*e,j=f*f,k=g*g,l=h*h,m=Math.atan2,n=Math.asin;switch(d&&d.toUpperCase()){case"YXZ":a[0]=n(b(2*(e*h-f*g),-1,1)),a[1]=m(2*(e*g+f*h),l-i-j+k),a[2]=m(2*(e*f+g*h),l-i+j-k);break;case"ZXY":a[0]=n(b(2*(e*h+f*g),-1,1)),a[1]=m(2*(f*h-g*e),l-i-j+k),a[2]=m(2*(g*h-e*f),l-i+j-k);break;case"ZYX":a[0]=m(2*(e*h+g*f),l-i-j+k),a[1]=n(b(2*(f*h-e*g),-1,1)),a[2]=m(2*(e*f+g*h),l+i-j-k);break;case"YZX":a[0]=m(2*(e*h-g*f),l-i+j-k),a[1]=m(2*(f*h-e*g),l+i-j-k),a[2]=n(b(2*(e*f+g*h),-1,1));break;case"XZY":a[0]=m(2*(e*h+f*g),l-i+j-k),a[1]=m(2*(e*g+f*h),l+i-j-k),a[2]=n(b(2*(g*h-e*f),-1,1));break;case"XYZ":default:a[0]=m(2*(e*h-f*g),l-i-j+k),a[1]=n(b(2*(e*g+f*h),-1,1)),a[2]=m(2*(g*h-e*f),l+i-j-k)}return a._dirty=!0,a},e.POSITIVE_X=new e(1,0,0),e.NEGATIVE_X=new e(-1,0,0),e.POSITIVE_Y=new e(0,1,0),e.NEGATIVE_Y=new e(0,-1,0),e.POSITIVE_Z=new e(0,0,1),e.NEGATIVE_Z=new e(0,0,-1),e.UP=new e(0,1,0),e.ZERO=new e(0,0,0),e}),d("qtek/math/Quaternion",["require","../dep/glmatrix"],function(a){var b=a("../dep/glmatrix"),c=b.quat,d=function(a,b,d,e){a=a||0,b=b||0,d=d||0,e=void 0===e?1:e,this._array=c.fromValues(a,b,d,e),this._dirty=!0};d.prototype={constructor:d,add:function(a){return c.add(this._array,this._array,a._array),this._dirty=!0,this},calculateW:function(){return c.calculateW(this._array,this._array),this._dirty=!0,this},set:function(a,b,c,d){return this._array[0]=a,this._array[1]=b,this._array[2]=c,this._array[3]=d,this._dirty=!0,this},setArray:function(a){return this._array[0]=a[0],this._array[1]=a[1],this._array[2]=a[2],this._array[3]=a[3],this._dirty=!0,this},clone:function(){return new d(this.x,this.y,this.z,this.w)},conjugate:function(){return c.conjugate(this._array,this._array),this._dirty=!0,this},copy:function(a){return c.copy(this._array,a._array),this._dirty=!0,this},dot:function(a){return c.dot(this._array,a._array)},fromMat3:function(a){return c.fromMat3(this._array,a._array),this._dirty=!0,this},fromMat4:function(){var a=b.mat3,d=a.create();return function(b){return a.fromMat4(d,b._array),a.transpose(d,d),c.fromMat3(this._array,d),this._dirty=!0,this}}(),identity:function(){return c.identity(this._array),this._dirty=!0,this},invert:function(){return c.invert(this._array,this._array),this._dirty=!0,this},len:function(){return c.len(this._array)},length:function(){return c.length(this._array)},lerp:function(a,b,d){return c.lerp(this._array,a._array,b._array,d),this._dirty=!0,this},mul:function(a){return c.mul(this._array,this._array,a._array),this._dirty=!0,this},mulLeft:function(a){return c.multiply(this._array,a._array,this._array),this._dirty=!0,this},multiply:function(a){return c.multiply(this._array,this._array,a._array),this._dirty=!0,this},multiplyLeft:function(a){return c.multiply(this._array,a._array,this._array),this._dirty=!0,this},normalize:function(){return c.normalize(this._array,this._array),this._dirty=!0,this},rotateX:function(a){return c.rotateX(this._array,this._array,a),this._dirty=!0,this},rotateY:function(a){return c.rotateY(this._array,this._array,a),this._dirty=!0,this},rotateZ:function(a){return c.rotateZ(this._array,this._array,a),this._dirty=!0,this},rotationTo:function(a,b){return c.rotationTo(this._array,a._array,b._array),this._dirty=!0,this},setAxes:function(a,b,d){return c.setAxes(this._array,a._array,b._array,d._array),this._dirty=!0,this},setAxisAngle:function(a,b){return c.setAxisAngle(this._array,a._array,b),this._dirty=!0,this},slerp:function(a,b,d){return c.slerp(this._array,a._array,b._array,d),this._dirty=!0,this},sqrLen:function(){return c.sqrLen(this._array)},squaredLength:function(){return c.squaredLength(this._array)},setFromEuler:function(){},toString:function(){return"["+Array.prototype.join.call(this._array,",")+"]"}};var e=Object.defineProperty;if(e){var f=d.prototype;e(f,"x",{get:function(){return this._array[0]},set:function(a){this._array[0]=a,this._dirty=!0}}),e(f,"y",{get:function(){return this._array[1]},set:function(a){this._array[1]=a,this._dirty=!0}}),e(f,"z",{get:function(){return this._array[2]},set:function(a){this._array[2]=a,this._dirty=!0}}),e(f,"w",{get:function(){return this._array[3]},set:function(a){this._array[3]=a,this._dirty=!0}})}return d.add=function(a,b,d){return c.add(a._array,b._array,d._array),a._dirty=!0,a},d.set=function(a,b,d,e,f){c.set(a._array,b,d,e,f),a._dirty=!0},d.copy=function(a,b){return c.copy(a._array,b._array),a._dirty=!0,a},d.calculateW=function(a,b){return c.calculateW(a._array,b._array),a._dirty=!0,a},d.conjugate=function(a,b){return c.conjugate(a._array,b._array),a._dirty=!0,a},d.identity=function(a){return c.identity(a._array),a._dirty=!0,a},d.invert=function(a,b){return c.invert(a._array,b._array),a._dirty=!0,a},d.dot=function(a,b){return c.dot(a._array,b._array)},d.len=function(a){return c.length(a._array)},d.lerp=function(a,b,d,e){return c.lerp(a._array,b._array,d._array,e),a._dirty=!0,a},d.slerp=function(a,b,d,e){return c.slerp(a._array,b._array,d._array,e),a._dirty=!0,a},d.mul=function(a,b,d){return c.multiply(a._array,b._array,d._array),a._dirty=!0,a},d.multiply=d.mul,d.rotateX=function(a,b,d){return c.rotateX(a._array,b._array,d),a._dirty=!0,a},d.rotateY=function(a,b,d){return c.rotateY(a._array,b._array,d),a._dirty=!0,a},d.rotateZ=function(a,b,d){return c.rotateZ(a._array,b._array,d),a._dirty=!0,a},d.setAxisAngle=function(a,b,d){return c.setAxisAngle(a._array,b._array,d),a._dirty=!0,a},d.normalize=function(a,b){return c.normalize(a._array,b._array),a._dirty=!0,a},d.sqrLen=function(a){return c.sqrLen(a._array)},d.squaredLength=d.sqrLen,d.fromMat3=function(a,b){return c.fromMat3(a._array,b._array),a._dirty=!0,a},d.setAxes=function(a,b,d,e){return c.setAxes(a._array,b._array,d._array,e._array),a._dirty=!0,a},d.rotationTo=function(a,b,d){return c.rotationTo(a._array,b._array,d._array),a._dirty=!0,a},d}),d("qtek/math/Matrix4",["require","../dep/glmatrix","./Vector3"],function(a){var b=a("../dep/glmatrix"),c=a("./Vector3"),d=b.mat4,e=b.vec3,f=b.mat3,g=b.quat,h=function(){this._axisX=new c,this._axisY=new c,this._axisZ=new c,this._array=d.create(),this._dirty=!0};h.prototype={constructor:h,adjoint:function(){return d.adjoint(this._array,this._array),this._dirty=!0,this},clone:function(){return(new h).copy(this)},copy:function(a){return d.copy(this._array,a._array),this._dirty=!0,this},determinant:function(){return d.determinant(this._array)},fromQuat:function(a){return d.fromQuat(this._array,a._array),this._dirty=!0,this},fromRotationTranslation:function(a,b){return d.fromRotationTranslation(this._array,a._array,b._array),this._dirty=!0,this},fromMat2d:function(a){return h.fromMat2d(this,a),this},frustum:function(a,b,c,e,f,g){return d.frustum(this._array,a,b,c,e,f,g),this._dirty=!0,this},identity:function(){return d.identity(this._array),this._dirty=!0,this},invert:function(){return d.invert(this._array,this._array),this._dirty=!0,this},lookAt:function(a,b,c){return d.lookAt(this._array,a._array,b._array,c._array),this._dirty=!0,this},mul:function(a){return d.mul(this._array,this._array,a._array),this._dirty=!0,this},mulLeft:function(a){return d.mul(this._array,a._array,this._array),this._dirty=!0,this},multiply:function(a){return d.multiply(this._array,this._array,a._array),this._dirty=!0,this},multiplyLeft:function(a){return d.multiply(this._array,a._array,this._array),this._dirty=!0,this},ortho:function(a,b,c,e,f,g){return d.ortho(this._array,a,b,c,e,f,g),this._dirty=!0,this},perspective:function(a,b,c,e){return d.perspective(this._array,a,b,c,e),this._dirty=!0,this},rotate:function(a,b){return d.rotate(this._array,this._array,a,b._array),this._dirty=!0,this},rotateX:function(a){return d.rotateX(this._array,this._array,a),this._dirty=!0,this},rotateY:function(a){return d.rotateY(this._array,this._array,a),this._dirty=!0,this},rotateZ:function(a){return d.rotateZ(this._array,this._array,a),this._dirty=!0,this},scale:function(a){return d.scale(this._array,this._array,a._array),this._dirty=!0,this},translate:function(a){return d.translate(this._array,this._array,a._array),this._dirty=!0,this},transpose:function(){return d.transpose(this._array,this._array),this._dirty=!0,this},decomposeMatrix:function(){var a=e.create(),b=e.create(),c=e.create(),d=f.create();return function(h,i,j){var k=this._array;e.set(a,k[0],k[1],k[2]),e.set(b,k[4],k[5],k[6]),e.set(c,k[8],k[9],k[10]);var l=e.length(a),m=e.length(b),n=e.length(c);h&&(h.x=l,h.y=m,h.z=n,h._dirty=!0),j.set(k[12],k[13],k[14]),f.fromMat4(d,k),d[0]/=l,d[1]/=l,d[2]/=l,d[3]/=m,d[4]/=m,d[5]/=m,d[6]/=n,d[7]/=n,d[8]/=n,g.fromMat3(i._array,d),g.normalize(i._array,i._array),i._dirty=!0,j._dirty=!0}}(),toString:function(){return"["+Array.prototype.join.call(this._array,",")+"]"}};var i=Object.defineProperty;if(i){var j=h.prototype;i(j,"z",{get:function(){var a=this._array;return this._axisZ.set(a[8],a[9],a[10]),this._axisZ},set:function(a){var b=this._array;a=a._array,b[8]=a[0],b[9]=a[1],b[10]=a[2],this._dirty=!0}}),i(j,"y",{get:function(){var a=this._array;return this._axisY.set(a[4],a[5],a[6]),this._axisY},set:function(a){var b=this._array;a=a._array,b[4]=a[0],b[5]=a[1],b[6]=a[2],this._dirty=!0}}),i(j,"x",{get:function(){var a=this._array;return this._axisX.set(a[0],a[1],a[2]),this._axisX},set:function(a){var b=this._array;a=a._array,b[0]=a[0],b[1]=a[1],b[2]=a[2],this._dirty=!0}})}return h.adjoint=function(a,b){return d.adjoint(a._array,b._array),a._dirty=!0,a},h.copy=function(a,b){return d.copy(a._array,b._array),a._dirty=!0,a},h.determinant=function(a){return d.determinant(a._array)},h.identity=function(a){return d.identity(a._array),a._dirty=!0,a},h.ortho=function(a,b,c,e,f,g,h){return d.ortho(a._array,b,c,e,f,g,h),a._dirty=!0,a},h.perspective=function(a,b,c,e,f){return d.perspective(a._array,b,c,e,f),a._dirty=!0,a},h.lookAt=function(a,b,c,e){return d.lookAt(a._array,b._array,c._array,e._array),a._dirty=!0,a},h.invert=function(a,b){return d.invert(a._array,b._array),a._dirty=!0,a},h.mul=function(a,b,c){return d.mul(a._array,b._array,c._array),a._dirty=!0,a},h.multiply=h.mul,h.fromQuat=function(a,b){return d.fromQuat(a._array,b._array),a._dirty=!0,a},h.fromRotationTranslation=function(a,b,c){return d.fromRotationTranslation(a._array,b._array,c._array),a._dirty=!0,a},h.fromMat2d=function(a,b){a._dirty=!0;var b=b._array,a=a._array;return a[0]=b[0],a[4]=b[2],a[12]=b[4],a[1]=b[1],a[5]=b[3],a[13]=b[5],a},h.rotate=function(a,b,c,e){return d.rotate(a._array,b._array,c,e._array),a._dirty=!0,a},h.rotateX=function(a,b,c){return d.rotateX(a._array,b._array,c),a._dirty=!0,a},h.rotateY=function(a,b,c){return d.rotateY(a._array,b._array,c),a._dirty=!0,a},h.rotateZ=function(a,b,c){return d.rotateZ(a._array,b._array,c),a._dirty=!0,a},h.scale=function(a,b,c){return d.scale(a._array,b._array,c._array),a._dirty=!0,a},h.transpose=function(a,b){return d.transpose(a._array,b._array),a._dirty=!0,a},h.translate=function(a,b,c){return d.translate(a._array,b._array,c._array),a._dirty=!0,a},h}),d("qtek/Node",["require","./core/Base","./math/Vector3","./math/Quaternion","./math/Matrix4","./dep/glmatrix"],function(a){var b=a("./core/Base"),c=a("./math/Vector3"),d=a("./math/Quaternion"),e=a("./math/Matrix4"),f=a("./dep/glmatrix"),g=f.mat4,h=0,i=b.derive({name:"",position:null,rotation:null,scale:null,worldTransform:null,localTransform:null,autoUpdateLocalTransform:!0,_parent:null,_scene:null,_needsUpdateWorldTransform:!0,_inIterating:!1,__depth:0},function(){this.name||(this.name="NODE_"+h++),this.position||(this.position=new c),this.rotation||(this.rotation=new d),this.scale||(this.scale=new c(1,1,1)),this.worldTransform=new e,this.localTransform=new e,this._children=[]},{visible:!0,isRenderable:function(){return!1},setName:function(a){var b=this._scene;if(b){var c=b._nodeRepository;delete c[this.name],c[a]=this}this.name=a},add:function(a){this._inIterating&&console.warn("Add operation can cause unpredictable error when in iterating");var b=a._parent;if(b!==this){b&&b.remove(a),a._parent=this,this._children.push(a);var c=this._scene;c&&c!==a.scene&&a.traverse(this._addSelfToScene,this)}},remove:function(a){this._inIterating&&console.warn("Remove operation can cause unpredictable error when in iterating");var b=this._children,c=b.indexOf(a);0>c||(b.splice(c,1),a._parent=null,this._scene&&a.traverse(this._removeSelfFromScene,this))},getScene:function(){return this._scene},getParent:function(){return this._parent},_removeSelfFromScene:function(a){a._scene.removeFromScene(a),a._scene=null},_addSelfToScene:function(a){this._scene.addToScene(a),a._scene=this._scene},isAncestor:function(a){for(var b=a._parent;b;){if(b===this)return!0;b=b._parent}return!1},children:function(){return this._children.slice()},childAt:function(a){return this._children[a]},getChildByName:function(a){for(var b=this._children,c=0;c<b.length;c++)if(b[c].name===a)return b[c]},getDescendantByName:function(a){for(var b=this._children,c=0;c<b.length;c++){var d=b[c];if(d.name===a)return d;var e=d.getDescendantByName(a);if(e)return e}},queryNode:function(a){if(a){for(var b=a.split("/"),c=this,d=0;d<b.length;d++){var e=b[d];if(e){for(var f=!1,g=c._children,h=0;h<g.length;h++){var i=g[h];if(i.name===e){c=i,f=!0;break}}if(!f)return}}return c}},getPath:function(a){if(!this._parent)return"/";for(var b=this._parent,c=this.name;b._parent&&(c=b.name+"/"+c,b._parent!=a);)b=b._parent;return!b._parent&&a?null:c},traverse:function(a,b,c){this._inIterating=!0,(void 0===c||this.constructor===c)&&a.call(b,this);for(var d=this._children,e=0,f=d.length;f>e;e++)d[e].traverse(a,b,c);this._inIterating=!1},setLocalTransform:function(a){g.copy(this.localTransform._array,a._array),this.decomposeLocalTransform()},decomposeLocalTransform:function(a){var b=a?null:this.scale;this.localTransform.decomposeMatrix(b,this.rotation,this.position)},setWorldTransform:function(a){g.copy(this.worldTransform._array,a._array),this.decomposeWorldTransform()},decomposeWorldTransform:function(){var a=g.create();return function(b){var c=this.localTransform,d=this.worldTransform;this._parent?(g.invert(a,this._parent.worldTransform._array),g.multiply(c._array,a,d._array)):g.copy(c._array,d._array);var e=b?null:this.scale;c.decomposeMatrix(e,this.rotation,this.position)}}(),updateLocalTransform:function(){var a=this.position,b=this.rotation,c=this.scale;if(a._dirty||c._dirty||b._dirty){var d=this.localTransform._array;g.fromRotationTranslation(d,b._array,a._array),g.scale(d,d,c._array),b._dirty=!1,c._dirty=!1,a._dirty=!1,this._needsUpdateWorldTransform=!0}},updateWorldTransform:function(){var a=this.localTransform._array,b=this.worldTransform._array;this._parent?g.multiply(b,this._parent.worldTransform._array,a):g.copy(b,a)},update:function(a){this.autoUpdateLocalTransform?this.updateLocalTransform():a=!0,(a||this._needsUpdateWorldTransform)&&(this.updateWorldTransform(),a=!0,this._needsUpdateWorldTransform=!1);for(var b=this._children,c=0,d=b.length;d>c;c++)b[c].update(a)},getWorldPosition:function(a){var b=this.worldTransform._array;if(a){var d=a._array;return d[0]=b[12],d[1]=b[13],d[2]=b[14],a}return new c(b[12],b[13],b[14])},clone:function(){var a=new this.constructor,b=this._children;a.setName(this.name),a.position.copy(this.position),a.rotation.copy(this.rotation),a.scale.copy(this.scale);for(var c=0;c<b.length;c++)a.add(b[c].clone());return a},rotateAround:function(){var a=new c,b=new e;return function(c,d,e){a.copy(this.position).subtract(c);var f=this.localTransform;f.identity(),f.translate(c),f.rotate(e,d),b.fromRotationTranslation(this.rotation,a),f.multiply(b),f.scale(this.scale),this.decomposeLocalTransform(),this._needsUpdateWorldTransform=!0}}(),lookAt:function(){var a=new e;return function(b,c){a.lookAt(this.position,b,c||this.localTransform.y).invert(),a.decomposeMatrix(null,this.rotation,this.position)}}()});return i}),d("qtek/math/BoundingBox",["require","./Vector3","../dep/glmatrix"],function(a){var b=a("./Vector3"),c=a("../dep/glmatrix"),d=c.vec3,e=d.transformMat4,f=d.copy,g=d.set,h=function(a,c){this.min=a||new b(1/0,1/0,1/0),this.max=c||new b(-1/0,-1/0,-1/0);for(var e=[],f=0;8>f;f++)e[f]=d.fromValues(0,0,0);this.vertices=e};return h.prototype={constructor:h,updateFromVertices:function(a){if(a.length>0){var b=this.min,c=this.max,d=b._array,e=c._array;f(d,a[0]),f(e,a[0]);for(var g=1;g<a.length;g++){var h=a[g];h[0]<d[0]&&(d[0]=h[0]),h[1]<d[1]&&(d[1]=h[1]),h[2]<d[2]&&(d[2]=h[2]),h[0]>e[0]&&(e[0]=h[0]),h[1]>e[1]&&(e[1]=h[1]),h[2]>e[2]&&(e[2]=h[2])}b._dirty=!0,c._dirty=!0}},union:function(a){var b=this.min,c=this.max;d.min(b._array,b._array,a.min._array),d.max(c._array,c._array,a.max._array),b._dirty=!0,c._dirty=!0},intersectBoundingBox:function(a){var b=this.min._array,c=this.max._array,d=a.min._array,e=a.max._array;return!(b[0]>e[0]||b[1]>e[1]||b[2]>e[2]||c[0]<d[0]||c[1]<d[1]||c[2]<d[2])},applyTransform:function(a){var b=this.min,c=this.max;(b._dirty||c._dirty)&&this.updateVertices();var d=a._array,g=b._array,h=c._array,i=this.vertices,j=i[0];e(j,j,d),f(g,j),f(h,j);for(var k=1;8>k;k++)j=i[k],e(j,j,d),j[0]<g[0]&&(g[0]=j[0]),j[1]<g[1]&&(g[1]=j[1]),j[2]<g[2]&&(g[2]=j[2]),j[0]>h[0]&&(h[0]=j[0]),j[1]>h[1]&&(h[1]=j[1]),j[2]>h[2]&&(h[2]=j[2]);b._dirty=!0,c._dirty=!0},applyProjection:function(a){var b=this.min,c=this.max;(b._dirty||c._dirty)&&this.updateVertices();var d=a._array,e=this.vertices,f=e[0],g=e[3],h=e[7],i=b._array,j=c._array;if(1===d[15])i[0]=d[0]*f[0]+d[12],i[1]=d[5]*f[1]+d[13],j[2]=d[10]*f[2]+d[14],j[0]=d[0]*h[0]+d[12],j[1]=d[5]*h[1]+d[13],i[2]=d[10]*h[2]+d[14];else{var k=-1/f[2];i[0]=d[0]*f[0]*k,i[1]=d[5]*f[1]*k,j[2]=(d[10]*f[2]+d[14])*k,k=-1/g[2],j[0]=d[0]*g[0]*k,j[1]=d[5]*g[1]*k,k=-1/h[2],i[2]=(d[10]*h[2]+d[14])*k}b._dirty=!0,c._dirty=!0},updateVertices:function(){var a=this.min._array,b=this.max._array,c=this.vertices;g(c[0],a[0],a[1],a[2]),g(c[1],a[0],b[1],a[2]),g(c[2],b[0],a[1],a[2]),g(c[3],b[0],b[1],a[2]),g(c[4],a[0],a[1],b[2]),g(c[5],a[0],b[1],b[2]),g(c[6],b[0],a[1],b[2]),g(c[7],b[0],b[1],b[2])},copy:function(a){var b=this.min,c=this.max;f(b._array,a.min._array),f(c._array,a.max._array),b._dirty=!0,c._dirty=!0},clone:function(){var a=new h;return a.copy(this),a}},h}),d("qtek/math/Plane",["require","./Vector3","../dep/glmatrix"],function(a){var b=a("./Vector3"),c=a("../dep/glmatrix"),d=c.vec3,e=c.mat4,f=c.vec4,g=function(a,c){this.normal=a||new b(0,1,0),this.distance=c||0};return g.prototype={constructor:g,distanceToPoint:function(a){return d.dot(a._array,this.normal._array)-this.distance},projectPoint:function(a,c){c||(c=new b);var e=this.distanceToPoint(a);return d.scaleAndAdd(c._array,a._array,this.normal._array,-e),c._dirty=!0,c},normalize:function(){var a=1/d.len(this.normal._array);d.scale(this.normal._array,a),this.distance*=a},intersectFrustum:function(a){for(var b=a.vertices,c=this.normal._array,e=d.dot(b[0]._array,c)>this.distance,f=1;8>f;f++)if(d.dot(b[f]._array,c)>this.distance!=e)return!0},intersectLine:function(){var a=d.create();return function(c,e,f){var g=this.distanceToPoint(c),h=this.distanceToPoint(e);if(g>0&&h>0||0>g&&0>h)return null;var i=this.normal._array,j=this.distance,k=c._array;d.sub(a,e._array,c._array),d.normalize(a,a);var l=d.dot(i,a);if(0===l)return null;f||(f=new b);var m=(d.dot(i,k)-j)/l;return d.scaleAndAdd(f._array,k,a,-m),f._dirty=!0,f}}(),applyTransform:function(){var a=e.create(),b=f.create(),c=f.create();return c[3]=1,function(g){g=g._array,d.scale(c,this.normal._array,this.distance),f.transformMat4(c,c,g),this.distance=d.dot(c,this.normal._array),e.invert(a,g),e.transpose(a,a),b[3]=0,d.copy(b,this.normal._array),f.transformMat4(b,b,a),d.copy(this.normal._array,b)}}(),copy:function(a){d.copy(this.normal._array,a.normal._array),this.normal._dirty=!0,this.distance=a.distance},clone:function(){var a=new g;return a.copy(this),a}},g}),d("qtek/math/Frustum",["require","./Vector3","./BoundingBox","./Plane","../dep/glmatrix"],function(a){a("./Vector3");var b=a("./BoundingBox"),c=a("./Plane"),d=a("../dep/glmatrix"),e=d.vec3,f=e.set,g=e.copy,h=e.transformMat4,i=Math.min,j=Math.max,k=function(){this.planes=[];for(var a=0;6>a;a++)this.planes.push(new c);this.boundingBox=new b,this.vertices=[];for(var a=0;8>a;a++)this.vertices[a]=e.fromValues(0,0,0)};return k.prototype={setFromProjection:function(a){var b=this.planes,c=a._array,d=c[0],e=c[1],h=c[2],i=c[3],j=c[4],k=c[5],l=c[6],m=c[7],n=c[8],o=c[9],p=c[10],q=c[11],r=c[12],s=c[13],t=c[14],u=c[15];f(b[0].normal._array,i-d,m-j,q-n),b[0].distance=-(u-r),b[0].normalize(),f(b[1].normal._array,i+d,m+j,q+n),b[1].distance=-(u+r),b[1].normalize(),f(b[2].normal._array,i+e,m+k,q+o),b[2].distance=-(u+s),b[2].normalize(),f(b[3].normal._array,i-e,m-k,q-o),b[3].distance=-(u-s),b[3].normalize(),f(b[4].normal._array,i-h,m-l,q-p),b[4].distance=-(u-t),b[4].normalize(),f(b[5].normal._array,i+h,m+l,q+p),b[5].distance=-(u+t),b[5].normalize();var v=this.boundingBox;if(0===u){var w=k/d,x=-t/(p-1),y=-t/(p+1),z=-y/k,A=-x/k;v.min.set(-z*w,-z,y),v.max.set(z*w,z,x);var B=this.vertices;f(B[0],-z*w,-z,y),f(B[1],-z*w,z,y),f(B[2],z*w,-z,y),f(B[3],z*w,z,y),f(B[4],-A*w,-A,x),f(B[5],-A*w,A,x),f(B[6],A*w,-A,x),f(B[7],A*w,A,x)}else{var C=(-1-r)/d,D=(1-r)/d,E=(1-s)/k,F=(-1-s)/k,G=(-1-t)/p,H=(1-t)/p;v.min.set(C,F,H),v.max.set(D,E,G);for(var I=0;8>I;I++)g(this.vertices[I],this.boundingBox.vertices[I])}},getTransformedBoundingBox:function(){var a=e.create();return function(b,c){var d=this.vertices,e=c._array,f=b.min,k=b.max,l=f._array,m=k._array,n=d[0];h(a,n,e),g(l,a),g(m,a);for(var o=1;8>o;o++)n=d[o],h(a,n,e),l[0]=i(a[0],l[0]),l[1]=i(a[1],l[1]),l[2]=i(a[2],l[2]),m[0]=j(a[0],m[0]),m[1]=j(a[1],m[1]),m[2]=j(a[2],m[2]);return f._dirty=!0,k._dirty=!0,b}}()},k}),d("qtek/math/Ray",["require","./Vector3","../dep/glmatrix"],function(a){var b=a("./Vector3"),c=a("../dep/glmatrix"),d=c.vec3,e=1e-5,f=function(a,c){this.origin=a||new b,this.direction=c||new b};return f.prototype={constructor:f,intersectPlane:function(a,c){var e=a.normal._array,f=a.distance,g=this.origin._array,h=this.direction._array,i=d.dot(e,h);if(0===i)return null;c||(c=new b);var j=(d.dot(e,g)-f)/i;return d.scaleAndAdd(c._array,g,h,-j),c._dirty=!0,c},mirrorAgainstPlane:function(a){var b=d.dot(a.normal._array,this.direction._array);d.scaleAndAdd(this.direction._array,this.direction._array,a.normal._array,2*-b),this.direction._dirty=!0},distanceToPoint:function(){var a=d.create();return function(b){d.sub(a,b,this.origin._array);var c=d.dot(a,this.direction._array);if(0>c)return d.distance(this.origin._array,b);var e=d.lenSquared(a);return Math.sqrt(e-c*c)}}(),intersectSphere:function(){var a=d.create();return function(c,e,f){var g=this.origin._array,h=this.direction._array;c=c._array,d.sub(a,c,g);var i=d.dot(a,h),j=d.squaredLength(a),k=j-i*i,l=e*e;if(!(k>l)){var m=Math.sqrt(l-k),n=i-m,o=i+m;return f||(f=new b),0>n?0>o?null:(d.scaleAndAdd(f._array,g,h,o),f):(d.scaleAndAdd(f._array,g,h,n),f)}}}(),intersectBoundingBox:function(a,c){var e,f,g,h,i,j,k=this.direction._array,l=this.origin._array,m=a.min._array,n=a.max._array,o=1/k[0],p=1/k[1],q=1/k[2];if(o>=0?(e=(m[0]-l[0])*o,f=(n[0]-l[0])*o):(f=(m[0]-l[0])*o,e=(n[0]-l[0])*o),p>=0?(g=(m[1]-l[1])*p,h=(n[1]-l[1])*p):(h=(m[1]-l[1])*p,g=(n[1]-l[1])*p),e>h||g>f)return null;if((g>e||e!==e)&&(e=g),(f>h||f!==f)&&(f=h),q>=0?(i=(m[2]-l[2])*q,j=(n[2]-l[2])*q):(j=(m[2]-l[2])*q,i=(n[2]-l[2])*q),e>j||i>f)return null;if((i>e||e!==e)&&(e=i),(f>j||f!==f)&&(f=j),0>f)return null;var r=e>=0?e:f;return c||(c=new b),d.scaleAndAdd(c._array,l,k,r),c},intersectTriangle:function(){var a=d.create(),c=d.create(),f=d.create(),g=d.create();return function(h,i,j,k,l,m){var n=this.direction._array,o=this.origin._array;h=h._array,i=i._array,j=j._array,d.sub(a,i,h),d.sub(c,j,h),d.cross(g,c,n);var p=d.dot(a,g);if(k){if(p>-e)return null}else if(p>-e&&e>p)return null;d.sub(f,o,h);var q=d.dot(g,f)/p;if(0>q||q>1)return null;d.cross(g,a,f);var r=d.dot(n,g)/p;if(0>r||r>1||q+r>1)return null;d.cross(g,a,c);var s=-d.dot(f,g)/p;return 0>s?null:(l||(l=new b),m&&b.set(m,1-q-r,q,r),d.scaleAndAdd(l._array,o,n,s),l)}}(),applyTransform:function(a){b.add(this.direction,this.direction,this.origin),b.transformMat4(this.origin,this.origin,a),b.transformMat4(this.direction,this.direction,a),b.sub(this.direction,this.direction,this.origin),b.normalize(this.direction,this.direction)
},copy:function(a){b.copy(this.origin,a.origin),b.copy(this.direction,a.direction)},clone:function(){var a=new f;return a.copy(this),a}},f}),d("qtek/Camera",["require","./Node","./math/Matrix4","./math/Frustum","./math/BoundingBox","./math/Ray","./dep/glmatrix"],function(a){var b=a("./Node"),c=a("./math/Matrix4"),d=a("./math/Frustum"),e=a("./math/BoundingBox"),f=a("./math/Ray"),g=a("./dep/glmatrix"),h=g.mat4,i=g.vec3,j=g.vec4,k=b.derive(function(){return{projectionMatrix:new c,invProjectionMatrix:new c,viewMatrix:new c,frustum:new d,sceneBoundingBoxLastFrame:new e}},function(){this.update(!0)},{update:function(a){b.prototype.update.call(this,a),h.invert(this.viewMatrix._array,this.worldTransform._array),this.updateProjectionMatrix(),h.invert(this.invProjectionMatrix._array,this.projectionMatrix._array),this.frustum.setFromProjection(this.projectionMatrix)},updateProjectionMatrix:function(){},castRay:function(){var a=j.create();return function(b,c){var d=void 0!==c?c:new f,e=b._array[0],g=b._array[1];return j.set(a,e,g,-1,1),j.transformMat4(a,a,this.invProjectionMatrix._array),j.transformMat4(a,a,this.worldTransform._array),i.scale(d.origin._array,a,1/a[3]),j.set(a,e,g,1,1),j.transformMat4(a,a,this.invProjectionMatrix._array),j.transformMat4(a,a,this.worldTransform._array),i.scale(a,a,1/a[3]),i.sub(d.direction._array,a,d.origin._array),i.normalize(d.direction._array,d.direction._array),d.direction._dirty=!0,d.origin._dirty=!0,d}}()});return k}),d("qtek/core/glenum",[],function(){return{DEPTH_BUFFER_BIT:256,STENCIL_BUFFER_BIT:1024,COLOR_BUFFER_BIT:16384,POINTS:0,LINES:1,LINE_LOOP:2,LINE_STRIP:3,TRIANGLES:4,TRIANGLE_STRIP:5,TRIANGLE_FAN:6,ZERO:0,ONE:1,SRC_COLOR:768,ONE_MINUS_SRC_COLOR:769,SRC_ALPHA:770,ONE_MINUS_SRC_ALPHA:771,DST_ALPHA:772,ONE_MINUS_DST_ALPHA:773,DST_COLOR:774,ONE_MINUS_DST_COLOR:775,SRC_ALPHA_SATURATE:776,FUNC_ADD:32774,BLEND_EQUATION:32777,BLEND_EQUATION_RGB:32777,BLEND_EQUATION_ALPHA:34877,FUNC_SUBTRACT:32778,FUNC_REVERSE_SUBTRACT:32779,BLEND_DST_RGB:32968,BLEND_SRC_RGB:32969,BLEND_DST_ALPHA:32970,BLEND_SRC_ALPHA:32971,CONSTANT_COLOR:32769,ONE_MINUS_CONSTANT_COLOR:32770,CONSTANT_ALPHA:32771,ONE_MINUS_CONSTANT_ALPHA:32772,BLEND_COLOR:32773,ARRAY_BUFFER:34962,ELEMENT_ARRAY_BUFFER:34963,ARRAY_BUFFER_BINDING:34964,ELEMENT_ARRAY_BUFFER_BINDING:34965,STREAM_DRAW:35040,STATIC_DRAW:35044,DYNAMIC_DRAW:35048,BUFFER_SIZE:34660,BUFFER_USAGE:34661,CURRENT_VERTEX_ATTRIB:34342,FRONT:1028,BACK:1029,FRONT_AND_BACK:1032,CULL_FACE:2884,BLEND:3042,DITHER:3024,STENCIL_TEST:2960,DEPTH_TEST:2929,SCISSOR_TEST:3089,POLYGON_OFFSET_FILL:32823,SAMPLE_ALPHA_TO_COVERAGE:32926,SAMPLE_COVERAGE:32928,NO_ERROR:0,INVALID_ENUM:1280,INVALID_VALUE:1281,INVALID_OPERATION:1282,OUT_OF_MEMORY:1285,CW:2304,CCW:2305,LINE_WIDTH:2849,ALIASED_POINT_SIZE_RANGE:33901,ALIASED_LINE_WIDTH_RANGE:33902,CULL_FACE_MODE:2885,FRONT_FACE:2886,DEPTH_RANGE:2928,DEPTH_WRITEMASK:2930,DEPTH_CLEAR_VALUE:2931,DEPTH_FUNC:2932,STENCIL_CLEAR_VALUE:2961,STENCIL_FUNC:2962,STENCIL_FAIL:2964,STENCIL_PASS_DEPTH_FAIL:2965,STENCIL_PASS_DEPTH_PASS:2966,STENCIL_REF:2967,STENCIL_VALUE_MASK:2963,STENCIL_WRITEMASK:2968,STENCIL_BACK_FUNC:34816,STENCIL_BACK_FAIL:34817,STENCIL_BACK_PASS_DEPTH_FAIL:34818,STENCIL_BACK_PASS_DEPTH_PASS:34819,STENCIL_BACK_REF:36003,STENCIL_BACK_VALUE_MASK:36004,STENCIL_BACK_WRITEMASK:36005,VIEWPORT:2978,SCISSOR_BOX:3088,COLOR_CLEAR_VALUE:3106,COLOR_WRITEMASK:3107,UNPACK_ALIGNMENT:3317,PACK_ALIGNMENT:3333,MAX_TEXTURE_SIZE:3379,MAX_VIEWPORT_DIMS:3386,SUBPIXEL_BITS:3408,RED_BITS:3410,GREEN_BITS:3411,BLUE_BITS:3412,ALPHA_BITS:3413,DEPTH_BITS:3414,STENCIL_BITS:3415,POLYGON_OFFSET_UNITS:10752,POLYGON_OFFSET_FACTOR:32824,TEXTURE_BINDING_2D:32873,SAMPLE_BUFFERS:32936,SAMPLES:32937,SAMPLE_COVERAGE_VALUE:32938,SAMPLE_COVERAGE_INVERT:32939,COMPRESSED_TEXTURE_FORMATS:34467,DONT_CARE:4352,FASTEST:4353,NICEST:4354,GENERATE_MIPMAP_HINT:33170,BYTE:5120,UNSIGNED_BYTE:5121,SHORT:5122,UNSIGNED_SHORT:5123,INT:5124,UNSIGNED_INT:5125,FLOAT:5126,DEPTH_COMPONENT:6402,ALPHA:6406,RGB:6407,RGBA:6408,LUMINANCE:6409,LUMINANCE_ALPHA:6410,UNSIGNED_SHORT_4_4_4_4:32819,UNSIGNED_SHORT_5_5_5_1:32820,UNSIGNED_SHORT_5_6_5:33635,FRAGMENT_SHADER:35632,VERTEX_SHADER:35633,MAX_VERTEX_ATTRIBS:34921,MAX_VERTEX_UNIFORM_VECTORS:36347,MAX_VARYING_VECTORS:36348,MAX_COMBINED_TEXTURE_IMAGE_UNITS:35661,MAX_VERTEX_TEXTURE_IMAGE_UNITS:35660,MAX_TEXTURE_IMAGE_UNITS:34930,MAX_FRAGMENT_UNIFORM_VECTORS:36349,SHADER_TYPE:35663,DELETE_STATUS:35712,LINK_STATUS:35714,VALIDATE_STATUS:35715,ATTACHED_SHADERS:35717,ACTIVE_UNIFORMS:35718,ACTIVE_ATTRIBUTES:35721,SHADING_LANGUAGE_VERSION:35724,CURRENT_PROGRAM:35725,NEVER:512,LESS:513,EQUAL:514,LEQUAL:515,GREATER:516,NOTEQUAL:517,GEQUAL:518,ALWAYS:519,KEEP:7680,REPLACE:7681,INCR:7682,DECR:7683,INVERT:5386,INCR_WRAP:34055,DECR_WRAP:34056,VENDOR:7936,RENDERER:7937,VERSION:7938,NEAREST:9728,LINEAR:9729,NEAREST_MIPMAP_NEAREST:9984,LINEAR_MIPMAP_NEAREST:9985,NEAREST_MIPMAP_LINEAR:9986,LINEAR_MIPMAP_LINEAR:9987,TEXTURE_MAG_FILTER:10240,TEXTURE_MIN_FILTER:10241,TEXTURE_WRAP_S:10242,TEXTURE_WRAP_T:10243,TEXTURE_2D:3553,TEXTURE:5890,TEXTURE_CUBE_MAP:34067,TEXTURE_BINDING_CUBE_MAP:34068,TEXTURE_CUBE_MAP_POSITIVE_X:34069,TEXTURE_CUBE_MAP_NEGATIVE_X:34070,TEXTURE_CUBE_MAP_POSITIVE_Y:34071,TEXTURE_CUBE_MAP_NEGATIVE_Y:34072,TEXTURE_CUBE_MAP_POSITIVE_Z:34073,TEXTURE_CUBE_MAP_NEGATIVE_Z:34074,MAX_CUBE_MAP_TEXTURE_SIZE:34076,TEXTURE0:33984,TEXTURE1:33985,TEXTURE2:33986,TEXTURE3:33987,TEXTURE4:33988,TEXTURE5:33989,TEXTURE6:33990,TEXTURE7:33991,TEXTURE8:33992,TEXTURE9:33993,TEXTURE10:33994,TEXTURE11:33995,TEXTURE12:33996,TEXTURE13:33997,TEXTURE14:33998,TEXTURE15:33999,TEXTURE16:34e3,TEXTURE17:34001,TEXTURE18:34002,TEXTURE19:34003,TEXTURE20:34004,TEXTURE21:34005,TEXTURE22:34006,TEXTURE23:34007,TEXTURE24:34008,TEXTURE25:34009,TEXTURE26:34010,TEXTURE27:34011,TEXTURE28:34012,TEXTURE29:34013,TEXTURE30:34014,TEXTURE31:34015,ACTIVE_TEXTURE:34016,REPEAT:10497,CLAMP_TO_EDGE:33071,MIRRORED_REPEAT:33648,FLOAT_VEC2:35664,FLOAT_VEC3:35665,FLOAT_VEC4:35666,INT_VEC2:35667,INT_VEC3:35668,INT_VEC4:35669,BOOL:35670,BOOL_VEC2:35671,BOOL_VEC3:35672,BOOL_VEC4:35673,FLOAT_MAT2:35674,FLOAT_MAT3:35675,FLOAT_MAT4:35676,SAMPLER_2D:35678,SAMPLER_CUBE:35680,VERTEX_ATTRIB_ARRAY_ENABLED:34338,VERTEX_ATTRIB_ARRAY_SIZE:34339,VERTEX_ATTRIB_ARRAY_STRIDE:34340,VERTEX_ATTRIB_ARRAY_TYPE:34341,VERTEX_ATTRIB_ARRAY_NORMALIZED:34922,VERTEX_ATTRIB_ARRAY_POINTER:34373,VERTEX_ATTRIB_ARRAY_BUFFER_BINDING:34975,COMPILE_STATUS:35713,LOW_FLOAT:36336,MEDIUM_FLOAT:36337,HIGH_FLOAT:36338,LOW_INT:36339,MEDIUM_INT:36340,HIGH_INT:36341,FRAMEBUFFER:36160,RENDERBUFFER:36161,RGBA4:32854,RGB5_A1:32855,RGB565:36194,DEPTH_COMPONENT16:33189,STENCIL_INDEX:6401,STENCIL_INDEX8:36168,DEPTH_STENCIL:34041,RENDERBUFFER_WIDTH:36162,RENDERBUFFER_HEIGHT:36163,RENDERBUFFER_INTERNAL_FORMAT:36164,RENDERBUFFER_RED_SIZE:36176,RENDERBUFFER_GREEN_SIZE:36177,RENDERBUFFER_BLUE_SIZE:36178,RENDERBUFFER_ALPHA_SIZE:36179,RENDERBUFFER_DEPTH_SIZE:36180,RENDERBUFFER_STENCIL_SIZE:36181,FRAMEBUFFER_ATTACHMENT_OBJECT_TYPE:36048,FRAMEBUFFER_ATTACHMENT_OBJECT_NAME:36049,FRAMEBUFFER_ATTACHMENT_TEXTURE_LEVEL:36050,FRAMEBUFFER_ATTACHMENT_TEXTURE_CUBE_MAP_FACE:36051,COLOR_ATTACHMENT0:36064,DEPTH_ATTACHMENT:36096,STENCIL_ATTACHMENT:36128,DEPTH_STENCIL_ATTACHMENT:33306,NONE:0,FRAMEBUFFER_COMPLETE:36053,FRAMEBUFFER_INCOMPLETE_ATTACHMENT:36054,FRAMEBUFFER_INCOMPLETE_MISSING_ATTACHMENT:36055,FRAMEBUFFER_INCOMPLETE_DIMENSIONS:36057,FRAMEBUFFER_UNSUPPORTED:36061,FRAMEBUFFER_BINDING:36006,RENDERBUFFER_BINDING:36007,MAX_RENDERBUFFER_SIZE:34024,INVALID_FRAMEBUFFER_OPERATION:1286,UNPACK_FLIP_Y_WEBGL:37440,UNPACK_PREMULTIPLY_ALPHA_WEBGL:37441,CONTEXT_LOST_WEBGL:37442,UNPACK_COLORSPACE_CONVERSION_WEBGL:37443,BROWSER_DEFAULT_WEBGL:37444}}),d("qtek/core/Cache",[],function(){var a="__dirty__",b=function(){this._contextId=0,this._caches=[],this._context={}};return b.prototype={use:function(a,b){var c=this._caches;c[a]||(c[a]={},b&&(c[a]=b())),this._contextId=a,this._context=c[a]},put:function(a,b){this._context[a]=b},get:function(a){return this._context[a]},dirty:function(b){b=b||"";var c=a+b;this.put(c,!0)},dirtyAll:function(b){b=b||"";for(var c=a+b,d=this._caches,e=0;e<d.length;e++)d[e]&&(d[e][c]=!0)},fresh:function(b){b=b||"";var c=a+b;this.put(c,!1)},freshAll:function(b){b=b||"";for(var c=a+b,d=this._caches,e=0;e<d.length;e++)d[e]&&(d[e][c]=!1)},isDirty:function(b){b=b||"";var c=a+b,d=this._context;return!d.hasOwnProperty(c)||d[c]===!0},deleteContext:function(a){delete this._caches[a],this._context={}},"delete":function(a){delete this._context[a]},clearAll:function(){this._caches={}},getContext:function(){return this._context},miss:function(a){return!this._context.hasOwnProperty(a)}},b.prototype.constructor=b,b}),d("qtek/core/vendor",["require"],function(){var a=!0;try{var b=document.createElement("canvas"),c=b.getContext("webgl")||b.getContext("experimental-webgl");if(!c)throw new Error}catch(d){a=!1}var e={};e.supportWebGL=function(){return a};var f="undefined";return e.Int8Array=typeof Int8Array==f?Array:Int8Array,e.Uint8Array=typeof Uint8Array==f?Array:Uint8Array,e.Uint16Array=typeof Uint16Array==f?Array:Uint16Array,e.Int16Array=typeof Int16Array==f?Array:Int16Array,e.Float32Array=typeof Float32Array==f?Array:Float32Array,e}),d("qtek/Geometry",["require","./core/Base","./core/glenum","./core/Cache","./core/vendor","./dep/glmatrix"],function(a){function b(a,b,c,d,e){switch(this.name=a,this.type=b,this.size=c,d&&(this.semantic=d),e?(this._isDynamic=!0,this.value=[]):(this._isDynamic=!1,this.value=null),c){case 1:this.get=function(a){return this.value[a]},this.set=function(a,b){this.value[a]=b};break;case 2:e?(this.get=function(a,b){var c=this.value[a];return c&&p(b,c),b},this.set=function(a,b){var c=this.value[a];c||(c=this.value[a]=k.create()),p(c,b)}):(this.get=function(a,b){var c=this.value;return b[0]=c[2*a],b[1]=c[2*a+1],b},this.set=function(a,b){var c=this.value;c[2*a]=b[0],c[2*a+1]=b[1]});break;case 3:e?(this.get=function(a,b){var c=this.value[a];return c&&o(b,c),b},this.set=function(a,b){var c=this.value[a];c||(c=this.value[a]=l.create()),o(c,b)}):(this.get=function(a,b){var c=3*a,d=this.value;return b[0]=d[c++],b[1]=d[c++],b[2]=d[c++],b},this.set=function(a,b){var c=3*a,d=this.value;d[c++]=b[0],d[c++]=b[1],d[c++]=b[2]});break;case 4:e?(this.get=function(a,b){var c=this.value[a];return c&&n(b,c),b},this.set=function(a,b){var c=this.value[a];c||(c=this.value[a]=m.create()),n(c,b)}):(this.get=function(a,b){var c=this.value,d=4*a;return b[0]=c[d++],b[1]=c[d++],b[2]=c[d++],b[3]=c[d++],b},this.set=function(a,b){var c=this.value,d=4*a;c[d++]=b[0],c[d++]=b[1],c[d++]=b[2],c[d++]=b[3]})}}function c(a,b,c,d,e){this.name=a,this.type=b,this.buffer=c,this.size=d,this.semantic=e,this.symbol=""}function d(a){this.buffer=a,this.count=0}function e(){console.warn("Geometry doesn't implement this method, use DynamicGeometry or StaticGeometry instead")}var f=a("./core/Base"),g=a("./core/glenum"),h=a("./core/Cache"),i=a("./core/vendor"),j=a("./dep/glmatrix"),k=j.vec2,l=j.vec3,m=j.vec4,n=m.copy,o=l.copy,p=k.copy;b.prototype.init=function(a){if(this._isDynamic)console.warn("Dynamic geometry not support init method");else if(!this.value||this.value.length!=a*this.size){var b;switch(this.type){case"byte":b=i.Int8Array;break;case"ubyte":b=i.Uint8Array;break;case"short":b=i.Int16Array;break;case"ushort":b=i.Uint16Array;break;default:b=i.Float32Array}this.value=new b(a*this.size)}},b.prototype.clone=function(a){var c=new b(this.name,this.type,this.size,this.semantic,this._isDynamic);return a&&console.warn("todo"),c};var q=f.derive({boundingBox:null,attributes:{},faces:null,dynamic:!1,useFace:!0},function(){this._cache=new h,this._attributeList=Object.keys(this.attributes)},{pickByRay:null,mainAttribute:"position",dirty:e,createAttribute:e,removeAttribute:e,getVertexNumber:e,getFaceNumber:e,getFace:e,isUseFace:e,getEnabledAttributes:e,getBufferChunks:e,generateVertexNormals:e,generateFaceNormals:e,isUniqueVertex:e,generateUniqueVertex:e,generateTangents:e,generateBarycentric:e,applyTransform:e,dispose:e});return q.STATIC_DRAW=g.STATIC_DRAW,q.DYNAMIC_DRAW=g.DYNAMIC_DRAW,q.STREAM_DRAW=g.STREAM_DRAW,q.AttributeBuffer=c,q.IndicesBuffer=d,q.Attribute=b,q}),d("qtek/core/glinfo",[],function(){var a=["OES_texture_float","OES_texture_half_float","OES_texture_float_linear","OES_texture_half_float_linear","OES_standard_derivatives","OES_vertex_array_object","OES_element_index_uint","WEBGL_compressed_texture_s3tc","WEBGL_depth_texture","EXT_texture_filter_anisotropic","EXT_shader_texture_lod","WEBGL_draw_buffers"],b=["MAX_TEXTURE_SIZE","MAX_CUBE_MAP_TEXTURE_SIZE"],c={},d={},e={initialize:function(e){var f=e.__GLID__;if(!c[f]){c[f]={},d[f]={};for(var g=0;g<a.length;g++){var h=a[g];this._createExtension(e,h)}for(var g=0;g<b.length;g++){var i=b[g];d[f][i]=e.getParameter(e[i])}}},getExtension:function(a,b){var d=a.__GLID__;return c[d]?("undefined"==typeof c[d][b]&&this._createExtension(a,b),c[d][b]):void 0},getParameter:function(a,b){var c=a.__GLID__;return d[c]?d[c][b]:void 0},dispose:function(a){delete c[a.__GLID__],delete d[a.__GLID__]},_createExtension:function(a,b){var d=a.getExtension(b);d||(d=a.getExtension("MOZ_"+b)),d||(d=a.getExtension("WEBKIT_"+b)),c[a.__GLID__][b]=d}};return e}),d("qtek/DynamicGeometry",["require","./Geometry","./math/BoundingBox","./core/glenum","./core/glinfo","./core/vendor","./dep/glmatrix"],function(a){var b=a("./Geometry"),c=a("./math/BoundingBox"),d=a("./core/glenum"),e=a("./core/glinfo"),f=a("./core/vendor"),g=a("./dep/glmatrix"),h=g.vec3,i=g.mat4,j=h.add,k=h.create,l=Array.prototype.slice,m=b.Attribute,n=b.derive(function(){return{attributes:{position:new m("position","float",3,"POSITION",!0),texcoord0:new m("texcoord0","float",2,"TEXCOORD_0",!0),texcoord1:new m("texcoord1","float",2,"TEXCOORD_1",!0),normal:new m("normal","float",3,"NORMAL",!0),tangent:new m("tangent","float",4,"TANGENT",!0),color:new m("color","float",4,"COLOR",!0),weight:new m("weight","float",3,"WEIGHT",!0),joint:new m("joint","float",4,"JOINT",!0),barycentric:new m("barycentric","float",3,null,!0)},dynamic:!0,hint:d.DYNAMIC_DRAW,faces:[],_enabledAttributes:null,_arrayChunks:[]}},{updateBoundingBox:function(){var a=this.boundingBox;a||(a=this.boundingBox=new c),a.updateFromVertices(this.attributes.position.value)},dirty:function(a){if(a)this._cache.dirtyAll(a),this._cache.dirtyAll(),this._enabledAttributes=null;else{this.dirty("indices");for(var b in this.attributes)this.dirty(b)}},getVertexNumber:function(){var a=this.attributes[this.mainAttribute];return a&&a.value?a.value.length:0},getFaceNumber:function(){return this.faces.length},getFace:function(a,b){return a<this.getFaceNumber()&&a>=0?(b||(b=h.create()),h.copy(b,this.faces[a]),b):void 0},isUseFace:function(){return this.useFace&&this.faces.length>0},isSplitted:function(){return this.getVertexNumber()>65535},createAttribute:function(a,b,c,d){var e=new m(a,b,c,d,!0);return this.attributes[a]=e,this._attributeList.push(a),e},removeAttribute:function(a){var b=this._attributeList,c=b.indexOf(a);return c>=0?(b.splice(c,1),delete this.attributes[a],!0):!1},getEnabledAttributes:function(){var a=this._enabledAttributes,b=this._attributeList;if(a)return a;for(var c={},d=this.getVertexNumber(),e=0;e<b.length;e++){var f=b[e],g=this.attributes[f];g.value.length&&g.value.length===d&&(c[f]=g)}return this._enabledAttributes=c,c},_getDirtyAttributes:function(){var a=this.getEnabledAttributes(),b=this._cache;if(b.miss("chunks"))return a;var c={},d=!0;for(var e in a)b.isDirty(e)&&(c[e]=a[e],d=!1);return d?void 0:c},getChunkNumber:function(){return this._arrayChunks.length},getBufferChunks:function(a){var b=this._cache;if(b.use(a.__GLID__),b.isDirty()){var c=this._getDirtyAttributes(),d=b.isDirty("indices");if(d=d&&this.isUseFace(),c){this._updateAttributesAndIndicesArrays(c,d,null!=e.getExtension(a,"OES_element_index_uint")),this._updateBuffer(a,c,d);for(var f in c)b.fresh(f);b.fresh("indices"),b.fresh()}}return b.get("chunks")},_updateAttributesAndIndicesArrays:function(a,b,c){var d=this,e=this.getVertexNumber(),g=[],h=[],i={};for(var j in a)switch(L){case"byte":i[j]=f.Int8Array;break;case"ubyte":i[j]=f.Uint8Array;break;case"short":i[j]=f.Int16Array;break;case"ushort":i[j]=f.Uint16Array;break;default:i[j]=f.Float32Array}var k=function(b){if(d._arrayChunks[b])return d._arrayChunks[b];var c={attributeArrays:{},indicesArray:null};for(var f in a)c.attributeArrays[f]=null;for(var h=0;e>h;h++)g[h]=-1;return d._arrayChunks.push(c),c},l=Object.keys(a);if(e>65535&&this.isUseFace()&&!c){var m,n=0,o=[0],p=[];for(r=0;e>r;r++)p[r]=-1,g[r]=-1;if(b)for(r=0;r<this.faces.length;r++)h[r]=[0,0,0];m=k(n);for(var q=0,r=0;r<this.faces.length;r++){var s=this.faces[r],t=h[r];q+3>65535&&(n++,o[n]=r,q=0,m=k(n));for(var u=0;3>u;u++){for(var v=s[u],w=-1===g[v],x=0;x<l.length;x++){var j=l[x],y=m.attributeArrays[j],z=a[j].value,A=a[j].size;if(y||(y=m.attributeArrays[j]=[]),w){1===A&&(y[q]=z[v]);for(var B=0;A>B;B++)y[q*A+B]=z[v][B]}}w?(g[v]=q,t[u]=q,q++):t[u]=g[v]}}for(var C=0;C<this._arrayChunks.length;C++){var D=this._arrayChunks[C];for(var j in D.attributeArrays){var E=D.attributeArrays[j];E instanceof Array&&(D.attributeArrays[j]=new i[j](E))}}if(b)for(var F,G,H,D,C=0;C<this._arrayChunks.length;C++){F=o[C],G=o[C+1]||this.faces.length,H=0,D=this._arrayChunks[C];var I=D.indicesArray;I||(I=D.indicesArray=new Uint16Array(3*(G-F)));for(var r=F;G>r;r++)I[H++]=h[r][0],I[H++]=h[r][1],I[H++]=h[r][2]}}else{var D=k(0);if(b){var I=D.indicesArray,J=this.faces.length;if(!I||3*J!==I.length){var K=e>65535?Uint32Array:Uint16Array;I=D.indicesArray=new K(3*this.faces.length)}for(var H=0,r=0;J>r;r++)I[H++]=this.faces[r][0],I[H++]=this.faces[r][1],I[H++]=this.faces[r][2]}for(var j in a){var z=a[j].value,L=a[j].type,A=a[j].size,y=D.attributeArrays[j],M=e*A;if(y&&y.length===M||(y=new i[j](M),D.attributeArrays[j]=y),1===A)for(var r=0;r<z.length;r++)y[r]=z[r];else for(var H=0,r=0;r<z.length;r++)for(var B=0;A>B;B++)y[H++]=z[r][B]}}},_updateBuffer:function(a,c,d){var e=this._cache.get("chunks"),f=!1;if(!e){e=[];for(var g=0;g<this._arrayChunks.length;g++)e[g]={attributeBuffers:[],indicesBuffer:null};this._cache.put("chunks",e),f=!0}for(var h=0;h<this._arrayChunks.length;h++){var i=e[h];i||(i=e[h]={attributeBuffers:[],indicesBuffer:null});var j=i.attributeBuffers,k=i.indicesBuffer,l=this._arrayChunks[h],m=l.attributeArrays,n=l.indicesArray,o=0,p=0;for(var q in c){var r,s=c[q],t=s.type,u=s.semantic,v=s.size;if(!f){for(var g=p;g<j.length;g++)if(j[g].name===q){r=j[g],p=g+1;break}if(!r)for(var g=p-1;g>=0;g--)if(j[g].name===q){r=j[g],p=g;break}}var w;w=r?r.buffer:a.createBuffer(),a.bindBuffer(a.ARRAY_BUFFER,w),a.bufferData(a.ARRAY_BUFFER,m[q],this.hint),j[o++]=new b.AttributeBuffer(q,t,w,v,u)}j.length=o,d&&(k||(k=new b.IndicesBuffer(a.createBuffer()),i.indicesBuffer=k),k.count=n.length,a.bindBuffer(a.ELEMENT_ARRAY_BUFFER,k.buffer),a.bufferData(a.ELEMENT_ARRAY_BUFFER,n,this.hint))}},generateVertexNormals:function(){for(var a=this.faces,b=a.length,c=this.attributes,d=c.position.value,e=c.normal.value,f=k(),g=k(),i=k(),l=0;l<e.length;l++)h.set(e[l],0,0,0);for(var l=e.length;l<d.length;l++)e[l]=[0,0,0];for(var m=0;b>m;m++){var n=a[m],o=n[0],p=n[1],q=n[2],r=d[o],s=d[p],t=d[q];h.sub(g,r,s),h.sub(i,s,t),h.cross(f,g,i),j(e[o],e[o],f),j(e[p],e[p],f),j(e[q],e[q],f)}for(var l=0;l<e.length;l++)h.normalize(e[l],e[l])},generateFaceNormals:function(){this.isUniqueVertex()||this.generateUniqueVertex();for(var a=this.faces,b=a.length,c=this.attributes,d=c.position.value,e=c.normal.value,f=k(),g=k(),i=k(),j=e.length===d.length,m=0;b>m;m++){var n=a[m],o=n[0],p=n[1],q=n[2],r=d[o],s=d[p],t=d[q];h.sub(g,r,s),h.sub(i,s,t),h.cross(f,g,i),j?(h.copy(e[o],f),h.copy(e[p],f),h.copy(e[q],f)):e[o]=e[p]=e[q]=l.call(f)}},generateTangents:function(){for(var a=this.attributes,b=a.texcoord0.value,c=a.position.value,d=a.tangent.value,e=a.normal.value,f=[],g=[],i=this.getVertexNumber(),k=0;i>k;k++)f[k]=[0,0,0],g[k]=[0,0,0];for(var l=[0,0,0],m=[0,0,0],k=0;k<this.faces.length;k++){var n=this.faces[k],o=n[0],p=n[1],q=n[2],r=b[o],s=b[p],t=b[q],u=c[o],v=c[p],w=c[q],x=v[0]-u[0],y=w[0]-u[0],z=v[1]-u[1],A=w[1]-u[1],B=v[2]-u[2],C=w[2]-u[2],D=s[0]-r[0],E=t[0]-r[0],F=s[1]-r[1],G=t[1]-r[1],H=1/(D*G-F*E);l[0]=(G*x-F*y)*H,l[1]=(G*z-F*A)*H,l[2]=(G*B-F*C)*H,m[0]=(D*y-E*x)*H,m[1]=(D*A-E*z)*H,m[2]=(D*C-E*B)*H,j(f[o],f[o],l),j(f[p],f[p],l),j(f[q],f[q],l),j(g[o],g[o],m),j(g[p],g[p],m),j(g[q],g[q],m)}for(var I=[0,0,0,0],J=[0,0,0],k=0;i>k;k++){var K=e[k],L=f[k];h.scale(I,K,h.dot(K,L)),h.sub(I,L,I),h.normalize(I,I),h.cross(J,K,L),I[3]=h.dot(J,g[k])<0?-1:1,d[k]=I.slice()}},isUniqueVertex:function(){return this.isUseFace()?this.getVertexNumber()===3*this.faces.length:!0},generateUniqueVertex:function(){for(var a=[],b=0;b<this.getVertexNumber();b++)a[b]=0;for(var c=this.getVertexNumber(),d=this.getEnabledAttributes(),e=this.faces,f=Object.keys(d),b=0;b<e.length;b++)for(var g=e[b],h=0;3>h;h++){var i=g[h];if(a[i]>0){for(var j=0;j<f.length;j++){var k=f[j],m=d[k].value,n=d[k].size;1===n?m.push(m[i]):m.push(l.call(m[i]))}g[h]=c,c++}a[i]++}this.dirty()},generateBarycentric:function(){var a=[1,0,0],b=[0,0,1],c=[0,1,0];return function(){this.isUniqueVertex()||this.generateUniqueVertex();var d=this.attributes.barycentric.value;if(d.length!=3*this.faces.length)for(var e,f,g,h,i=0;i<this.faces.length;i++)h=this.faces[i],e=h[0],f=h[1],g=h[2],d[e]=a,d[f]=b,d[g]=c}}(),convertToStatic:function(a,b){if(this._updateAttributesAndIndicesArrays(this.getEnabledAttributes(),!0,b),this._arrayChunks.length>1)console.warn("Large geometry will discard chunks when convert to StaticGeometry");else if(0===this._arrayChunks.length)return a;var d=this._arrayChunks[0],e=this.getEnabledAttributes();for(var f in e){var g=e[f],h=a.attributes[f];h||(h=a.attributes[f]={type:g.type,size:g.size,value:null},g.semantic&&(h.semantic=g.semantic)),h.value=d.attributeArrays[f]}return a.faces=d.indicesArray,this.boundingBox&&(a.boundingBox=new c,a.boundingBox.min.copy(this.boundingBox.min),a.boundingBox.max.copy(this.boundingBox.max)),a},applyTransform:function(a){var b=this.attributes,c=b.position.value,d=b.normal.value,e=b.tangent.value,f=h.transformMat4;a=a._array;for(var g=0;g<c.length;g++)f(c[g],c[g],a);var j=i.create();i.invert(j,a),i.transpose(j,j);for(var g=0;g<d.length;g++)f(d[g],d[g],j);for(var g=0;g<e.length;g++)f(e[g],e[g],j);this.boundingBox&&this.updateBoundingBox()},dispose:function(a){var b=this._cache;b.use(a.__GLID__);var c=b.get("chunks");if(c)for(var d=0;d<c.length;d++)for(var e=c[d],f=0;f<e.attributeBuffers.length;f++){var g=e.attributeBuffers[f];a.deleteBuffer(g.buffer)}b.deleteContext(a.__GLID__)}});return n}),d("qtek/Texture",["require","./core/Base","./core/glenum","./core/Cache"],function(a){var b=a("./core/Base"),c=a("./core/glenum"),d=a("./core/Cache"),e=b.derive({width:512,height:512,type:c.UNSIGNED_BYTE,format:c.RGBA,wrapS:c.CLAMP_TO_EDGE,wrapT:c.CLAMP_TO_EDGE,minFilter:c.LINEAR_MIPMAP_LINEAR,magFilter:c.LINEAR,useMipmap:!0,anisotropic:1,flipY:!0,unpackAlignment:4,premultiplyAlpha:!1,dynamic:!1,NPOT:!1},function(){this._cache=new d},{getWebGLTexture:function(a){var b=this._cache;return b.use(a.__GLID__),b.miss("webgl_texture")&&b.put("webgl_texture",a.createTexture()),this.dynamic?this.update(a):b.isDirty()&&(this.update(a),b.fresh()),b.get("webgl_texture")},bind:function(){},unbind:function(){},dirty:function(){this._cache.dirtyAll()},update:function(){},beforeUpdate:function(a){a.pixelStorei(a.UNPACK_FLIP_Y_WEBGL,this.flipY),a.pixelStorei(a.UNPACK_PREMULTIPLY_ALPHA_WEBGL,this.premultiplyAlpha),a.pixelStorei(a.UNPACK_ALIGNMENT,this.unpackAlignment),this.fallBack()},fallBack:function(){var a=this.isPowerOfTwo();this.format===c.DEPTH_COMPONENT&&(this.useMipmap=!1),a&&this.useMipmap?(this.NPOT=!1,this._minFilterOriginal&&(this.minFilter=this._minFilterOriginal),this._magFilterOriginal&&(this.magFilter=this._magFilterOriginal),this._wrapSOriginal&&(this.wrapS=this._wrapSOriginal),this._wrapTOriginal&&(this.wrapT=this._wrapTOriginal)):(this.NPOT=!0,this._minFilterOriginal=this.minFilter,this._magFilterOriginal=this.magFilter,this._wrapSOriginal=this.wrapS,this._wrapTOriginal=this.wrapT,this.minFilter==c.NEAREST_MIPMAP_NEAREST||this.minFilter==c.NEAREST_MIPMAP_LINEAR?this.minFilter=c.NEAREST:(this.minFilter==c.LINEAR_MIPMAP_LINEAR||this.minFilter==c.LINEAR_MIPMAP_NEAREST)&&(this.minFilter=c.LINEAR),this.wrapS=c.CLAMP_TO_EDGE,this.wrapT=c.CLAMP_TO_EDGE)},nextHighestPowerOfTwo:function(a){--a;for(var b=1;32>b;b<<=1)a|=a>>b;return a+1},dispose:function(a){var b=this._cache;b.use(a.__GLID__);var c=b.get("webgl_texture");c&&a.deleteTexture(c),b.deleteContext(a.__GLID__)},isRenderable:function(){},isPowerOfTwo:function(){}});return e.BYTE=c.BYTE,e.UNSIGNED_BYTE=c.UNSIGNED_BYTE,e.SHORT=c.SHORT,e.UNSIGNED_SHORT=c.UNSIGNED_SHORT,e.INT=c.INT,e.UNSIGNED_INT=c.UNSIGNED_INT,e.FLOAT=c.FLOAT,e.HALF_FLOAT=36193,e.DEPTH_COMPONENT=c.DEPTH_COMPONENT,e.ALPHA=c.ALPHA,e.RGB=c.RGB,e.RGBA=c.RGBA,e.LUMINANCE=c.LUMINANCE,e.LUMINANCE_ALPHA=c.LUMINANCE_ALPHA,e.COMPRESSED_RGB_S3TC_DXT1_EXT=33776,e.COMPRESSED_RGBA_S3TC_DXT1_EXT=33777,e.COMPRESSED_RGBA_S3TC_DXT3_EXT=33778,e.COMPRESSED_RGBA_S3TC_DXT5_EXT=33779,e.NEAREST=c.NEAREST,e.LINEAR=c.LINEAR,e.NEAREST_MIPMAP_NEAREST=c.NEAREST_MIPMAP_NEAREST,e.LINEAR_MIPMAP_NEAREST=c.LINEAR_MIPMAP_NEAREST,e.NEAREST_MIPMAP_LINEAR=c.NEAREST_MIPMAP_LINEAR,e.LINEAR_MIPMAP_LINEAR=c.LINEAR_MIPMAP_LINEAR,e.TEXTURE_MAG_FILTER=c.TEXTURE_MAG_FILTER,e.TEXTURE_MIN_FILTER=c.TEXTURE_MIN_FILTER,e.REPEAT=c.REPEAT,e.CLAMP_TO_EDGE=c.CLAMP_TO_EDGE,e.MIRRORED_REPEAT=c.MIRRORED_REPEAT,e}),d("qtek/TextureCube",["require","./Texture","./core/glinfo","./core/glenum","./core/util"],function(a){function b(a){return"CANVAS"===a.nodeName||"VIDEO"===a.nodeName||a.complete}var c=a("./Texture"),d=a("./core/glinfo"),e=a("./core/glenum"),f=a("./core/util"),g=["px","nx","py","ny","pz","nz"],h=c.derive(function(){return{image:{px:null,nx:null,py:null,ny:null,pz:null,nz:null},pixels:{px:null,nx:null,py:null,ny:null,pz:null,nz:null},mipmaps:[]}},{update:function(a){a.bindTexture(a.TEXTURE_CUBE_MAP,this._cache.get("webgl_texture")),this.beforeUpdate(a);var b=this.format,c=this.type;a.texParameteri(a.TEXTURE_CUBE_MAP,a.TEXTURE_WRAP_S,this.wrapS),a.texParameteri(a.TEXTURE_CUBE_MAP,a.TEXTURE_WRAP_T,this.wrapT),a.texParameteri(a.TEXTURE_CUBE_MAP,a.TEXTURE_MAG_FILTER,this.magFilter),a.texParameteri(a.TEXTURE_CUBE_MAP,a.TEXTURE_MIN_FILTER,this.minFilter);var f=d.getExtension(a,"EXT_texture_filter_anisotropic");if(f&&this.anisotropic>1&&a.texParameterf(a.TEXTURE_CUBE_MAP,f.TEXTURE_MAX_ANISOTROPY_EXT,this.anisotropic),36193===c){var g=d.getExtension(a,"OES_texture_half_float");g||(c=e.FLOAT)}if(this.mipmaps.length)for(var h=this.width,i=this.height,j=0;j<this.mipmaps.length;j++){var k=this.mipmaps[j];this._updateTextureData(a,k,j,h,i,b,c),h/=2,i/=2}else this._updateTextureData(a,this,0,this.width,this.height,b,c),!this.NPOT&&this.useMipmap&&a.generateMipmap(a.TEXTURE_CUBE_MAP);a.bindTexture(a.TEXTURE_CUBE_MAP,null)},_updateTextureData:function(a,b,c,d,e,f,h){for(var i=0;6>i;i++){var j=g[i],k=b.image&&b.image[j];k?a.texImage2D(a.TEXTURE_CUBE_MAP_POSITIVE_X+i,c,f,f,h,k):a.texImage2D(a.TEXTURE_CUBE_MAP_POSITIVE_X+i,c,f,d,e,0,f,h,b.pixels&&b.pixels[j])}},generateMipmap:function(a){this.useMipmap&&!this.NPOT&&(a.bindTexture(a.TEXTURE_CUBE_MAP,this._cache.get("webgl_texture")),a.generateMipmap(a.TEXTURE_CUBE_MAP))},bind:function(a){a.bindTexture(a.TEXTURE_CUBE_MAP,this.getWebGLTexture(a))},unbind:function(a){a.bindTexture(a.TEXTURE_CUBE_MAP,null)},isPowerOfTwo:function(){function a(a){return 0===(a&a-1)}return this.image.px?a(this.image.px.width)&&a(this.image.px.height):a(this.width)&&a(this.height)},isRenderable:function(){return this.image.px?b(this.image.px)&&b(this.image.nx)&&b(this.image.py)&&b(this.image.ny)&&b(this.image.pz)&&b(this.image.nz):this.width&&this.height},load:function(a){var b=0,c=this;return f.each(a,function(a,d){var e=new Image;e.onload=function(){b--,0===b&&(c.dirty(),c.trigger("success",c)),e.onload=null},e.onerror=function(){b--,e.onerror=null},b++,e.src=a,c.image[d]=e}),this}});return h}),d("qtek/FrameBuffer",["require","./core/Base","./TextureCube","./core/glinfo","./core/glenum","./core/Cache"],function(a){var b=a("./core/Base"),c=a("./TextureCube"),d=a("./core/glinfo"),e=a("./core/glenum"),f=a("./core/Cache"),g="framebuffer",h="renderbuffer",i=h+"_width",j=h+"_height",k=h+"_attached",l="depthtexture_attached",m=e.FRAMEBUFFER,n=e.RENDERBUFFER,o=e.DEPTH_ATTACHMENT,p=e.COLOR_ATTACHMENT0,q=b.derive({depthBuffer:!0,_attachedTextures:null,_width:0,_height:0,_binded:!1},function(){this._cache=new f,this._attachedTextures={}},{resize:function(a,b){this._width=a,this._height=b},bind:function(a){var b=a.gl;this._binded||(b.bindFramebuffer(m,this.getFrameBuffer(b)),this._binded=!0);var c=this._cache;if(c.put("viewport",a.viewport),a.setViewport(0,0,this._width,this._height,1),!c.get(l)&&this.depthBuffer){c.miss(h)&&c.put(h,b.createRenderbuffer());var d=this._width,e=this._height,f=c.get(h);(d!==c.get(i)||e!==c.get(j))&&(b.bindRenderbuffer(n,f),b.renderbufferStorage(n,b.DEPTH_COMPONENT16,d,e),c.put(i,d),c.put(j,e),b.bindRenderbuffer(n,null)),c.get(k)||(b.framebufferRenderbuffer(m,o,n,f),c.put(k,!0))}},unbind:function(a){var b=a.gl;b.bindFramebuffer(m,null),this._binded=!1,this._cache.use(b.__GLID__);var d=this._cache.get("viewport");d&&a.setViewport(d.x,d.y,d.width,d.height);for(var e in this._attachedTextures){var f=this._attachedTextures[e];if(!f.NPOT&&f.useMipmap){var g=f instanceof c?b.TEXTURE_CUBE_MAP:b.TEXTURE_2D;b.bindTexture(g,f.getWebGLTexture(b)),b.generateMipmap(g),b.bindTexture(g,null)}}},getFrameBuffer:function(a){var b=this._cache;return b.use(a.__GLID__),b.miss(g)&&b.put(g,a.createFramebuffer()),b.get(g)},attach:function(a,b,c,f,g){if(!b.width)throw new Error("The texture attached to color buffer is not a valid.");if(this._binded||(a.bindFramebuffer(m,this.getFrameBuffer(a)),this._binded=!0),this._width=b.width,this._height=b.height,c=c||p,f=f||a.TEXTURE_2D,g=g||0,c===o){var h=d.getExtension(a,"WEBGL_depth_texture");if(!h)return console.error("Depth texture is not supported by the browser"),void 0;if(b.format!==e.DEPTH_COMPONENT)return console.error("The texture attached to depth buffer is not a valid."),void 0;this._cache.put(k,!1),this._cache.put(l,!0)}this._attachedTextures[c]=b,a.framebufferTexture2D(m,c,f,b.getWebGLTexture(a),g)},detach:function(){},dispose:function(a){var b=this._cache;b.use(a.__GLID__);var c=b.get(h);c&&a.deleteRenderbuffer(c);var d=b.get(g);d&&a.deleteFramebuffer(d),this._attachedTextures={},this._width=this._height=0,b.deleteContext(a.__GLID__)}});return q.DEPTH_ATTACHMENT=o,q.COLOR_ATTACHMENT0=p,q.STENCIL_ATTACHMENT=e.STENCIL_ATTACHMENT,q.DEPTH_STENCIL_ATTACHMENT=e.DEPTH_STENCIL_ATTACHMENT,q}),d("qtek/Joint",["require","./core/Base"],function(a){var b=a("./core/Base"),c=b.derive({name:"",index:-1,parentIndex:-1,node:null,rootNode:null});return c}),d("qtek/Light",["require","./Node"],function(a){var b=a("./Node"),c=b.derive(function(){return{color:[1,1,1],intensity:1,castShadow:!0,shadowResolution:512}},{type:"",clone:function(){var a=b.prototype.clone.call(this);return a.color=Array.prototype.slice.call(this.color),a.intensity=this.intensity,a.castShadow=this.castShadow,a.shadowResolution=this.shadowResolution,a}});return c}),d("qtek/Material",["require","./core/Base","./Texture"],function(a){var b=a("./core/Base"),c=a("./Texture"),d=b.derive({name:"",uniforms:null,shader:null,depthTest:!0,depthMask:!0,transparent:!1,blend:null,_enabledUniforms:null},function(){this.name||(this.name="MATERIAL_"+this.__GUID__),this.shader&&this.attachShader(this.shader),this.uniforms||(this.uniforms={})},{bind:function(a,b){for(var d=0,e=b&&b.shader===this.shader,f=0;f<this._enabledUniforms.length;f++){var g=this._enabledUniforms[f],h=this.uniforms[g],i=h.value;if(!e||b.uniforms[g].value!==i)if(void 0!==i){if(!(null===i||i instanceof Array&&!i.length))if(i instanceof c){var j=this.shader.setUniform(a,"1i",g,d);
if(!j)continue;var k=i;a.activeTexture(a.TEXTURE0+d),k.isRenderable()?k.bind(a):k.unbind(a),d++}else if(i instanceof Array){if(0===i.length)continue;var l=i[0];if(l instanceof c){if(!this.shader.hasUniform(g))continue;for(var m=[],n=0;n<i.length;n++){var k=i[n];a.activeTexture(a.TEXTURE0+d),k.isRenderable()?k.bind(a):k.unbind(a),m.push(d++)}this.shader.setUniform(a,"1iv",g,m)}else this.shader.setUniform(a,h.type,g,i)}else this.shader.setUniform(a,h.type,g,i)}else console.warn('Uniform value "'+g+'" is undefined')}},setUniform:function(a,b){var c=this.uniforms[a];c&&(c.value=b)},setUniforms:function(a){for(var b in a){var c=a[b];this.setUniform(b,c)}},enableUniform:function(a){this.uniforms[a]&&!this.isUniformEnabled(a)&&this._enabledUniforms.push(a)},disableUniform:function(a){var b=this._enabledUniforms.indexOf(a);b>=0&&this._enabledUniforms.splice(b,1)},isUniformEnabled:function(a){return this._enabledUniforms.indexOf(a)>=0},set:function(a,b){if("object"==typeof a)for(var c in a){var d=a[c];this.set(c,d)}else{var e=this.uniforms[a];e&&(e.value=b)}},get:function(a){var b=this.uniforms[a];return b?b.value:void 0},attachShader:function(a,b){this.shader&&this.shader.detached();var c=this.uniforms;this.uniforms=a.createUniforms(),this.shader=a;var d=this.uniforms;if(this._enabledUniforms=Object.keys(d),b)for(var e in c)d[e]&&(d[e].value=c[e].value);a.attached()},detachShader:function(){this.shader.detached(),this.shader=null,this.uniforms={}},clone:function(){var a=new d({name:this.name,shader:this.shader});for(var b in this.uniforms)a.uniforms[b].value=this.uniforms[b].value;return a.depthTest=this.depthTest,a.depthMask=this.depthMask,a.transparent=this.transparent,a.blend=this.blend,a},dispose:function(a,b){if(b)for(var d in this.uniforms){var e=this.uniforms[d].value;if(e)if(e instanceof c)e.dispose(a);else if(e instanceof Array)for(var f=0;f<e.length;f++)e[f]instanceof c&&e[f].dispose(a)}var g=this.shader;g&&(this.detachShader(),g.isAttachedToAny()||g.dispose(a))}});return d}),d("qtek/Renderable",["require","./Node","./core/glenum","./core/glinfo","./DynamicGeometry"],function(a){function b(a,b,c){this.availableAttributes=a,this.availableAttributeSymbols=b,this.indicesBuffer=c,this.vao=null}var c,d=a("./Node"),e=a("./core/glenum"),f=a("./core/glinfo"),g=a("./DynamicGeometry"),h=0,i=null,j=!0,k=function(){this.faceNumber=0,this.vertexNumber=0,this.drawCallNumber=0},l=d.derive({material:null,geometry:null,mode:e.TRIANGLES,_drawCache:null,_renderInfo:null},function(){this._drawCache={},this._renderInfo=new k},{lineWidth:1,culling:!0,cullFace:e.BACK,frontFace:e.CCW,frustumCulling:!0,receiveShadow:!0,castShadow:!0,ignorePicking:!1,isRenderable:function(){return this.geometry&&this.material&&this.visible},render:function(a,d){var k=d||this.material,l=k.shader,m=this.geometry,n=this.mode,o=m.getVertexNumber(),p=m.isUseFace(),q=f.getExtension(a,"OES_element_index_uint"),r=q&&o>65535,s=r?a.UNSIGNED_INT:a.UNSIGNED_SHORT,t=f.getExtension(a,"OES_vertex_array_object"),u=!m.dynamic,v=this._renderInfo;v.vertexNumber=o,v.faceNumber=0,v.drawCallNumber=0;var w=!1;if(c=a.__GLID__+"-"+m.__GUID__+"-"+l.__GUID__,c!==h?w=!0:(m instanceof g&&o>65535&&!q&&p||t&&u||m._cache.isDirty())&&(w=!0),h=c,w){var x=this._drawCache[c];if(!x){var y=m.getBufferChunks(a);if(!y)return;x=[];for(var z=0;z<y.length;z++){for(var A=y[z],B=A.attributeBuffers,C=A.indicesBuffer,D=[],E=[],F=0;F<B.length;F++){var G,H=B[F],I=H.name,J=H.semantic;if(J){var K=l.attribSemantics[J];G=K&&K.symbol}else G=I;G&&l.attributeTemplates[G]&&(D.push(H),E.push(G))}var L=new b(D,E,C);x.push(L)}u&&(this._drawCache[c]=x)}for(var M=0;M<x.length;M++){var L=x[M],N=!0;t&&u&&(null==L.vao?L.vao=t.createVertexArrayOES():N=!1,t.bindVertexArrayOES(L.vao));var D=L.availableAttributes,C=L.indicesBuffer;if(N)for(var O=l.enableAttributes(a,L.availableAttributeSymbols,t&&u&&L.vao),F=0;F<D.length;F++){var P=O[F];if(-1!==P){var Q,H=D[F],R=H.buffer,S=H.size;switch(H.type){case"float":Q=a.FLOAT;break;case"byte":Q=a.BYTE;break;case"ubyte":Q=a.UNSIGNED_BYTE;break;case"short":Q=a.SHORT;break;case"ushort":Q=a.UNSIGNED_SHORT;break;default:Q=a.FLOAT}a.bindBuffer(a.ARRAY_BUFFER,R),a.vertexAttribPointer(P,S,Q,!1,0,0)}}(n==e.LINES||n==e.LINE_STRIP||n==e.LINE_LOOP)&&a.lineWidth(this.lineWidth),i=C,j=m.isUseFace(),j?(N&&a.bindBuffer(a.ELEMENT_ARRAY_BUFFER,C.buffer),a.drawElements(n,C.count,s,0),v.faceNumber+=C.count/3):a.drawArrays(n,0,o),t&&u&&t.bindVertexArrayOES(null),v.drawCallNumber++}}else j?(a.drawElements(n,i.count,s,0),v.faceNumber=i.count/3):a.drawArrays(n,0,o),v.drawCallNumber=1;return v},clone:function(){var a=["castShadow","receiveShadow","mode","culling","cullFace","frontFace","frustumCulling"];return function(){var b=d.prototype.clone.call(this);b.geometry=this.geometry,b.material=this.material;for(var c=0;c<a.length;c++){var e=a[c];b[e]!==this[e]&&(b[e]=this[e])}return b}}()});return l.beforeFrame=function(){h=0},l.POINTS=e.POINTS,l.LINES=e.LINES,l.LINE_LOOP=e.LINE_LOOP,l.LINE_STRIP=e.LINE_STRIP,l.TRIANGLES=e.TRIANGLES,l.TRIANGLE_STRIP=e.TRIANGLE_STRIP,l.TRIANGLE_FAN=e.TRIANGLE_FAN,l.BACK=e.BACK,l.FRONT=e.FRONT,l.FRONT_AND_BACK=e.FRONT_AND_BACK,l.CW=e.CW,l.CCW=e.CCW,l.RenderInfo=k,l}),d("qtek/Mesh",["require","./Renderable","./core/glenum"],function(a){var b=a("./Renderable"),c=a("./core/glenum"),d=b.derive({skeleton:null,joints:null},function(){this.joints||(this.joints=[])},{render:function(a,c){var d=c||this.material;if(this.skeleton){var e=this.skeleton.getSubSkinMatrices(this.__GUID__,this.joints);d.shader.setUniformBySemantic(a,"SKIN_MATRIX",e)}return b.prototype.render.call(this,a,c)}});return d.POINTS=c.POINTS,d.LINES=c.LINES,d.LINE_LOOP=c.LINE_LOOP,d.LINE_STRIP=c.LINE_STRIP,d.TRIANGLES=c.TRIANGLES,d.TRIANGLE_STRIP=c.TRIANGLE_STRIP,d.TRIANGLE_FAN=c.TRIANGLE_FAN,d.BACK=c.BACK,d.FRONT=c.FRONT,d.FRONT_AND_BACK=c.FRONT_AND_BACK,d.CW=c.CW,d.CCW=c.CCW,d}),d("qtek/Shader",["require","./core/Base","./core/util","./core/Cache","./core/vendor","./dep/glmatrix"],function(a){function b(){return{locations:{},attriblocations:{}}}function c(a,b,c){return a.getShaderParameter(b,a.COMPILE_STATUS)?void 0:[a.getShaderInfoLog(b),d(c)].join("\n")}function d(a){for(var b=a.split("\n"),c=0,d=b.length;d>c;c++)b[c]=c+1+": "+b[c];return b.join("\n")}var e=a("./core/Base"),f=a("./core/util"),g=a("./core/Cache"),h=a("./core/vendor"),i=a("./dep/glmatrix"),j=i.mat2,k=i.mat3,l=i.mat4,m=/uniform\s+(bool|float|int|vec2|vec3|vec4|ivec2|ivec3|ivec4|mat2|mat3|mat4|sampler2D|samplerCube)\s+([\w\,]+)?(\[.*?\])?\s*(:\s*([\S\s]+?))?;/g,n=/attribute\s+(float|int|vec2|vec3|vec4)\s+(\w*)\s*(:\s*(\w+))?;/g,o=/#define\s+(\w+)?(\s+[\w-.]+)?\s*\n/g,p={bool:"1i","int":"1i",sampler2D:"t",samplerCube:"t","float":"1f",vec2:"2f",vec3:"3f",vec4:"4f",ivec2:"2i",ivec3:"3i",ivec4:"4i",mat2:"m2",mat3:"m3",mat4:"m4"},q={bool:function(){return!0},"int":function(){return 0},"float":function(){return 0},sampler2D:function(){return null},samplerCube:function(){return null},vec2:function(){return[0,0]},vec3:function(){return[0,0,0]},vec4:function(){return[0,0,0,0]},ivec2:function(){return[0,0]},ivec3:function(){return[0,0,0]},ivec4:function(){return[0,0,0,0]},mat2:function(){return j.create()},mat3:function(){return k.create()},mat4:function(){return l.create()},array:function(){return[]}},r=["POSITION","NORMAL","BINORMAL","TANGENT","TEXCOORD","TEXCOORD_0","TEXCOORD_1","COLOR","JOINT","WEIGHT","SKIN_MATRIX"],s=["WORLD","VIEW","PROJECTION","WORLDVIEW","VIEWPROJECTION","WORLDVIEWPROJECTION","WORLDINVERSE","VIEWINVERSE","PROJECTIONINVERSE","WORLDVIEWINVERSE","VIEWPROJECTIONINVERSE","WORLDVIEWPROJECTIONINVERSE","WORLDTRANSPOSE","VIEWTRANSPOSE","PROJECTIONTRANSPOSE","WORLDVIEWTRANSPOSE","VIEWPROJECTIONTRANSPOSE","WORLDVIEWPROJECTIONTRANSPOSE","WORLDINVERSETRANSPOSE","VIEWINVERSETRANSPOSE","PROJECTIONINVERSETRANSPOSE","WORLDVIEWINVERSETRANSPOSE","VIEWPROJECTIONINVERSETRANSPOSE","WORLDVIEWPROJECTIONINVERSETRANSPOSE"],t={},u=1,v=2,w=3,x=e.derive(function(){return{vertex:"",fragment:"",precision:"mediump",attribSemantics:{},matrixSemantics:{},matrixSemanticKeys:[],uniformTemplates:{},attributeTemplates:{},vertexDefines:{},fragmentDefines:{},lightNumber:{},_attacheMaterialNumber:0,_uniformList:[],_textureStatus:{},_vertexProcessed:"",_fragmentProcessed:"",_currentLocationsMap:{}}},function(){this._cache=new g,this._updateShaderString()},{setVertex:function(a){this.vertex=a,this._updateShaderString(),this.dirty()},setFragment:function(a){this.fragment=a,this._updateShaderString(),this.dirty()},bind:function(a){var c=this._cache;if(c.use(a.__GLID__,b),this._currentLocationsMap=c.get("locations"),c.isDirty()){this._updateShaderString();var d=this._buildProgram(a,this._vertexProcessed,this._fragmentProcessed);if(c.fresh(),d)return d}a.useProgram(c.get("program"))},dirty:function(){var a=this._cache;a.dirtyAll();for(var b=0;b<a._caches.length;b++)if(a._caches[b]){var c=a._caches[b];c.locations={},c.attriblocations={}}},_updateShaderString:function(){(this.vertex!==this._vertexPrev||this.fragment!==this._fragmentPrev)&&(this._parseImport(),this.attribSemantics={},this.matrixSemantics={},this._textureStatus={},this._parseUniforms(),this._parseAttributes(),this._parseDefines(),this._vertexPrev=this.vertex,this._fragmentPrev=this.fragment),this._addDefine()},define:function(a,b,c){var d=this.vertexDefines,e=this.fragmentDefines;c=void 0!==c?c:null,("vertex"==a||"both"==a)&&d[b]!==c&&(d[b]=c,this.dirty()),("fragment"==a||"both"==a)&&e[b]!==c&&(e[b]=c,"both"!==a&&this.dirty())},unDefine:function(a,b){("vertex"==a||"both"==a)&&this.isDefined("vertex",b)&&(delete this.vertexDefines[b],this.dirty()),("fragment"==a||"both"==a)&&this.isDefined("fragment",b)&&(delete this.fragmentDefines[b],"both"!==a&&this.dirty())},isDefined:function(a,b){switch(a){case"vertex":return void 0!==this.vertexDefines[b];case"fragment":return void 0!==this.fragmentDefines[b]}},getDefine:function(a,b){switch(a){case"vertex":return this.vertexDefines[b];case"fragment":return this.fragmentDefines[b]}},enableTexture:function(a){var b=this._textureStatus[a];if(b){var c=b.enabled;c||(b.enabled=!0,this.dirty())}},enableTexturesAll:function(){var a=this._textureStatus;for(var b in a)a[b].enabled=!0;this.dirty()},disableTexture:function(a){var b=this._textureStatus[a];if(b){var c=!b.enabled;c||(b.enabled=!1,this.dirty())}},disableTexturesAll:function(){var a=this._textureStatus;for(var b in a)a[b].enabled=!1;this.dirty()},isTextureEnabled:function(a){return this._textureStatus[a].enabled},getEnabledTextures:function(){var a=[],b=this._textureStatus;for(var c in b)b[c].enabled&&a.push(c);return a},hasUniform:function(a){var b=this._currentLocationsMap[a];return null!==b&&void 0!==b},setUniform:function(a,b,c,d){var e=this._currentLocationsMap,f=e[c];if(null===f||void 0===f)return!1;switch(b){case"m4":a.uniformMatrix4fv(f,!1,d);break;case"2i":a.uniform2i(f,d[0],d[1]);break;case"2f":a.uniform2f(f,d[0],d[1]);break;case"3i":a.uniform3i(f,d[0],d[1],d[2]);break;case"3f":a.uniform3f(f,d[0],d[1],d[2]);break;case"4i":a.uniform4i(f,d[0],d[1],d[2],d[3]);break;case"4f":a.uniform4f(f,d[0],d[1],d[2],d[3]);break;case"1i":a.uniform1i(f,d);break;case"1f":a.uniform1f(f,d);break;case"1fv":a.uniform1fv(f,d);break;case"1iv":a.uniform1iv(f,d);break;case"2iv":a.uniform2iv(f,d);break;case"2fv":a.uniform2fv(f,d);break;case"3iv":a.uniform3iv(f,d);break;case"3fv":a.uniform3fv(f,d);break;case"4iv":a.uniform4iv(f,d);break;case"4fv":a.uniform4fv(f,d);break;case"m2":case"m2v":a.uniformMatrix2fv(f,!1,d);break;case"m3":case"m3v":a.uniformMatrix3fv(f,!1,d);break;case"m4v":if(d instanceof Array){for(var g=new h.Float32Array(16*d.length),i=0,j=0;j<d.length;j++)for(var k=d[j],l=0;16>l;l++)g[i++]=k[l];a.uniformMatrix4fv(f,!1,g)}else d instanceof h.Float32Array&&a.uniformMatrix4fv(f,!1,d)}return!0},setUniformBySemantic:function(a,b,c){var d=this.attribSemantics[b];return d?this.setUniform(a,d.type,d.symbol,c):!1},enableAttributes:function(a,b,c){var d,e=this._cache.get("program"),f=this._cache.get("attriblocations");d=c?c.__enabledAttributeList:t[a.__GLID__],d||(d=c?c.__enabledAttributeList=[]:t[a.__GLID__]=[]);for(var g=[],h=0;h<b.length;h++){var i=b[h];if(this.attributeTemplates[i]){var j=f[i];if(void 0===j){if(j=a.getAttribLocation(e,i),-1===j){g[h]=-1;continue}f[i]=j}g[h]=j,d[j]=d[j]?v:u}else g[h]=-1}for(var h=0;h<d.length;h++)switch(d[h]){case u:a.enableVertexAttribArray(h),d[h]=w;break;case v:d[h]=w;break;case w:a.disableVertexAttribArray(h),d[h]=0}return g},_parseImport:function(){this._vertexProcessedNoDefine=x.parseImport(this.vertex),this._fragmentProcessedNoDefine=x.parseImport(this.fragment)},_addDefine:function(){var a=this.lightNumber,b=this._textureStatus,c=[];for(var d in a){var e=a[d];e>0&&c.push("#define "+d.toUpperCase()+"_NUMBER "+e)}for(var f in b){var g=b[f];g.enabled&&c.push("#define "+f.toUpperCase()+"_ENABLED")}for(var f in this.vertexDefines){var h=this.vertexDefines[f];null===h?c.push("#define "+f):c.push("#define "+f+" "+h.toString())}this._vertexProcessed=c.join("\n")+"\n"+this._vertexProcessedNoDefine,c=[];for(var d in a){var e=a[d];e>0&&c.push("#define "+d.toUpperCase()+"_NUMBER "+e)}for(var f in b){var g=b[f];g.enabled&&c.push("#define "+f.toUpperCase()+"_ENABLED")}for(var f in this.fragmentDefines){var h=this.fragmentDefines[f];null===h?c.push("#define "+f):c.push("#define "+f+" "+h.toString())}var i=c.join("\n")+"\n"+this._fragmentProcessedNoDefine;this._fragmentProcessed=["precision",this.precision,"float"].join(" ")+";\n"+i},_parseUniforms:function(){function a(a,e,f,g,h,i){if(e&&f){var j,k=p[e],l=!0;if(k){if(c._uniformList.push(f),("sampler2D"===e||"samplerCube"===e)&&(c._textureStatus[f]={enabled:!1,shaderType:d}),g&&(k+="v"),i)if(r.indexOf(i)>=0)c.attribSemantics[i]={symbol:f,type:k},l=!1;else if(s.indexOf(i)>=0){var m=!1,n=i;i.match(/TRANSPOSE$/)&&(m=!0,n=i.slice(0,-9)),c.matrixSemantics[i]={symbol:f,type:k,isTranspose:m,semanticNoTranspose:n},l=!1}else if("unconfigurable"===i)l=!1;else{if(j=c._parseDefaultValue(e,i),!j)throw new Error('Unkown semantic "'+i+'"');i=""}l&&(b[f]={type:k,value:g?q.array:j||q[e],semantic:i||null})}return["uniform",e,f,g].join(" ")+";\n"}}var b={},c=this,d="vertex";this._uniformList=[],this._vertexProcessedNoDefine=this._vertexProcessedNoDefine.replace(m,a),d="fragment",this._fragmentProcessedNoDefine=this._fragmentProcessedNoDefine.replace(m,a),c.matrixSemanticKeys=Object.keys(this.matrixSemantics),this.uniformTemplates=b},_parseDefaultValue:function(a,b){var c=/\[\s*(.*)\s*\]/;{if("vec2"!==a&&"vec3"!==a&&"vec4"!==a)return"bool"===a?function(){return"true"===b.toLowerCase()?!0:!1}:"float"===a?function(){return parseFloat(b)}:void 0;var d=c.exec(b)[1];if(d){var e=d.split(/\s*,\s*/);return function(){return new h.Float32Array(e)}}}},createUniforms:function(){var a={};for(var b in this.uniformTemplates){var c=this.uniformTemplates[b];a[b]={type:c.type,value:c.value()}}return a},attached:function(){this._attacheMaterialNumber++},detached:function(){this._attacheMaterialNumber--},isAttachedToAny:function(){return 0!==this._attacheMaterialNumber},_parseAttributes:function(){function a(a,d,e,f,g){if(d&&e){var h=1;switch(d){case"vec4":h=4;break;case"vec3":h=3;break;case"vec2":h=2;break;case"float":h=1}if(b[e]={type:"float",size:h,semantic:g||null},g){if(r.indexOf(g)<0)throw new Error('Unkown semantic "'+g+'"');c.attribSemantics[g]={symbol:e,type:d}}}return["attribute",d,e].join(" ")+";\n"}var b={},c=this;this._vertexProcessedNoDefine=this._vertexProcessedNoDefine.replace(n,a),this.attributeTemplates=b},_parseDefines:function(){function a(a,d,e){var f="vertex"===c?b.vertexDefines:b.fragmentDefines;return f[d]||(f[d]="false"==e?!1:"true"==e?!0:e?parseFloat(e):null),""}var b=this,c="vertex";this._vertexProcessedNoDefine=this._vertexProcessedNoDefine.replace(o,a),c="fragment",this._fragmentProcessedNoDefine=this._fragmentProcessedNoDefine.replace(o,a)},_buildProgram:function(a,b,d){var e=this._cache;e.get("program")&&a.deleteProgram(e.get("program"));var f=a.createProgram(),g=a.createShader(a.VERTEX_SHADER);a.shaderSource(g,b),a.compileShader(g);var h=a.createShader(a.FRAGMENT_SHADER);a.shaderSource(h,d),a.compileShader(h);var i=c(a,g,b);if(i)return i;if(i=c(a,h,d))return i;if(a.attachShader(f,g),a.attachShader(f,h),this.attribSemantics.POSITION)a.bindAttribLocation(f,0,this.attribSemantics.POSITION.symbol);else{var j=Object.keys(this.attributeTemplates);a.bindAttribLocation(f,0,j[0])}if(a.linkProgram(f),!a.getProgramParameter(f,a.LINK_STATUS))return"Could not link program\nVALIDATE_STATUS: "+a.getProgramParameter(f,a.VALIDATE_STATUS)+", gl error ["+a.getError()+"]";for(var k=0;k<this._uniformList.length;k++){var l=this._uniformList[k],m=e.get("locations");m[l]=a.getUniformLocation(f,l)}a.deleteShader(g),a.deleteShader(h),e.put("program",f)},clone:function(){var a=new x({vertex:this.vertex,fragment:this.fragment,vertexDefines:f.clone(this.vertexDefines),fragmentDefines:f.clone(this.fragmentDefines)});for(var b in this._textureStatus)a._textureStatus[b]=f.clone(this._textureStatus[b]);return a},dispose:function(a){this._cache.use(a.__GLID__);var b=this._cache.get("program");b&&a.deleteProgram(b),this._cache.deleteContext(a.__GLID__),this._locations={}}}),y=/(@import)\s*([0-9a-zA-Z_\-\.]*)/g;x.parseImport=function(a){return a=a.replace(y,function(a,b,c){var a=x.source(c);return a?x.parseImport(a):(console.warn('Shader chunk "'+c+'" not existed in library'),"")})};var z=/(@export)\s*([0-9a-zA-Z_\-\.]*)\s*\n([\s\S]*?)@end/g;return x["import"]=function(a){a.replace(z,function(a,b,c,d){var d=d.replace(/(^[\s\t\xa0\u3000]+)|([\u3000\xa0\s\t]+\x24)/g,"");if(d){for(var e,f=c.split("."),g=x.codes,h=0;h<f.length-1;)e=f[h++],g[e]||(g[e]={}),g=g[e];e=f[h],g[e]=d}return d})},x.codes={},x.source=function(a){for(var b=a.split("."),c=x.codes,d=0;c&&d<b.length;){var e=b[d++];c=c[e]}return c?c:(console.warn('Shader "'+a+'" not existed in library'),void 0)},x}),d("qtek/shader/library",["require","../Shader","../core/util"],function(a){function b(){this._pool={}}function c(a,b,c){e[a]={vertex:b,fragment:c}}var d=a("../Shader");a("../core/util");var e={};b.prototype.get=function(a,b){var c=[],f={},g={};"string"==typeof b?c=Array.prototype.slice.call(arguments,1):"[object Object]"==Object.prototype.toString.call(b)?(c=b.textures||[],f=b.vertexDefines||{},g=b.fragmentDefines||{}):b instanceof Array&&(c=b);var h=Object.keys(f),i=Object.keys(g);c.sort(),h.sort(),i.sort();var j=[a];j=j.concat(c);for(var k=0;k<h.length;k++)j.push(f[h[k]]);for(var k=0;k<i.length;k++)j.push(g[i[k]]);var l=j.join("_");if(this._pool[l])return this._pool[l];var m=e[a];if(!m)return console.error('Shader "'+a+'"'+" is not in the library"),void 0;for(var n=new d({vertex:m.vertex,fragment:m.fragment}),k=0;k<c.length;k++)n.enableTexture(c[k]);for(var a in f)n.define("vertex",a,f[a]);for(var a in g)n.define("fragment",a,g[a]);return this._pool[l]=n,n},b.prototype.clear=function(){this._pool={}};var f=new b;return{createLibrary:function(){return new b},get:function(){return f.get.apply(f,arguments)},template:c,clear:function(){return f.clear()}}}),d("qtek/math/Vector2",["require","../dep/glmatrix"],function(a){var b=a("../dep/glmatrix"),c=b.vec2,d=function(a,b){a=a||0,b=b||0,this._array=c.fromValues(a,b),this._dirty=!0};if(d.prototype={constructor:d,add:function(a){return c.add(this._array,this._array,a._array),this._dirty=!0,this},set:function(a,b){return this._array[0]=a,this._array[1]=b,this._dirty=!0,this},setArray:function(a){return this._array[0]=a[0],this._array[1]=a[1],this._dirty=!0,this},clone:function(){return new d(this.x,this.y)},copy:function(a){return c.copy(this._array,a._array),this._dirty=!0,this},cross:function(a,b){return c.cross(a._array,this._array,b._array),a._dirty=!0,this},dist:function(a){return c.dist(this._array,a._array)},distance:function(a){return c.distance(this._array,a._array)},div:function(a){return c.div(this._array,this._array,a._array),this._dirty=!0,this},divide:function(a){return c.divide(this._array,this._array,a._array),this._dirty=!0,this},dot:function(a){return c.dot(this._array,a._array)},len:function(){return c.len(this._array)},length:function(){return c.length(this._array)},lerp:function(a,b,d){return c.lerp(this._array,a._array,b._array,d),this._dirty=!0,this},min:function(a){return c.min(this._array,this._array,a._array),this._dirty=!0,this},max:function(a){return c.max(this._array,this._array,a._array),this._dirty=!0,this},mul:function(a){return c.mul(this._array,this._array,a._array),this._dirty=!0,this},multiply:function(a){return c.multiply(this._array,this._array,a._array),this._dirty=!0,this},negate:function(){return c.negate(this._array,this._array),this._dirty=!0,this},normalize:function(){return c.normalize(this._array,this._array),this._dirty=!0,this},random:function(a){return c.random(this._array,a),this._dirty=!0,this},scale:function(a){return c.scale(this._array,this._array,a),this._dirty=!0,this},scaleAndAdd:function(a,b){return c.scaleAndAdd(this._array,this._array,a._array,b),this._dirty=!0,this},sqrDist:function(a){return c.sqrDist(this._array,a._array)},squaredDistance:function(a){return c.squaredDistance(this._array,a._array)},sqrLen:function(){return c.sqrLen(this._array)},squaredLength:function(){return c.squaredLength(this._array)},sub:function(a){return c.sub(this._array,this._array,a._array),this._dirty=!0,this},subtract:function(a){return c.subtract(this._array,this._array,a._array),this._dirty=!0,this},transformMat2:function(a){return c.transformMat2(this._array,this._array,a._array),this._dirty=!0,this},transformMat2d:function(a){return c.transformMat2d(this._array,this._array,a._array),this._dirty=!0,this},transformMat3:function(a){return c.transformMat3(this._array,this._array,a._array),this._dirty=!0,this},transformMat4:function(a){return c.transformMat4(this._array,this._array,a._array),this._dirty=!0,this},toString:function(){return"["+Array.prototype.join.call(this._array,",")+"]"}},Object.defineProperty){var e=d.prototype;Object.defineProperty(e,"x",{get:function(){return this._array[0]},set:function(a){this._array[0]=a,this._dirty=!0}}),Object.defineProperty(e,"y",{get:function(){return this._array[1]},set:function(a){this._array[1]=a,this._dirty=!0}})}return d.add=function(a,b,d){return c.add(a._array,b._array,d._array),a._dirty=!0,a},d.set=function(a,b,d){return c.set(a._array,b,d),a._dirty=!0,a},d.copy=function(a,b){return c.copy(a._array,b._array),a._dirty=!0,a},d.cross=function(a,b,d){return c.cross(a._array,b._array,d._array),a._dirty=!0,a},d.dist=function(a,b){return c.distance(a._array,b._array)},d.distance=d.dist,d.div=function(a,b,d){return c.divide(a._array,b._array,d._array),a._dirty=!0,a},d.divide=d.div,d.dot=function(a,b){return c.dot(a._array,b._array)},d.len=function(a){return c.length(a._array)},d.lerp=function(a,b,d,e){return c.lerp(a._array,b._array,d._array,e),a._dirty=!0,a},d.min=function(a,b,d){return c.min(a._array,b._array,d._array),a._dirty=!0,a},d.max=function(a,b,d){return c.max(a._array,b._array,d._array),a._dirty=!0,a},d.mul=function(a,b,d){return c.multiply(a._array,b._array,d._array),a._dirty=!0,a},d.multiply=d.mul,d.negate=function(a,b){return c.negate(a._array,b._array),a._dirty=!0,a},d.normalize=function(a,b){return c.normalize(a._array,b._array),a._dirty=!0,a},d.random=function(a,b){return c.random(a._array,b),a._dirty=!0,a},d.scale=function(a,b,d){return c.scale(a._array,b._array,d),a._dirty=!0,a},d.scaleAndAdd=function(a,b,d,e){return c.scaleAndAdd(a._array,b._array,d._array,e),a._dirty=!0,a},d.sqrDist=function(a,b){return c.sqrDist(a._array,b._array)},d.squaredDistance=d.sqrDist,d.sqrLen=function(a){return c.sqrLen(a._array)},d.squaredLength=d.sqrLen,d.sub=function(a,b,d){return c.subtract(a._array,b._array,d._array),a._dirty=!0,a},d.subtract=d.sub,d.transformMat2=function(a,b,d){return c.transformMat2(a._array,b._array,d._array),a._dirty=!0,a},d.transformMat2d=function(a,b,d){return c.transformMat2d(a._array,b._array,d._array),a._dirty=!0,a},d.transformMat3=function(a,b,d){return c.transformMat3(a._array,b._array,d._array),a._dirty=!0,a},d.transformMat4=function(a,b,d){return c.transformMat4(a._array,b._array,d._array),a._dirty=!0,a},d}),d("qtek/shader/source/header/light",[],function(){var a="uniform vec3 ",b="uniform float ",c="@export buildin.header.",d="@end",e=":unconfigurable;";return[c+"directional_light",a+"directionalLightDirection[DIRECTIONAL_LIGHT_NUMBER]"+e,a+"directionalLightColor[DIRECTIONAL_LIGHT_NUMBER]"+e,d,c+"ambient_light",a+"ambientLightColor[AMBIENT_LIGHT_NUMBER]"+e,d,c+"point_light",a+"pointLightPosition[POINT_LIGHT_NUMBER]"+e,b+"pointLightRange[POINT_LIGHT_NUMBER]"+e,a+"pointLightColor[POINT_LIGHT_NUMBER]"+e,d,c+"spot_light",a+"spotLightPosition[SPOT_LIGHT_NUMBER]"+e,a+"spotLightDirection[SPOT_LIGHT_NUMBER]"+e,b+"spotLightRange[SPOT_LIGHT_NUMBER]"+e,b+"spotLightUmbraAngleCosine[SPOT_LIGHT_NUMBER]"+e,b+"spotLightPenumbraAngleCosine[SPOT_LIGHT_NUMBER]"+e,b+"spotLightFalloffFactor[SPOT_LIGHT_NUMBER]"+e,a+"spotLightColor[SPOT_LIGHT_NUMBER]"+e,d].join("\n")}),d("qtek/Renderer",["require","./core/Base","./Texture","./core/glinfo","./core/glenum","./math/BoundingBox","./math/Matrix4","./shader/library","./Material","./math/Vector2","./Shader","./shader/source/header/light","./dep/glmatrix"],function(a){var b=a("./core/Base");a("./Texture");var c=a("./core/glinfo"),d=a("./core/glenum"),e=a("./math/BoundingBox"),f=a("./math/Matrix4"),g=a("./shader/library"),h=a("./Material"),i=a("./math/Vector2"),j=a("./Shader");j["import"](a("./shader/source/header/light"));var k=a("./dep/glmatrix"),l=k.mat4,m=k.vec3,n=l.create,o=0,p={},q=b.derive(function(){return{canvas:null,_width:100,_height:100,devicePixelRatio:window.devicePixelRatio||1,color:[0,0,0,0],clear:17664,alhpa:!0,depth:!0,stencil:!1,antialias:!0,premultipliedAlpha:!0,preserveDrawingBuffer:!1,throwError:!0,gl:null,viewport:{},_viewportSettings:[],_clearSettings:[],_sceneRendering:null}},function(){this.canvas||(this.canvas=document.createElement("canvas"));var a=this.canvas;try{var b={alhpa:this.alhpa,depth:this.depth,stencil:this.stencil,antialias:this.antialias,premultipliedAlpha:this.premultipliedAlpha,preserveDrawingBuffer:this.preserveDrawingBuffer};if(this.gl=a.getContext("webgl",b)||a.getContext("experimental-webgl",b),!this.gl)throw new Error;null==this.gl.__GLID__&&(this.gl.__GLID__=o++,c.initialize(this.gl)),this.resize()}catch(d){throw"Error creating WebGL Context "+d}},{resize:function(a,b){var c=this.canvas,d=this.devicePixelRatio;"undefined"!=typeof a?(c.style.width=a+"px",c.style.height=b+"px",c.width=a*d,c.height=b*d,this._width=a,this._height=b):(this._width=c.width/d,this._height=c.height/d),this.setViewport(0,0,this._width,this._height)},getWidth:function(){return this._width},getHeight:function(){return this._height},getViewportAspect:function(){var a=this.viewport;return a.width/a.height},setDevicePixelRatio:function(a){this.devicePixelRatio=a,this.resize(this._width,this._height)},getDevicePixelRatio:function(){return this.devicePixelRatio},getExtension:function(a){return c.getExtension(this.gl,a)},setViewport:function(a,b,c,d,e){if("object"==typeof a){var f=a;a=f.x,b=f.y,c=f.width,d=f.height}e=e||this.devicePixelRatio,this.gl.viewport(a*e,b*e,c*e,d*e),this.viewport={x:a,y:b,width:c,height:d}},saveViewport:function(){this._viewportSettings.push(this.viewport)},restoreViewport:function(){this._viewportSettings.length>0&&this.setViewport(this._viewportSettings.pop())},saveClear:function(){this._clearSettings.push(this.clear)},restoreClear:function(){this._clearSettings.length>0&&(this.clear=this._clearSettings.pop())},render:function(a,b,c,d){var e=this.gl;this._sceneRendering=a;var f=this.color;this.clear&&(e.colorMask(!0,!0,!0,!0),e.depthMask(!0),e.clearColor(f[0],f[1],f[2],f[3]),e.clear(this.clear)),c||a.update(!1),b.getScene()||b.update(!0);var g=a.opaqueQueue,h=a.transparentQueue,i=a.material;if(a.trigger("beforerender",this,a,b),h.length>0)for(var j=n(),k=m.create(),o=0;o<h.length;o++){var p=h[o];l.multiply(j,b.viewMatrix._array,p.worldTransform._array),m.transformMat4(k,p.position._array,j),p.__depth=k[2]}g.sort(q.opaqueSortFunc),h.sort(q.transparentSortFunc),a.trigger("beforerender:opaque",this,g),b.sceneBoundingBoxLastFrame.min.set(1/0,1/0,1/0),b.sceneBoundingBoxLastFrame.max.set(-1/0,-1/0,-1/0),e.disable(e.BLEND),e.enable(e.DEPTH_TEST);var r=this.renderQueue(g,b,i,d);a.trigger("afterrender:opaque",this,g,r),a.trigger("beforerender:transparent",this,h),e.enable(e.BLEND);var s=this.renderQueue(h,b,i);a.trigger("afterrender:transparent",this,h,s);var t={};for(var u in r)t[u]=r[u]+s[u];return a.trigger("afterrender",this,a,b,t),this._sceneRendering=null,t},renderQueue:function(a,b,c,d){var e={faceNumber:0,vertexNumber:0,drawCallNumber:0,meshNumber:a.length,renderedMeshNumber:0};l.copy(r.VIEW,b.viewMatrix._array),l.copy(r.PROJECTION,b.projectionMatrix._array),l.multiply(r.VIEWPROJECTION,b.projectionMatrix._array,r.VIEW),l.copy(r.VIEWINVERSE,b.worldTransform._array),l.invert(r.PROJECTIONINVERSE,r.PROJECTION),l.invert(r.VIEWPROJECTIONINVERSE,r.VIEWPROJECTION);var f,i,j,k,m,n,o,q,s=this.gl,t=this._sceneRendering;if(d){var u=new h({shader:g.get("buildin.prez")}),v=u.shader;q=[],v.bind(s),s.colorMask(!1,!1,!1,!1),s.depthMask(!0),s.enable(s.DEPTH_TEST);for(var w=0;w<a.length;w++){var x=a[w],y=x.worldTransform._array,z=x.geometry;if(l.multiply(r.WORLDVIEW,r.VIEW,y),l.multiply(r.WORLDVIEWPROJECTION,r.VIEWPROJECTION,y),!(z.boundingBox&&this.isFrustumCulled(x,b,r.WORLDVIEW,r.PROJECTION)||x.skeleton)){x.cullFace!==n&&(n=x.cullFace,s.cullFace(n)),x.frontFace!==o&&(o=x.frontFace,s.frontFace(o)),x.culling!==m&&(m=x.culling,m?s.enable(s.CULL_FACE):s.disable(s.CULL_FACE));var A=v.matrixSemantics.WORLDVIEWPROJECTION;v.setUniform(s,A.type,A.symbol,r.WORLDVIEWPROJECTION),x.render(s,u),q.push(x)}}s.depthFunc(s.LEQUAL),s.colorMask(!0,!0,!0,!0),s.depthMask(!1)}else q=a;m=null,n=null,o=null;for(var w=0;w<q.length;w++){var x=q[w],B=c||x.material,C=B.shader,z=x.geometry,y=x.worldTransform._array;if(l.copy(r.WORLD,y),l.multiply(r.WORLDVIEW,r.VIEW,y),l.multiply(r.WORLDVIEWPROJECTION,r.VIEWPROJECTION,y),(C.matrixSemantics.WORLDINVERSE||C.matrixSemantics.WORLDINVERSETRANSPOSE)&&l.invert(r.WORLDINVERSE,y),(C.matrixSemantics.WORLDVIEWINVERSE||C.matrixSemantics.WORLDVIEWINVERSETRANSPOSE)&&l.invert(r.WORLDVIEWINVERSE,r.WORLDVIEW),(C.matrixSemantics.WORLDVIEWPROJECTIONINVERSE||C.matrixSemantics.WORLDVIEWPROJECTIONINVERSETRANSPOSE)&&l.invert(r.WORLDVIEWPROJECTIONINVERSE,r.WORLDVIEWPROJECTION),!z.boundingBox||d||!this.isFrustumCulled(x,b,r.WORLDVIEW,r.PROJECTION)){if(i!==C){t&&t.isShaderLightNumberChanged(C)&&t.setShaderLightNumber(C);var D=C.bind(s);if(D){if(p[C.__GUID__])continue;if(p[C.__GUID__]=!0,this.throwError)throw new Error(D);this.trigger("error",D)}t&&t.setLightUniforms(C,s),i=C}f!==B&&(d||(B.depthTest!==j&&(B.depthTest?s.enable(s.DEPTH_TEST):s.disable(s.DEPTH_TEST),j=B.depthTest),B.depthMask!==k&&(s.depthMask(B.depthMask),k=B.depthMask)),B.bind(s,f),f=B,B.transparent&&(B.blend?B.blend(s):(s.blendEquationSeparate(s.FUNC_ADD,s.FUNC_ADD),s.blendFuncSeparate(s.SRC_ALPHA,s.ONE_MINUS_SRC_ALPHA,s.ONE,s.ONE_MINUS_SRC_ALPHA))));for(var E=C.matrixSemanticKeys,F=0;F<E.length;F++){var G=E[F],A=C.matrixSemantics[G],H=r[G];if(A.isTranspose){var I=r[A.semanticNoTranspose];l.transpose(H,I)}C.setUniform(s,A.type,A.symbol,H)}x.cullFace!==n&&(n=x.cullFace,s.cullFace(n)),x.frontFace!==o&&(o=x.frontFace,s.frontFace(o)),x.culling!==m&&(m=x.culling,m?s.enable(s.CULL_FACE):s.disable(s.CULL_FACE));var J=x.render(s,c);J&&(e.faceNumber+=J.faceNumber,e.vertexNumber+=J.vertexNumber,e.drawCallNumber+=J.drawCallNumber,e.renderedMeshNumber++)}}return d&&s.depthFunc(s.LESS),e},isFrustumCulled:function(){var a=new e,b=new f;return function(c,d,e,f){var g=c.boundingBox||c.geometry.boundingBox;if(b._array=e,a.copy(g),a.applyTransform(b),c.isRenderable()&&c.castShadow&&d.sceneBoundingBoxLastFrame.union(a),c.frustumCulling){if(!a.intersectBoundingBox(d.frustum.boundingBox))return!0;
b._array=f,a.max._array[2]>0&&a.min._array[2]<0&&(a.max._array[2]=-1e-20),a.applyProjection(b);var h=a.min._array,i=a.max._array;if(i[0]<-1||h[0]>1||i[1]<-1||h[1]>1||i[2]<-1||h[2]>1)return!0}return!1}}(),disposeScene:function(a){this.disposeNode(a,!0,!0),a.dispose()},disposeNode:function(a,b,c){var d={},e=this.gl;a.getParent()&&a.getParent().remove(a),a.traverse(function(a){a.geometry&&b&&a.geometry.dispose(e),a.material&&(d[a.material.__GUID__]=a.material),a.dispose&&a.dispose(e)});for(var f in d){var g=d[f];g.dispose(e,c)}},disposeShader:function(a){a.dispose(this.gl)},disposeGeometry:function(a){a.dispose(this.gl)},disposeTexture:function(a){a.dispose(this.gl)},disposeFrameBuffer:function(a){a.dispose(this.gl)},dispose:function(){c.dispose(this.gl)},screenToNdc:function(a,b,c){c||(c=new i),b=this._height-b;var d=this.viewport,e=c._array;return e[0]=(a-d.x)/d.width,e[0]=2*e[0]-1,e[1]=(b-d.y)/d.height,e[1]=2*e[1]-1,c}});q.opaqueSortFunc=function(a,b){return a.material.shader===b.material.shader?a.material===b.material?a.geometry.__GUID__-b.geometry.__GUID__:a.material.__GUID__-b.material.__GUID__:a.material.shader.__GUID__-b.material.shader.__GUID__},q.transparentSortFunc=function(a,b){return a.__depth===b.__depth?a.material.shader===b.material.shader?a.material===b.material?a.geometry.__GUID__-b.geometry.__GUID__:a.material.__GUID__-b.material.__GUID__:a.material.shader.__GUID__-b.material.shader.__GUID__:a.__depth-b.__depth};var r={WORLD:n(),VIEW:n(),PROJECTION:n(),WORLDVIEW:n(),VIEWPROJECTION:n(),WORLDVIEWPROJECTION:n(),WORLDINVERSE:n(),VIEWINVERSE:n(),PROJECTIONINVERSE:n(),WORLDVIEWINVERSE:n(),VIEWPROJECTIONINVERSE:n(),WORLDVIEWPROJECTIONINVERSE:n(),WORLDTRANSPOSE:n(),VIEWTRANSPOSE:n(),PROJECTIONTRANSPOSE:n(),WORLDVIEWTRANSPOSE:n(),VIEWPROJECTIONTRANSPOSE:n(),WORLDVIEWPROJECTIONTRANSPOSE:n(),WORLDINVERSETRANSPOSE:n(),VIEWINVERSETRANSPOSE:n(),PROJECTIONINVERSETRANSPOSE:n(),WORLDVIEWINVERSETRANSPOSE:n(),VIEWPROJECTIONINVERSETRANSPOSE:n(),WORLDVIEWPROJECTIONINVERSETRANSPOSE:n()};return q.COLOR_BUFFER_BIT=d.COLOR_BUFFER_BIT,q.DEPTH_BUFFER_BIT=d.DEPTH_BUFFER_BIT,q.STENCIL_BUFFER_BIT=d.STENCIL_BUFFER_BIT,q}),d("qtek/Scene",["require","./Node","./Light"],function(a){function b(a,b){return b.castShadow&&!a.castShadow?!0:void 0}var c=a("./Node"),d=a("./Light"),e=c.derive(function(){return{material:null,autoUpdate:!0,opaqueQueue:[],transparentQueue:[],lights:[],_lightUniforms:{},_lightNumber:{POINT_LIGHT:0,DIRECTIONAL_LIGHT:0,SPOT_LIGHT:0,AMBIENT_LIGHT:0},_opaqueObjectCount:0,_transparentObjectCount:0,_nodeRepository:{}}},function(){this._scene=this},{addToScene:function(a){a.name&&(this._nodeRepository[a.name]=a)},removeFromScene:function(a){a.name&&delete this._nodeRepository[a.name]},getNode:function(a){return this._nodeRepository[a]},cloneNode:function(a){var b=a.clone(),c={},d=function(e,f){e.skeleton&&(f.skeleton=e.skeleton.clone(a,b),f.joints=e.joints.slice()),e.material&&(c[e.material.__GUID__]={oldMat:e.material});for(var g=0;g<e._children.length;g++)d(e._children[g],f._children[g])};d(a,b);for(var e in c)c[e].newMat=c[e].oldMat.clone();return b.traverse(function(a){a.material&&(a.material=c[a.material.__GUID__].newMat)}),b},update:function(a,b){if(this.autoUpdate||a){c.prototype.update.call(this,a);var d=this.lights,e=this.material&&this.material.transparent;if(this._opaqueObjectCount=0,this._transparentObjectCount=0,d.length=0,this._updateRenderQueue(this,e),this.opaqueQueue.length=this._opaqueObjectCount,this.transparentQueue.length=this._transparentObjectCount,!b){for(var f in this._lightNumber)this._lightNumber[f]=0;for(var g=0;g<d.length;g++){var h=d[g];this._lightNumber[h.type]++}this._updateLightUniforms()}}},_updateRenderQueue:function(a,b){if(a.visible)for(var c=0;c<a._children.length;c++){var e=a._children[c];e instanceof d&&this.lights.push(e),e.isRenderable()&&(e.material.transparent||b?this.transparentQueue[this._transparentObjectCount++]=e:this.opaqueQueue[this._opaqueObjectCount++]=e),e._children.length>0&&this._updateRenderQueue(e)}},_updateLightUniforms:function(){var a=this.lights;a.sort(b);var c=this._lightUniforms;for(var d in c)c[d].value.length=0;for(var e=0;e<a.length;e++){var f=a[e];for(d in f.uniformTemplates){var g=f.uniformTemplates[d];c[d]||(c[d]={type:"",value:[]});var h=g.value(f),i=c[d];switch(i.type=g.type+"v",g.type){case"1i":case"1f":i.value.push(h);break;case"2f":case"3f":case"4f":for(var j=0;j<h.length;j++)i.value.push(h[j]);break;default:console.error("Unkown light uniform type "+g.type)}}}},isShaderLightNumberChanged:function(a){return a.lightNumber.POINT_LIGHT!==this._lightNumber.POINT_LIGHT||a.lightNumber.DIRECTIONAL_LIGHT!==this._lightNumber.DIRECTIONAL_LIGHT||a.lightNumber.SPOT_LIGHT!==this._lightNumber.SPOT_LIGHT||a.lightNumber.AMBIENT_LIGHT!==this._lightNumber.AMBIENT_LIGHT},setShaderLightNumber:function(a){for(var b in this._lightNumber)a.lightNumber[b]=this._lightNumber[b];a.dirty()},setLightUniforms:function(a,b){for(var c in this._lightUniforms){var d=this._lightUniforms[c];a.setUniform(b,d.type,c,d.value)}},dispose:function(){this.material=null,this.opaqueQueue=[],this.transparentQueue=[],this.lights=[],this._lightUniforms={},this._lightNumber={},this._nodeRepository={}}});return e}),d("qtek/Skeleton",["require","./core/Base","./Joint","./dep/glmatrix"],function(a){var b=a("./core/Base"),c=a("./Joint"),d=a("./dep/glmatrix"),e=d.quat,f=d.vec3,g=d.mat4,h=b.derive(function(){return{name:"",roots:[],joints:[],_clips:[],_invBindPoseMatricesArray:null,_jointMatricesSubArrays:[],_skinMatricesArray:null,_skinMatricesSubArrays:[],_subSkinMatricesArray:{}}},{updateHierarchy:function(){this.roots=[];for(var a=this.joints,b=0;b<a.length;b++){var c=a[b];if(c.parentIndex>=0){var d=a[c.parentIndex].node;d.add(c.node)}else this.roots.push(c)}},addClip:function(a,b){for(var c=0;c<this._clips.length;c++)if(this._clips[c].clip===a)return;for(var d=[],c=0;c<this.joints.length;c++)d[c]=-1;for(var c=0;c<a.jointClips.length;c++)for(var e=0;e<this.joints.length;e++){var f=this.joints[e],g=a.jointClips[c],h=f.name;if(b&&(h=b[h]),g.name===h){d[e]=c;break}}return this._clips.push({maps:d,clip:a}),this._clips.length-1},removeClip:function(a){for(var b=-1,c=0;c<this._clips.length;c++)if(this._clips[c].clip===a){b=c;break}b>0&&this._clips.splice(b,1)},removeClipsAll:function(){this._clips=[]},getClip:function(a){return this._clips[a]?this._clips[a].clip:void 0},getClipNumber:function(){return this._clips.length},updateJointMatrices:function(){var a=g.create();return function(){for(var b=0;b<this.roots.length;b++)this.roots[b].node.update(!0);this._invBindPoseMatricesArray=new Float32Array(16*this.joints.length),this._skinMatricesArray=new Float32Array(16*this.joints.length);for(var b=0;b<this.joints.length;b++){var c=this.joints[b];c.rootNode&&c.rootNode.getParent()?(g.invert(a,c.rootNode.getParent().worldTransform._array),g.multiply(a,a,c.node.worldTransform._array),g.invert(a,a)):(g.copy(a,c.node.worldTransform._array),g.invert(a,a));for(var d=16*b,e=0;16>e;e++)this._invBindPoseMatricesArray[d+e]=a[e]}this.updateMatricesSubArrays()}}(),updateMatricesSubArrays:function(){for(var a=0;a<this.joints.length;a++)this._jointMatricesSubArrays[a]=this._invBindPoseMatricesArray.subarray(16*a,16*(a+1)),this._skinMatricesSubArrays[a]=this._skinMatricesArray.subarray(16*a,16*(a+1))},update:function(){var a=g.create();return function(){for(var b=0;b<this.roots.length;b++)this.roots[b].node.update(!0);for(var b=0;b<this.joints.length;b++){var c=this.joints[b];g.multiply(this._skinMatricesSubArrays[b],c.node.worldTransform._array,this._jointMatricesSubArrays[b]),c.rootNode&&c.rootNode.getParent()&&(g.invert(a,c.rootNode.getParent().worldTransform._array),g.multiply(this._skinMatricesSubArrays[b],a,this._skinMatricesSubArrays[b]))}}}(),getSubSkinMatrices:function(a,b){var c=this._subSkinMatricesArray[a];c||(c=this._subSkinMatricesArray[a]=new Float32Array(16*b.length));for(var d=0,e=0;e<b.length;e++)for(var f=b[e],g=0;16>g;g++)c[d++]=this._skinMatricesArray[16*f+g];return c},setPose:function(a){if(this._clips[a]){for(var b=this._clips[a].clip,c=this._clips[a].maps,d=0;d<this.joints.length;d++){var g=this.joints[d];if(-1!==c[d]){var h=b.jointClips[c[d]];f.copy(g.node.position._array,h.position),e.copy(g.node.rotation._array,h.rotation),f.copy(g.node.scale._array,h.scale),g.node.position._dirty=!0,g.node.rotation._dirty=!0,g.node.scale._dirty=!0}}this.update()}},clone:function(a,b){var d=new h;d.name=this.name;for(var e=0;e<this.joints.length;e++){var f=new c;f.name=this.joints[e].name,f.index=this.joints[e].index,f.parentIndex=this.joints[e].parentIndex;var g=this.joints[e].node.getPath(a),i=this.joints[e].rootNode.getPath(a);null!=g&&null!=i?(f.node=b.queryNode(g),f.rootNode=b.queryNode(i)):console.warn("Something wrong in clone, may be the skeleton root nodes is not mounted on the cloned root node."),d.joints.push(f)}for(var e=0;e<this.roots.length;e++)d.roots.push(d.joints[this.roots[e].index]);if(this._invBindPoseMatricesArray){var j=this._invBindPoseMatricesArray.length;d._invBindPoseMatricesArray=new Float32Array(j);for(var e=0;j>e;e++)d._invBindPoseMatricesArray[e]=this._invBindPoseMatricesArray[e];d._skinMatricesArray=new Float32Array(j),d.updateMatricesSubArrays()}return d.update(),d}});return h}),d("qtek/StaticGeometry",["require","./Geometry","./math/BoundingBox","./dep/glmatrix","./core/vendor","./core/glenum"],function(a){var b=a("./Geometry"),c=a("./math/BoundingBox"),d=a("./dep/glmatrix"),e=a("./core/vendor"),f=a("./core/glenum"),g=d.mat4,h=d.vec3,i=b.Attribute,j=h.create,k=h.add,l=h.set,m=b.derive(function(){return{attributes:{position:new i("position","float",3,"POSITION",!1),texcoord0:new i("texcoord0","float",2,"TEXCOORD_0",!1),texcoord1:new i("texcoord1","float",2,"TEXCOORD_1",!1),normal:new i("normal","float",3,"NORMAL",!1),tangent:new i("tangent","float",4,"TANGENT",!1),color:new i("color","float",4,"COLOR",!1),weight:new i("weight","float",3,"WEIGHT",!1),joint:new i("joint","float",4,"JOINT",!1),barycentric:new i("barycentric","float",3,null,!1)},hint:f.STATIC_DRAW,faces:null,_normalType:"vertex",_enabledAttributes:null}},{dirty:function(){this._cache.dirtyAll(),this._enabledAttributes=null},getVertexNumber:function(){var a=this.attributes[this.mainAttribute];return a&&a.value?a.value.length/a.size:0},getFaceNumber:function(){var a=this.faces;return a?a.length/3:0},getFace:function(a,b){if(a<this.getFaceNumber()&&a>=0){b||(b=j());var c=this.faces;return b[0]=c[3*a],b[1]=c[3*a+1],b[2]=c[3*a+2],b}},isUseFace:function(){return this.useFace&&null!=this.faces},createAttribute:function(a,b,c,d){var e=new i(a,b,c,d,!1);return this.attributes[a]=e,this._attributeList.push(a),e},removeAttribute:function(a){var b=attributeList.indexOf(a);return b>=0?(attributeList.splice(b,1),delete this.attributes[a],!0):!1},getEnabledAttributes:function(){var a=this._enabledAttributes,b=this._attributeList;if(a)return a;for(var c=[],d=this.getVertexNumber(),e=0;e<b.length;e++){var f=b[e],g=this.attributes[f];g.value&&g.value.length===d*g.size&&c.push(f)}return this._enabledAttributes=c,c},getBufferChunks:function(a){var b=this._cache;return b.use(a.__GLID__),b.isDirty()&&(this._updateBuffer(a),b.fresh()),b.get("chunks")},_updateBuffer:function(a){var c=this._cache.get("chunks"),d=!1;c||(c=[],c[0]={attributeBuffers:[],indicesBuffer:null},this._cache.put("chunks",c),d=!0);for(var e=c[0],f=e.attributeBuffers,g=e.indicesBuffer,h=this.getEnabledAttributes(),i=0,j=0,k=0;k<h.length;k++){var l,m=h[k],n=this.attributes[m];if(!d){for(var o=i;o<f.length;o++)if(f[o].name===m){l=f[o],i=o+1;break}if(!l)for(var o=i-1;o>=0;o--)if(f[o].name===m){l=f[o],i=o;break}}var p;p=l?l.buffer:a.createBuffer(),a.bindBuffer(a.ARRAY_BUFFER,p),a.bufferData(a.ARRAY_BUFFER,n.value,this.hint),f[j++]=new b.AttributeBuffer(m,n.type,p,n.size,n.semantic)}f.length=j,this.isUseFace()&&(g||(g=new b.IndicesBuffer(a.createBuffer()),e.indicesBuffer=g),g.count=this.faces.length,a.bindBuffer(a.ELEMENT_ARRAY_BUFFER,g.buffer),a.bufferData(a.ELEMENT_ARRAY_BUFFER,this.faces,this.hint))},generateVertexNormals:function(){var a=this.faces,b=this.attributes,c=b.position.value,d=b.normal.value;if(d&&d.length===c.length)for(var f=0;f<d.length;f++)d[f]=0;else d=b.normal.value=new e.Float32Array(c.length);for(var g=j(),i=j(),k=j(),m=j(),n=j(),o=j(),p=0;p<a.length;){var q=a[p++],r=a[p++],s=a[p++];l(g,c[3*q],c[3*q+1],c[3*q+2]),l(i,c[3*r],c[3*r+1],c[3*r+2]),l(k,c[3*s],c[3*s+1],c[3*s+2]),h.sub(m,g,i),h.sub(n,i,k),h.cross(o,m,n);for(var f=0;3>f;f++)d[3*q+f]=d[3*q+f]+o[f],d[3*r+f]=d[3*r+f]+o[f],d[3*s+f]=d[3*s+f]+o[f]}for(var f=0;f<d.length;)l(o,d[f],d[f+1],d[f+2]),h.normalize(o,o),d[f++]=o[0],d[f++]=o[1],d[f++]=o[2]},generateFaceNormals:function(){this.isUniqueVertex()||this.generateUniqueVertex();var a=this.faces,b=this.attributes,c=b.position.value,d=b.normal.value,e=j(),f=j(),g=j(),i=j(),k=j(),m=j();d||(d=b.position.value=new Float32Array(c.length));for(var n=0;n<a.length;){var o=a[n++],p=a[n++],q=a[n++];l(e,c[3*o],c[3*o+1],c[3*o+2]),l(f,c[3*p],c[3*p+1],c[3*p+2]),l(g,c[3*q],c[3*q+1],c[3*q+2]),h.sub(i,e,f),h.sub(k,f,g),h.cross(m,i,k),h.normalize(m,m);for(var r=0;3>r;r++)d[3*o+r]=m[r],d[3*p+r]=m[r],d[3*q+r]=m[r]}},generateTangents:function(){var a=this.getVertexNumber(),b=this.attributes;b.tangent.value||(b.tangent.value=new Float32Array(4*a));for(var c=b.texcoord0.value,d=b.position.value,e=b.tangent.value,f=b.normal.value,g=[],i=[],l=0;a>l;l++)g[l]=[0,0,0],i[l]=[0,0,0];for(var m=[0,0,0],n=[0,0,0],o=this.faces,l=0;l<o.length;){var p=o[l++],q=o[l++],r=o[l++],s=c[2*p],t=c[2*q],u=c[2*r],v=c[2*p+1],w=c[2*q+1],x=c[2*r+1],y=d[3*p],z=d[3*q],A=d[3*r],B=d[3*p+1],C=d[3*q+1],D=d[3*r+1],E=d[3*p+2],F=d[3*q+2],G=d[3*r+2],H=z-y,I=A-y,J=C-B,K=D-B,L=F-E,M=G-E,N=t-s,O=u-s,P=w-v,Q=x-v,R=1/(N*Q-P*O);m[0]=(Q*H-P*I)*R,m[1]=(Q*J-P*K)*R,m[2]=(Q*L-P*M)*R,n[0]=(N*I-O*H)*R,n[1]=(N*K-O*J)*R,n[2]=(N*M-O*L)*R,k(g[p],g[p],m),k(g[q],g[q],m),k(g[r],g[r],m),k(i[p],i[p],n),k(i[q],i[q],n),k(i[r],i[r],n)}for(var S=j(),T=j(),U=j(),l=0;a>l;l++){U[0]=f[3*l],U[1]=f[3*l+1],U[2]=f[3*l+2];var V=g[l];h.scale(S,U,h.dot(U,V)),h.sub(S,V,S),h.normalize(S,S),h.cross(T,U,V),e[4*l]=S[0],e[4*l+1]=S[1],e[4*l+2]=S[2],e[4*l+3]=h.dot(T,i[l])<0?-1:1}},isUniqueVertex:function(){return this.isUseFace()?this.getVertexNumber()===this.faces.length:!0},generateUniqueVertex:function(){for(var a=[],b=0,c=this.getVertexNumber();c>b;b++)a[b]=0;for(var d=this.getVertexNumber(),e=this.attributes,f=this.faces,g=this.getEnabledAttributes(),h=0;h<g.length;h++){for(var i=g[h],j=new Float32Array(this.faces.length*e[i].size),k=e[i].value,c=k.length,b=0;c>b;b++)j[b]=k[b];e[i].value=j}for(var b=0;b<f.length;b++){var l=f[b];if(a[l]>0){for(var h=0;h<g.length;h++)for(var i=g[h],m=e[i].value,n=e[i].size,o=0;n>o;o++)m[d*n+o]=m[l*n+o];f[b]=d,d++}a[l]++}},generateBarycentric:function(){this.isUniqueVertex()||this.generateUniqueVertex();var a=this.attributes,b=a.barycentric.value,c=this.faces;if(!b||b.length!==3*c.length){b=a.barycentric.value=new Float32Array(3*c.length);for(var d=0;d<c.length;)for(var e=0;3>e;e++){var f=c[d++];b[f+e]=1}}},convertToDynamic:function(a){for(var b=0;b<this.faces.length;b+=3)a.faces.push(this.face.subarray(b,b+3));var d=this.getEnabledAttributes();for(var e in d){var f=d[e],g=a.attributes[e];g||(g=a.attributes[e]={type:f.type,size:f.size,value:[]},f.semantic&&(g.semantic=f.semantic));for(var b=0;b<f.value.length;b+=f.size)1===f.size?g.value.push(f.array[b]):g.value.push(f.subarray(b,b+f.size))}return this.boundingBox&&(a.boundingBox=new c,a.boundingBox.min.copy(this.boundingBox.min),a.boundingBox.max.copy(this.boundingBox.max)),a},applyTransform:function(a){var b=this.attributes,c=b.position.value,d=b.normal.value,e=b.tangent.value;a=a._array;var f=g.create();g.invert(f,a),g.transpose(f,f);var i=h.transformMat4,j=h.forEach;j(c,3,0,null,i,a),d&&j(d,3,0,null,i,f),e&&j(e,4,0,null,i,f),this.boundingBox&&this.updateBoundingBox()},dispose:function(a){var b=this._cache;b.use(a.__GLID__);var c=b.get("chunks");if(c)for(var d=0;d<c.length;d++)for(var e=c[d],f=0;f<e.attributeBuffers.length;f++){var g=e.attributeBuffers[f];a.deleteBuffer(g.buffer)}b.deleteContext(a.__GLID__)}});return m}),d("qtek/Texture2D",["require","./Texture","./core/glinfo","./core/glenum"],function(a){var b=a("./Texture"),c=a("./core/glinfo"),d=a("./core/glenum"),e=b.derive(function(){return{image:null,pixels:null,mipmaps:[]}},{update:function(a){a.bindTexture(a.TEXTURE_2D,this._cache.get("webgl_texture")),this.beforeUpdate(a);var b=this.format,e=this.type;a.texParameteri(a.TEXTURE_2D,a.TEXTURE_WRAP_S,this.wrapS),a.texParameteri(a.TEXTURE_2D,a.TEXTURE_WRAP_T,this.wrapT),a.texParameteri(a.TEXTURE_2D,a.TEXTURE_MAG_FILTER,this.magFilter),a.texParameteri(a.TEXTURE_2D,a.TEXTURE_MIN_FILTER,this.minFilter);var f=c.getExtension(a,"EXT_texture_filter_anisotropic");if(f&&this.anisotropic>1&&a.texParameterf(a.TEXTURE_2D,f.TEXTURE_MAX_ANISOTROPY_EXT,this.anisotropic),36193===e){var g=c.getExtension(a,"OES_texture_half_float");g||(e=d.FLOAT)}if(this.mipmaps.length)for(var h=this.width,i=this.height,j=0;j<this.mipmaps.length;j++){var k=this.mipmaps[j];this._updateTextureData(a,k,j,h,i,b,e),h/=2,i/=2}else this._updateTextureData(a,this,0,this.width,this.height,b,e),this.useMipmap&&!this.NPOT&&a.generateMipmap(a.TEXTURE_2D);a.bindTexture(a.TEXTURE_2D,null)},_updateTextureData:function(a,c,d,e,f,g,h){c.image?a.texImage2D(a.TEXTURE_2D,d,g,g,h,c.image):g<=b.COMPRESSED_RGBA_S3TC_DXT5_EXT&&g>=b.COMPRESSED_RGB_S3TC_DXT1_EXT?a.compressedTexImage2D(a.TEXTURE_2D,d,g,e,f,0,c.pixels):a.texImage2D(a.TEXTURE_2D,d,g,e,f,0,g,h,c.pixels)},generateMipmap:function(a){this.useMipmap&&!this.NPOT&&(a.bindTexture(a.TEXTURE_2D,this._cache.get("webgl_texture")),a.generateMipmap(a.TEXTURE_2D))},isPowerOfTwo:function(){var a,b;return this.image?(a=this.image.width,b=this.image.height):(a=this.width,b=this.height),0===(a&a-1)&&0===(b&b-1)},isRenderable:function(){return this.image?"CANVAS"===this.image.nodeName||"VIDEO"===this.image.nodeName||this.image.complete:this.width&&this.height},bind:function(a){a.bindTexture(a.TEXTURE_2D,this.getWebGLTexture(a))},unbind:function(a){a.bindTexture(a.TEXTURE_2D,null)},load:function(a){var b=new Image,c=this;return b.onload=function(){c.dirty(),c.trigger("success",c),b.onload=null},b.onerror=function(){c.trigger("error",c),b.onerror=null},b.src=a,this.image=b,this}});return e}),d("qtek/animation/easing",[],function(){var a={Linear:function(a){return a},QuadraticIn:function(a){return a*a},QuadraticOut:function(a){return a*(2-a)},QuadraticInOut:function(a){return(a*=2)<1?.5*a*a:-.5*(--a*(a-2)-1)},CubicIn:function(a){return a*a*a},CubicOut:function(a){return--a*a*a+1},CubicInOut:function(a){return(a*=2)<1?.5*a*a*a:.5*((a-=2)*a*a+2)},QuarticIn:function(a){return a*a*a*a},QuarticOut:function(a){return 1- --a*a*a*a},QuarticInOut:function(a){return(a*=2)<1?.5*a*a*a*a:-.5*((a-=2)*a*a*a-2)},QuinticIn:function(a){return a*a*a*a*a},QuinticOut:function(a){return--a*a*a*a*a+1},QuinticInOut:function(a){return(a*=2)<1?.5*a*a*a*a*a:.5*((a-=2)*a*a*a*a+2)},SinusoidalIn:function(a){return 1-Math.cos(a*Math.PI/2)},SinusoidalOut:function(a){return Math.sin(a*Math.PI/2)},SinusoidalInOut:function(a){return.5*(1-Math.cos(Math.PI*a))},ExponentialIn:function(a){return 0===a?0:Math.pow(1024,a-1)},ExponentialOut:function(a){return 1===a?1:1-Math.pow(2,-10*a)},ExponentialInOut:function(a){return 0===a?0:1===a?1:(a*=2)<1?.5*Math.pow(1024,a-1):.5*(-Math.pow(2,-10*(a-1))+2)},CircularIn:function(a){return 1-Math.sqrt(1-a*a)},CircularOut:function(a){return Math.sqrt(1- --a*a)},CircularInOut:function(a){return(a*=2)<1?-.5*(Math.sqrt(1-a*a)-1):.5*(Math.sqrt(1-(a-=2)*a)+1)},ElasticIn:function(a){var b,c=.1,d=.4;return 0===a?0:1===a?1:(!c||1>c?(c=1,b=d/4):b=d*Math.asin(1/c)/(2*Math.PI),-(c*Math.pow(2,10*(a-=1))*Math.sin((a-b)*2*Math.PI/d)))},ElasticOut:function(a){var b,c=.1,d=.4;return 0===a?0:1===a?1:(!c||1>c?(c=1,b=d/4):b=d*Math.asin(1/c)/(2*Math.PI),c*Math.pow(2,-10*a)*Math.sin((a-b)*2*Math.PI/d)+1)},ElasticInOut:function(a){var b,c=.1,d=.4;return 0===a?0:1===a?1:(!c||1>c?(c=1,b=d/4):b=d*Math.asin(1/c)/(2*Math.PI),(a*=2)<1?-.5*c*Math.pow(2,10*(a-=1))*Math.sin((a-b)*2*Math.PI/d):.5*c*Math.pow(2,-10*(a-=1))*Math.sin((a-b)*2*Math.PI/d)+1)},BackIn:function(a){var b=1.70158;return a*a*((b+1)*a-b)},BackOut:function(a){var b=1.70158;return--a*a*((b+1)*a+b)+1},BackInOut:function(a){var b=2.5949095;return(a*=2)<1?.5*a*a*((b+1)*a-b):.5*((a-=2)*a*((b+1)*a+b)+2)},BounceIn:function(b){return 1-a.BounceOut(1-b)},BounceOut:function(a){return 1/2.75>a?7.5625*a*a:2/2.75>a?7.5625*(a-=1.5/2.75)*a+.75:2.5/2.75>a?7.5625*(a-=2.25/2.75)*a+.9375:7.5625*(a-=2.625/2.75)*a+.984375},BounceInOut:function(b){return.5>b?.5*a.BounceIn(2*b):.5*a.BounceOut(2*b-1)+.5}};return a}),d("qtek/animation/Clip",["require","./easing"],function(a){var b=a("./easing"),c=function(a){a=a||{},this.name=a.name||"",this.target=a.target,"undefined"!=typeof a.life&&(this.life=a.life),"undefined"!=typeof a.delay&&(this.delay=a.delay),"undefined"!=typeof a.gap&&(this.gap=a.gap),this.playbackRate="undefined"!=typeof a.playbackRate?a.playbackRate:1,this._currentTime=(new Date).getTime(),this._startTime=this._currentTime+this.delay,this._elapsedTime=0,this._loop=void 0===a.loop?!1:a.loop,this.setLoop(this._loop),"undefined"!=typeof a.easing&&this.setEasing(a.easing),"undefined"!=typeof a.onframe&&(this.onframe=a.onframe),"undefined"!=typeof a.ondestroy&&(this.ondestroy=a.ondestroy),"undefined"!=typeof a.onrestart&&(this.onrestart=a.onrestart)};return c.prototype={gap:0,life:0,delay:0,setLoop:function(a){this._loop=a,a&&(this._loopRemained="number"==typeof a?a:1e8)},setEasing:function(a){"string"==typeof a&&(a=b[a]),this.easing=a},step:function(a){if(a<this._startTime)return this._currentTime=a,void 0;this._elapse(a);var b=this._elapsedTime/this.life;if(!(0>b)){b>1&&(b=1);var c;return c=this.easing?this.easing(b):b,this.fire("frame",c),1==b?this._loop&&this._loopRemained>0?(this._restartInLoop(),this._loopRemained--,"restart"):(this._needsRemove=!0,"destroy"):null}},setTime:function(a){return this.step(a+this._startTime)},restart:function(){var a=(new Date).getTime();this._elapse(a);var b=this._elapsedTime%this.life;this._startTime=a-b+this.delay,this._elapsedTime=0,this._currentTime=a-b,this._needsRemove=!1},_restartInLoop:function(){var a=(new Date).getTime();this._startTime=a+this.gap,this._currentTime=a,this._elapsedTime=0},_elapse:function(a){this._elapsedTime+=(a-this._currentTime)*this.playbackRate,this._currentTime=a},fire:function(a,b){var c="on"+a;this[c]&&this[c](this.target,b)},clone:function(){var a=new this.constructor;return a.name=this.name,a._loop=this._loop,a._loopRemained=this._loopRemained,a.life=this.life,a.gap=this.gap,a.delay=this.delay,a}},c.prototype.constructor=c,c}),d("qtek/animation/Animation",["require","./Clip","../core/Base"],function(a){function b(a,b){return a[b]}function c(a,b,c){a[b]=c}function d(a,b,c){return(b-a)*c+a}function e(a,b,c,e,f){var g=a.length;if(1==f)for(var h=0;g>h;h++)e[h]=d(a[h],b[h],c);else for(var i=a[0].length,h=0;g>h;h++)for(var j=0;i>j;j++)e[h][j]=d(a[h][j],b[h][j],c)}function f(a){return"undefined"==typeof a?!1:"string"==typeof a?!1:"number"==typeof a.length}function g(a){if(f(a)){var b=a.length;if(f(a[0])){for(var c=[],d=0;b>d;d++)c.push(n.call(a[d]));return c}return n.call(a)}return a}function h(a,b,c,d,e,f,g,h,j){var k=a.length;if(1==j)for(var l=0;k>l;l++)h[l]=i(a[l],b[l],c[l],d[l],e,f,g);else for(var m=a[0].length,l=0;k>l;l++)for(var n=0;m>n;n++)h[l][n]=i(a[l][n],b[l][n],c[l][n],d[l][n],e,f,g)}function i(a,b,c,d,e,f,g){var h=.5*(c-a),i=.5*(d-b);return(2*(b-c)+h+i)*g+(-3*(b-c)-2*h-i)*f+h*e+b}function j(a,d,e,f,g){this._tracks={},this._target=a,this._loop=d||!1,this._getter=e||b,this._setter=f||c,this._interpolater=g||null,this._clipCount=0,this._delay=0,this._doneList=[],this._onframeList=[],this._clipList=[]}var k=a("./Clip"),l=a("../core/Base"),m=window.requestAnimationFrame||window.msRequestAnimationFrame||window.mozRequestAnimationFrame||window.webkitRequestAnimationFrame||function(a){setTimeout(a,16)},n=Array.prototype.slice,o=l.derive(function(){return{stage:null,_clips:[],_running:!1,_time:0}},{addClip:function(a){this._clips.push(a)},removeClip:function(a){var b=this._clips.indexOf(a);this._clips.splice(b,1)},_update:function(){for(var a=(new Date).getTime(),b=a-this._time,c=this._clips,d=c.length,e=[],f=[],g=0;d>g;g++){var h=c[g],i=h.step(a);i&&(e.push(i),f.push(h))}for(var g=0;d>g;)c[g]._needsRemove?(c[g]=c[d-1],c.pop(),d--):g++;d=e.length;for(var g=0;d>g;g++)f[g].fire(e[g]);this._time=a,this.trigger("frame",b),this.stage&&this.stage.render&&this.stage.render()},start:function(){function a(){b._running&&(m(a),b._update())}var b=this;this._running=!0,this._time=(new Date).getTime(),m(a)},stop:function(){this._running=!1},removeClipsAll:function(){this._clips=[]},animate:function(a,b){b=b||{};var c=new j(a,b.loop,b.getter,b.setter,b.interpolater);return c.animation=this,c}});return j.prototype={constructor:j,when:function(a,b){for(var c in b)this._tracks[c]||(this._tracks[c]=[],0!==a&&this._tracks[c].push({time:0,value:g(this._getter(this._target,c))})),this._tracks[c].push({time:parseInt(a),value:b[c]});return this},during:function(a){return this._onframeList.push(a),this},start:function(a){var b=this,c=this._setter,g=this._getter,j=this._interpolater,l=b._onframeList.length,m="spline"===a,n=function(){if(b._clipCount--,0===b._clipCount){b._tracks={};for(var a=b._doneList.length,c=0;a>c;c++)b._doneList[c].call(b)}},o=function(o,p){var q=o.length;if(q){var r=o[0].value,s=f(r),t=s&&f(r[0])?2:1;o.sort(function(a,b){return a.time-b.time});for(var u=o[q-1].time,v=[],w=[],x=0;q>x;x++)v.push(o[x].time/u),w.push(o[x].value);var y,x,z,A,B,C,D,E=0,F=0,G=function(a,f){if(F>f){for(y=Math.min(E+1,q-1),x=y;x>=0&&!(v[x]<=f);x--);x=Math.min(x,q-2)}else{for(x=E;q>x&&!(v[x]>f);x++);x=Math.min(x-1,q-2)}E=x,F=f;var k=v[x+1]-v[x];if(0!==k)for(z=(f-v[x])/k,m?(B=w[x],A=w[0===x?x:x-1],C=w[x>q-2?q-1:x+1],D=w[x>q-3?q-1:x+2],j?c(a,p,j(g(a,p),A,B,C,D,z)):s?h(A,B,C,D,z,z*z,z*z*z,g(a,p),t):c(a,p,i(A,B,C,D,z,z*z,z*z*z))):j?c(a,p,j(g(a,p),w[x],w[x+1],z)):s?e(w[x],w[x+1],z,g(a,p),t):c(a,p,d(w[x],w[x+1],z)),x=0;l>x;x++)b._onframeList[x](a,f)},H=new k({target:b._target,life:u,loop:b._loop,delay:b._delay,onframe:G,ondestroy:n});a&&"spline"!==a&&H.setEasing(a),b._clipList.push(H),b._clipCount++,b.animation.addClip(H)}};for(var p in this._tracks)o(this._tracks[p],p);return this},stop:function(){for(var a=0;a<this._clipList.length;a++){var b=this._clipList[a];this.animation.removeClip(b)}this._clipList=[]},delay:function(a){return this._delay=a,this},done:function(a){return a&&this._doneList.push(a),this},getClips:function(){return this._clipList}},o._Animator=j,o}),d("qtek/animation/Blend1DClip",["require","./Clip"],function(a){var b=a("./Clip"),c=function(a,b){return a.position<b.position},d=function(a){a=a||{},b.call(this,a),this.output=a.output||null,this.inputs=a.inputs||[],this.position=0,this._cacheKey=0,this._cachePosition=-1/0,this.inputs.sort(c)};return d.prototype=new b,d.prototype.constructor=d,d.prototype.addInput=function(a,b,c){var d={position:a,clip:b,offset:c||0};if(this.life=Math.max(b.life,this.life),!this.inputs.length)return this.inputs.push(d),d;var e=this.inputs.length;if(this.inputs[0].position>a)this.inputs.unshift(d);else if(this.inputs[e-1].position<=a)this.inputs.push(d);else{var f=this._findKey(a);this.inputs.splice(f,d)}return d},d.prototype.step=function(a){var c=b.prototype.step.call(this,a);return"destroy"!==c&&this.setTime(this._elapsedTime),c},d.prototype.setTime=function(a){var c=this.position,d=this.inputs,e=d.length,f=d[0].position,g=d[e-1].position;if(f>=c||c>=g){var h=f>=c?d[0]:d[e-1],i=h.clip,j=h.offset;i.setTime((a+j)%i.life),i.output instanceof b?this.output.copy(i.output):this.output.copy(i)}else{var k=this._findKey(c),l=d[k],m=d[k+1],n=l.clip,o=m.clip;n.setTime((a+l.offset)%n.life),o.setTime((a+m.offset)%o.life);var p=(this.position-l.position)/(m.position-l.position),q=n.output instanceof b?n.output:n,r=o.output instanceof b?o.output:o;this.output.blend1D(q,r,p)}},d.prototype.clone=function(a){var c=b.prototype.clone.call(this);c.output=this.output.clone();for(var d=0;d<this.inputs.length;d++){var e=a?this.inputs[d].clip.clone(!0):this.inputs[d].clip;c.addInput(this.inputs[d].position,e,this.inputs[d].offset)}return c},d.prototype._findKey=function(a){var b=-1,c=this.inputs,d=c.length;if(this._cachePosition<a)for(var e=this._cacheKey;d-1>e;e++)a>=c[e].position&&a<c[e+1].position&&(b=e);else for(var f=Math.min(d-2,this._cacheKey),e=f;e>=0;e--)a>=c[e].position&&a<c[e+1].position&&(b=e);return b>=0&&(this._cacheKey=b,this._cachePosition=a),b},d}),d("qtek/util/delaunay",["require"],function(){function a(a){var b,c,d,e,f,g,h=Number.POSITIVE_INFINITY,i=Number.POSITIVE_INFINITY,j=Number.NEGATIVE_INFINITY,k=Number.NEGATIVE_INFINITY;for(b=a.length;b--;)a[b][0]<h&&(h=a[b][0]),a[b][0]>j&&(j=a[b][0]),a[b][1]<i&&(i=a[b][1]),a[b][1]>k&&(k=a[b][1]);c=j-h,d=k-i,e=Math.max(c,d),f=h+.5*c,g=i+.5*d,a.push([f-20*e,g-e],[f,g+20*e],[f+20*e,g-e])}function b(a,b,c,d){var e,f,g,h,i,j,k=a[b],l=a[c],m=a[d],n=l[0]-k[0],o=l[1]-k[1],p=m[0]-k[0],q=m[1]-k[1],r=n*(k[0]+l[0])+o*(k[1]+l[1]),s=p*(k[0]+m[0])+q*(k[1]+m[1]),t=2*(n*(m[1]-l[1])-o*(m[0]-l[0]));return Math.abs(t)<1e-6?(e=Math.min(k[0],l[0],m[0]),f=Math.min(k[1],l[1],m[1]),g=.5*(Math.max(k[0],l[0],m[0])-e),h=.5*(Math.max(k[1],l[1],m[1])-f),i=e+g,j=f+h):(i=(q*r-o*s)/t,j=(n*s-p*r)/t,g=i-k[0],h=j-k[1]),{i:b,j:c,k:d,x:i,y:j,r:g*g+h*h}}function c(a){var b,c,d,e,f,g=a.length;a:for(;g;)for(c=a[--g],b=a[--g],d=g;d;)if(f=a[--d],e=a[--d],b===e&&c===f||b===f&&c===e){a.splice(g,2),a.splice(d,2),g-=2;continue a}}var d={triangulate:function(d,e){var f,g,h,i,j,k,l,m,n,o,p,q=d.length;if(3>q)return[];if(d=d.slice(0),e)for(f=q;f--;)d[f]=d[f][e];for(h=new Array(q),f=q;f--;)h[f]=f;for(h.sort(function(a,b){return d[b][0]-d[a][0]}),a(d),i=[b(d,q+0,q+1,q+2)],j=[],k=[],f=h.length;f--;){for(p=h[f],k.length=0,g=i.length;g--;)l=d[p][0]-i[g].x,l>0&&l*l>i[g].r?(j.push(i[g]),i.splice(g,1)):(m=d[p][1]-i[g].y,l*l+m*m>i[g].r||(k.push(i[g].i,i[g].j,i[g].j,i[g].k,i[g].k,i[g].i),i.splice(g,1)));for(c(k),g=k.length;g;)o=k[--g],n=k[--g],i.push(b(d,n,o,p))}for(f=i.length;f--;)j.push(i[f]);for(i.length=0,f=j.length;f--;)if(j[f].i<q&&j[f].j<q&&j[f].k<q){var r=j[f].i,s=j[f].j,t=j[f].k,u={indices:[r,s,t],vertices:[d[r],d[s],d[t]]};i.push(u)}return i},contains:function(a,b){if(b[0]<a[0][0]&&b[0]<a[1][0]&&b[0]<a[2][0]||b[0]>a[0][0]&&b[0]>a[1][0]&&b[0]>a[2][0]||b[1]<a[0][1]&&b[1]<a[1][1]&&b[1]<a[2][1]||b[1]>a[0][1]&&b[1]>a[1][1]&&b[1]>a[2][1])return null;var c=a[1][0]-a[0][0],d=a[2][0]-a[0][0],e=a[1][1]-a[0][1],f=a[2][1]-a[0][1],g=c*f-d*e;if(0===g)return null;var h=(f*(b[0]-a[0][0])-d*(b[1]-a[0][1]))/g,i=(c*(b[1]-a[0][1])-e*(b[0]-a[0][0]))/g;return 0>h||0>i||h+i>1?null:[h,i]}};return d}),d("qtek/animation/Blend2DClip",["require","./Clip","../util/delaunay","../math/Vector2"],function(a){var b=a("./Clip"),c=a("../util/delaunay"),d=a("../math/Vector2"),e=function(a){a=a||{},b.call(this,a),this.output=a.output||null,this.inputs=a.inputs||[],this.position=new d,this._cacheTriangle=null,this._triangles=[],this._updateTriangles()};return e.prototype=new b,e.prototype.constructor=e,e.prototype.addInput=function(a,b,c){var d={position:a,clip:b,offset:c||0};return this.inputs.push(d),this.life=Math.max(b.life,this.life),this._updateTriangles(),d},e.prototype._updateTriangles=function(){var a=this.inputs.map(function(a){return a.position});this._triangles=c.triangulate(a,"_array")},e.prototype.step=function(a){var c=b.prototype.step.call(this,a);return"destroy"!==c&&this.setTime(this._elapsedTime),c},e.prototype.setTime=function(a){var c=this._findTriangle(this.position);if(c){var d=c[1],e=c[2],f=c[0],g=this.inputs[f.indices[0]],h=this.inputs[f.indices[1]],i=this.inputs[f.indices[2]],j=g.clip,k=h.clip,l=i.clip;j.setTime((a+g.offset)%j.life),k.setTime((a+h.offset)%k.life),l.setTime((a+i.offset)%l.life);
var m=j.output instanceof b?j.output:j,n=k.output instanceof b?k.output:k,o=l.output instanceof b?l.output:l;this.output.blend2D(m,n,o,d,e)}},e.prototype.clone=function(a){var c=b.prototype.clone.call(this);c.output=this.output.clone();for(var d=0;d<this.inputs.length;d++){var e=a?this.inputs[d].clip.clone(!0):this.inputs[d].clip;c.addInput(this.inputs[d].position,e,this.inputs[d].offset)}return c},e.prototype._findTriangle=function(a){if(this._cacheTriangle){var b=c.contains(this._cacheTriangle.vertices,a._array);if(b)return[this._cacheTriangle,b[0],b[1]]}for(var d=0;d<this._triangles.length;d++){var e=this._triangles[d],b=c.contains(e.vertices,this.position._array);if(b)return this._cacheTriangle=e,[e,b[0],b[1]]}},e}),d("qtek/animation/TransformClip",["require","./Clip","../dep/glmatrix"],function(a){function b(a,b){return a.time-b.time}var c=a("./Clip"),d=a("../dep/glmatrix"),e=d.quat,f=d.vec3,g=function(a){a=a||{},c.call(this,a),this.keyFrames=[],a.keyFrames&&this.addKeyFrames(a.keyFrames),this.position=f.create(),this.rotation=e.create(),this.scale=f.fromValues(1,1,1),this._cacheKey=0,this._cacheTime=0};return g.prototype=Object.create(c.prototype),g.prototype.constructor=g,g.prototype.step=function(a){var b=c.prototype.step.call(this,a);return"destroy"!==b&&this.setTime(this._elapsedTime),b},g.prototype.setTime=function(a){this._interpolateField(a,"position"),this._interpolateField(a,"rotation"),this._interpolateField(a,"scale")},g.prototype.addKeyFrame=function(a){for(var b=0;b<this.keyFrames.length-1;b++){var c=this.keyFrames[b],d=this.keyFrames[b+1];if(c.time<=a.time&&d.time>=a.time)return this.keyFrames.splice(b,0,a),b}this.life=a.time,this.keyFrames.push(a)},g.prototype.addKeyFrames=function(a){for(var c=0;c<a.length;c++)this.keyFrames.push(a[c]);this.keyFrames.sort(b),this.life=this.keyFrames[this.keyFrames.length-1].time},g.prototype._interpolateField=function(a,b){var c,d,g=this.keyFrames,h=g.length;if(g.length&&!(a<g[0].time||a>g[g.length-1].time)){if(a<this._cacheTime){for(var i=this._cacheKey>=h-1?h-1:this._cacheKey+1,j=i;j>=0;j--)if(g[j].time<=a&&g[j][b])c=g[j],this._cacheKey=j,this._cacheTime=a;else if(g[j][b]){d=g[j];break}}else for(var j=this._cacheKey;h>j;j++)if(g[j].time<=a&&g[j][b])c=g[j],this._cacheKey=j,this._cacheTime=a;else if(g[j][b]){d=g[j];break}if(c&&d){var k=(a-c.time)/(d.time-c.time);k=Math.max(Math.min(k,1),0),"rotation"===b?e.slerp(this[b],c[b],d[b],k):f.lerp(this[b],c[b],d[b],k)}else this._cacheKey=0,this._cacheTime=0}},g.prototype.blend1D=function(a,b,c){f.lerp(this.position,a.position,b.position,c),f.lerp(this.scale,a.scale,b.scale,c),e.slerp(this.rotation,a.rotation,b.rotation,c)},g.prototype.blend2D=function(){var a=e.create(),b=e.create();return function(c,d,f,g,h){var i=1-g-h;this.position[0]=c.position[0]*i+d.position[0]*g+f.position[0]*h,this.position[1]=c.position[1]*i+d.position[1]*g+f.position[1]*h,this.position[2]=c.position[2]*i+d.position[2]*g+f.position[2]*h,this.scale[0]=c.scale[0]*i+d.scale[0]*g+f.scale[0]*h,this.scale[1]=c.scale[1]*i+d.scale[1]*g+f.scale[1]*h,this.scale[2]=c.scale[2]*i+d.scale[2]*g+f.scale[2]*h;var j=g+h;0===j?e.copy(this.rotation,c.rotation):(e.slerp(a,c.rotation,d.rotation,j),e.slerp(b,c.rotation,f.rotation,j),e.slerp(this.rotation,a,b,h/j))}}(),g.prototype.additiveBlend=function(a,b){f.add(this.position,a.position,b.position),f.add(this.scale,a.scale,b.scale),e.multiply(this.rotation,b.rotation,a.rotation)},g.prototype.subtractiveBlend=function(a,b){f.sub(this.position,a.position,b.position),f.sub(this.scale,a.scale,b.scale),e.invert(this.rotation,b.rotation),e.multiply(this.rotation,this.rotation,a.rotation)},g.prototype.getSubClip=function(){console.warn("TODO")},g.prototype.clone=function(){var a=c.prototype.clone.call(this);return a.keyFrames=this.keyFrames,f.copy(a.position,this.position),e.copy(a.rotation,this.rotation),f.copy(a.scale,this.scale),a},g}),d("qtek/animation/SamplerClip",["require","./Clip","./TransformClip","../dep/glmatrix"],function(a){function b(a,b,c,d,e,f){var g=b[e],h=b[e+1],i=b[e+2];return a[0]=g+d*(c[f]-g),a[1]=h+d*(c[f+1]-h),a[2]=i+d*(c[f+2]-i),a}function c(a,b,c,d,e,f){var g,h,i,j,k,l=b[0+e],m=b[1+e],n=b[2+e],o=b[3+e],p=c[0+f],q=c[1+f],r=c[2+f],s=c[3+f];return h=l*p+m*q+n*r+o*s,0>h&&(h=-h,p=-p,q=-q,r=-r,s=-s),1-h>1e-6?(g=Math.acos(h),i=Math.sin(g),j=Math.sin((1-d)*g)/i,k=Math.sin(d*g)/i):(j=1-d,k=d),a[0]=j*l+k*p,a[1]=j*m+k*q,a[2]=j*n+k*r,a[3]=j*o+k*s,a}var d=a("./Clip"),e=a("./TransformClip"),f=a("../dep/glmatrix"),g=f.quat,h=f.vec3,i=function(a){a=a||{},d.call(this,a),this.position=h.create(),this.rotation=g.create(),this.scale=h.fromValues(1,1,1),this.channels={time:null,position:null,rotation:null,scale:null},this._cacheKey=0,this._cacheTime=0};return i.prototype=Object.create(d.prototype),i.prototype.constructor=i,i.prototype.step=function(a){var b=d.prototype.step.call(this,a);return"destroy"!==b&&this.setTime(this._elapsedTime),b},i.prototype.setTime=function(a){if(this.channels.time){var d=this.channels,e=d.time.length,f=-1;if(a<this._cacheTime){for(var g=Math.min(e-2,this._cacheKey),h=g;h>=0;h--)if(d.time[h-1]<=a&&d.time[h]>a){f=h-1;break}}else for(var h=this._cacheKey;e-1>h;h++)if(d.time[h]<=a&&d.time[h+1]>a){f=h;break}if(f>-1){this._cacheKey=f,this._cacheTime=a;var i=f,j=f+1,k=d.time[i],l=d.time[j],m=(a-k)/(l-k);d.rotation&&c(this.rotation,d.rotation,d.rotation,m,4*i,4*j),d.position&&b(this.position,d.position,d.position,m,3*i,3*j),d.scale&&b(this.scale,d.scale,d.scale,m,3*i,3*j)}f==e-2&&(this._cacheKey=0,this._cacheTime=0)}},i.prototype.getSubClip=function(a,b){var c=new i({name:this.name}),d=this.channels.time[0];a=Math.min(Math.max(a,d),this.life),b=Math.min(Math.max(b,d),this.life);var e=this._findRange(a),f=this._findRange(b),g=f[0]-e[0]+1;0===e[1]&&0===f[1]&&(g-=1),this.channels.rotation&&(c.channels.rotation=new Float32Array(4*g)),this.channels.position&&(c.channels.position=new Float32Array(3*g)),this.channels.scale&&(c.channels.scale=new Float32Array(3*g)),this.channels.time&&(c.channels.time=new Float32Array(g)),this.setTime(a);for(var h=0;3>h;h++)c.channels.rotation[h]=this.rotation[h],c.channels.position[h]=this.position[h],c.channels.scale[h]=this.scale[h];c.channels.time[0]=0,c.channels.rotation[3]=this.rotation[3];for(var h=1;g-1>h;h++){for(var j,k=0;3>k;k++)j=e[0]+h,c.channels.rotation[4*h+k]=this.channels.rotation[4*j+k],c.channels.position[3*h+k]=this.channels.position[3*j+k],c.channels.scale[3*h+k]=this.channels.scale[3*j+k];c.channels.time[h]=this.channels.time[j]-a,c.channels.rotation[4*h+3]=this.channels.rotation[4*j+3]}this.setTime(b);for(var h=0;3>h;h++)c.channels.rotation[4*(g-1)+h]=this.rotation[h],c.channels.position[3*(g-1)+h]=this.position[h],c.channels.scale[3*(g-1)+h]=this.scale[h];return c.channels.time[g-1]=b-a,c.channels.rotation[4*(g-1)+3]=this.rotation[3],c.life=b-a,c},i.prototype._findRange=function(a){for(var b=this.channels,c=b.time.length,d=-1,e=0;c-1>e;e++)b.time[e]<=a&&b.time[e+1]>a&&(d=e);var f=0;if(d>=0)var g=b.time[d],h=b.time[d+1],f=(a-g)/(h-g);return[d,f]},i.prototype.blend1D=e.prototype.blend1D,i.prototype.blend2D=e.prototype.blend2D,i.prototype.additiveBlend=e.prototype.additiveBlend,i.prototype.subtractiveBlend=e.prototype.subtractiveBlend,i.prototype.clone=function(){var a=d.prototype.clone.call(this);return a.channels={time:this.channels.time||null,position:this.channels.position||null,rotation:this.channels.rotation||null,scale:this.channels.scale||null},h.copy(a.position,this.position),g.copy(a.rotation,this.rotation),h.copy(a.scale,this.scale),a},i}),d("qtek/animation/SkinningClip",["require","./Clip","./TransformClip","../dep/glmatrix"],function(a){var b=a("./Clip"),c=a("./TransformClip"),d=a("../dep/glmatrix"),e=d.quat,f=d.vec3,g=function(a){if(a=a||{},b.call(this,a),this.jointClips=[],this.life=0,a.jointClips&&a.jointClips.length>0)for(var d=0;d<a.jointClips.length;d++){var e=a.jointClips[d],f=new c({keyFrames:e.keyFrames});f.name=e.name||"",this.jointClips[d]=f,this.life=Math.max(f.life,this.life)}};return g.prototype=Object.create(b.prototype),g.prototype.constructor=g,g.prototype.step=function(a){var c=b.prototype.step.call(this,a);return"destroy"!==c&&this.setTime(this._elapsedTime),c},g.prototype.setTime=function(a){for(var b=0;b<this.jointClips.length;b++)this.jointClips[b].setTime(a)},g.prototype.addJointClip=function(a){this.jointClips.push(a),this.life=Math.max(a.life,this.life)},g.prototype.removeJointClip=function(a){this.jointClips.splice(this.jointClips.indexOf(a),1)},g.prototype.getSubClip=function(a,b,c){for(var d=new g({name:this.name}),e=0;e<this.jointClips.length;e++){var f=this.jointClips[e].getSubClip(a,b);d.addJointClip(f)}return void 0!==c&&d.setLoop(c),d},g.prototype.blend1D=function(a,b,c){for(var d=0;d<this.jointClips.length;d++){var e=a.jointClips[d],f=b.jointClips[d],g=this.jointClips[d];g.blend1D(e,f,c)}},g.prototype.additiveBlend=function(a,b){for(var c=0;c<this.jointClips.length;c++){var d=a.jointClips[c],e=b.jointClips[c],f=this.jointClips[c];f.additiveBlend(d,e)}},g.prototype.subtractiveBlend=function(a,b){for(var c=0;c<this.jointClips.length;c++){var d=a.jointClips[c],e=b.jointClips[c],f=this.jointClips[c];f.subtractiveBlend(d,e)}},g.prototype.blend2D=function(a,b,c,d,e){for(var f=0;f<this.jointClips.length;f++){var g=a.jointClips[f],h=b.jointClips[f],i=c.jointClips[f],j=this.jointClips[f];j.blend2D(g,h,i,d,e)}},g.prototype.copy=function(a){for(var b=0;b<this.jointClips.length;b++){var c=a.jointClips[b],d=this.jointClips[b];f.copy(d.position,c.position),f.copy(d.scale,c.scale),e.copy(d.rotation,c.rotation)}},g.prototype.clone=function(){for(var a=b.prototype.clone.call(this),c=0;c<this.jointClips.length;c++)a.addJointClip(this.jointClips[c].clone());return a},g}),d("qtek/core/request",["require"],function(){function a(a){var b=new XMLHttpRequest;b.open("get",a.url),b.responseType=a.responseType||"text",a.onprogress&&(b.onprogress=function(b){if(b.lengthComputable){var c=b.loaded/b.total;a.onprogress(c,b.loaded,b.total)}else a.onprogress(null)}),b.onload=function(){a.onload&&a.onload(b.response)},a.onerror&&(b.onerror=a.onerror),b.send(null)}return{get:a}}),d("qtek/async/Task",["require","../core/mixin/notifier","../core/request","../core/util"],function(a){function b(a,b){var c=new f;return d.get({url:a,responseType:b,onload:function(a){c.resolve(a)},onerror:function(a){c.reject(a)}}),c}var c=a("../core/mixin/notifier"),d=a("../core/request"),e=a("../core/util"),f=function(){this._fullfilled=!1,this._rejected=!1};return f.prototype.resolve=function(a){this._fullfilled=!0,this._rejected=!1,this.trigger("success",a)},f.prototype.reject=function(a){this._rejected=!0,this._fullfilled=!1,this.trigger("error",a)},f.prototype.isFullfilled=function(){return this._fullfilled},f.prototype.isRejected=function(){return this._rejected},f.prototype.isSettled=function(){return this._fullfilled||this._rejected},e.extend(f.prototype,c),f.makeRequestTask=function(a,c){if("string"==typeof a)return b(a,c);if(a.url){var d=a;return b(d.url,d.responseType)}if(a instanceof Array){var e=a,f=[];return e.forEach(function(a){var c,d;"string"==typeof a?c=a:Object(a)===a&&(c=a.url,d=a.responseType),f.push(b(c,d))}),f}},f.makeTask=function(){return new f},e.extend(f.prototype,c),f}),d("qtek/async/TaskGroup",["require","../core/util","./Task"],function(a){var b=a("../core/util"),c=a("./Task"),d=function(){c.apply(this,arguments),this._tasks=[],this._fulfilledNumber=0,this._rejectedNumber=0},e=function(){};return e.prototype=c.prototype,d.prototype=new e,d.prototype.constructor=d,d.prototype.all=function(a){var c=0,d=this,e=[];return this._tasks=a,this._fulfilledNumber=0,this._rejectedNumber=0,b.each(a,function(a,b){a&&a.once&&(c++,a.once("success",function(f){c--,d._fulfilledNumber++,a._fulfilled=!0,a._rejected=!1,e[b]=f,0===c&&d.resolve(e)}),a.once("error",function(){d._rejectedNumber++,a._fulfilled=!1,a._rejected=!0,d.reject(a)}))}),0===c?(setTimeout(function(){d.resolve(e)}),this):this},d.prototype.allSettled=function(a){var c=0,d=this,e=[];return 0===a.length?(setTimeout(function(){d.trigger("success",e)}),this):(this._tasks=a,b.each(a,function(a,b){a&&a.once&&(c++,a.once("success",function(f){c--,d._fulfilledNumber++,a._fulfilled=!0,a._rejected=!1,e[b]=f,0===c&&d.resolve(e)}),a.once("error",function(){c--,d._rejectedNumber++,a._fulfilled=!1,a._rejected=!0,e[b]=null,0===c&&d.resolve(e)}))}),this)},d.prototype.getFulfilledNumber=function(a){if(a){for(var b=0,c=0;c<this._tasks.length;c++){var e=this._tasks[c];e instanceof d?b+=e.getFulfilledNumber(a):e._fulfilled&&(b+=1)}return b}return this._fulfilledNumber},d.prototype.getRejectedNumber=function(a){if(a){for(var b=0,c=0;c<this._tasks.length;c++){var e=this._tasks[c];e instanceof d?b+=e.getRejectedNumber(a):e._rejected&&(b+=1)}return b}return this._rejectedNumber},d.prototype.getSettledNumber=function(a){if(a){for(var b=0,c=0;c<this._tasks.length;c++){var e=this._tasks[c];e instanceof d?b+=e.getSettledNumber(a):(e._rejected||e._fulfilled)&&(b+=1)}return b}return this._fulfilledNumber+this._rejectedNumber},d.prototype.getTaskNumber=function(a){if(a){for(var b=0,c=0;c<this._tasks.length;c++){var e=this._tasks[c];b+=e instanceof d?e.getTaskNumber(a):1}return b}return this._tasks.length},d}),d("qtek/camera/Orthographic",["require","../Camera"],function(a){var b=a("../Camera"),c=b.derive({left:-1,right:1,near:-1,far:1,top:1,bottom:-1},{updateProjectionMatrix:function(){this.projectionMatrix.ortho(this.left,this.right,this.bottom,this.top,this.near,this.far)},clone:function(){var a=b.prototype.clone.call(this);return a.left=this.left,a.right=this.right,a.near=this.near,a.far=this.far,a.top=this.top,a.bottom=this.bottom,a}});return c}),d("qtek/camera/Perspective",["require","../Camera"],function(a){var b=a("../Camera"),c=b.derive({fov:50,aspect:1,near:.1,far:2e3},{updateProjectionMatrix:function(){var a=this.fov/180*Math.PI;this.projectionMatrix.perspective(a,this.aspect,this.near,this.far)},clone:function(){var a=b.prototype.clone.call(this);return a.fov=this.fov,a.aspect=this.aspect,a.near=this.near,a.far=this.far,a}});return c}),d("qtek/compositor/Graph",["require","../core/Base"],function(a){var b=a("../core/Base"),c=b.derive(function(){return{nodes:[]}},{addNode:function(a){this.nodes.push(a),this._dirty=!0},removeNode:function(a){this.nodes.splice(this.nodes.indexOf(a),1),this._dirty=!0},findNode:function(a){for(var b=0;b<this.nodes.length;b++)if(this.nodes[b].name===a)return this.nodes[b]},update:function(){for(var a=0;a<this.nodes.length;a++)this.nodes[a].clear();for(var a=0;a<this.nodes.length;a++){var b=this.nodes[a];if(b.inputs)for(var c in b.inputs){var d=b.inputs[c],e=this.findPin(d);e?b.link(c,e.node,e.pin):console.warn("Pin of "+d.node+"."+d.pin+" not exist")}}},findPin:function(a){var b;if("string"==typeof a.node)for(var c=0;c<this.nodes.length;c++){var d=this.nodes[c];d.name===a.node&&(b=d)}else b=a.node;return b&&b.outputs[a.pin]?{node:b,pin:a.pin}:void 0}});return c}),d("qtek/compositor/TexturePool",["require","../Texture2D","../core/glenum","../core/util"],function(a){function b(a){g.defaultsWithPropList(a,i,j),c(a);for(var b="",d=0;d<j.length;d++){var e=j[d],f=a[e].toString();b+=f}return b}function c(a){var b=d(a.width,a.height);a.format===f.DEPTH_COMPONENT&&(a.useMipmap=!1),b&&a.useMipmap||(a.minFilter==f.NEAREST_MIPMAP_NEAREST||a.minFilter==f.NEAREST_MIPMAP_LINEAR?a.minFilter=f.NEAREST:(a.minFilter==f.LINEAR_MIPMAP_LINEAR||a.minFilter==f.LINEAR_MIPMAP_NEAREST)&&(a.minFilter=f.LINEAR),a.wrapS=f.CLAMP_TO_EDGE,a.wrapT=f.CLAMP_TO_EDGE)}function d(a,b){return 0===(a&a-1)&&0===(b&b-1)}var e=a("../Texture2D"),f=a("../core/glenum"),g=a("../core/util"),h=function(){this._pool={},this._allocatedTextures=[]};h.prototype={constructor:h,get:function(a){var c=b(a);this._pool.hasOwnProperty(c)||(this._pool[c]=[]);var d=this._pool[c];if(!d.length){var f=new e(a);return this._allocatedTextures.push(f),f}return d.pop()},put:function(a){var c=b(a);this._pool.hasOwnProperty(c)||(this._pool[c]=[]);var d=this._pool[c];d.push(a)},clear:function(a){for(var b=0;b<this._allocatedTextures.length;b++)this._allocatedTextures[b].dispose(a);this._pool={},this._allocatedTextures=[]}};var i={width:512,height:512,type:f.UNSIGNED_BYTE,format:f.RGBA,wrapS:f.CLAMP_TO_EDGE,wrapT:f.CLAMP_TO_EDGE,minFilter:f.LINEAR_MIPMAP_LINEAR,magFilter:f.LINEAR,useMipmap:!0,anisotropic:1,flipY:!0,unpackAlignment:4,premultiplyAlpha:!1},j=Object.keys(i);return h}),d("qtek/compositor/Compositor",["require","./Graph","./TexturePool"],function(a){var b=a("./Graph"),c=a("./TexturePool"),d=b.derive(function(){return{_outputs:[],_texturePool:new c}},{addNode:function(a){b.prototype.addNode.call(this,a),a.outputs||this.addOutput(a),a._compositor=this},render:function(a,b){this._dirty&&(this.update(),this._dirty=!1);for(var c=0;c<this.nodes.length;c++)this.nodes[c].beforeFrame();for(var c=0;c<this._outputs.length;c++)this._outputs[c].updateReference();for(var c=0;c<this._outputs.length;c++)this._outputs[c].render(a,b);for(var c=0;c<this.nodes.length;c++)this.nodes[c].afterFrame()},addOutput:function(a){this._outputs.indexOf(a)<0&&this._outputs.push(a)},removeOutput:function(a){this._outputs.splice(this._outputs.indexOf(a),1)},allocateTexture:function(a){return this._texturePool.get(a)},releaseTexture:function(a){this._texturePool.put(a)},dispose:function(a){this._texturePool.clear(a.gl)}});return d}),d("qtek/geometry/Plane",["require","../DynamicGeometry","../math/BoundingBox"],function(a){var b=a("../DynamicGeometry"),c=a("../math/BoundingBox"),d=b.derive({widthSegments:1,heightSegments:1},function(){this.build()},{build:function(){var a=this.heightSegments,b=this.widthSegments,d=this.attributes.position.value,e=this.attributes.texcoord0.value,f=this.attributes.normal.value,g=this.faces;d.length=0,e.length=0,f.length=0,g.length=0;for(var h=0;a>=h;h++)for(var i=h/a,j=0;b>=j;j++){var k=j/b;if(d.push([2*k-1,2*i-1,0]),e&&e.push([k,i]),f&&f.push([0,0,1]),b>j&&a>h){var l=j+h*(b+1);g.push([l,l+1,l+b+1]),g.push([l+b+1,l+1,l+b+2])}}this.boundingBox=new c,this.boundingBox.min.set(-1,-1,0),this.boundingBox.max.set(1,1,0)}});return d}),d("qtek/shader/source/compositor/vertex.essl",[],function(){return"\n@export buildin.compositor.vertex\n\nuniform mat4 worldViewProjection : WORLDVIEWPROJECTION;\n\nattribute vec3 position : POSITION;\nattribute vec2 texcoord : TEXCOORD_0;\n\nvarying vec2 v_Texcoord;\n\nvoid main()\n{\n    v_Texcoord = texcoord;\n    gl_Position = worldViewProjection * vec4(position, 1.0);\n}\n\n@end"}),d("qtek/compositor/Pass",["require","../core/Base","../camera/Orthographic","../geometry/Plane","../Shader","../Material","../Mesh","../core/glinfo","../core/glenum","../shader/source/compositor/vertex.essl"],function(a){var b=a("../core/Base"),c=a("../camera/Orthographic"),d=a("../geometry/Plane"),e=a("../Shader"),f=a("../Material"),g=a("../Mesh"),h=a("../core/glinfo"),i=a("../core/glenum");e["import"](a("../shader/source/compositor/vertex.essl"));var j=new d,k=new g({geometry:j}),l=new c,m=b.derive(function(){return{fragment:"",outputs:null,material:null}},function(){var a=new e({vertex:e.source("buildin.compositor.vertex"),fragment:this.fragment}),b=new f({shader:a});a.enableTexturesAll(),this.material=b},{setUniform:function(a,b){var c=this.material.uniforms[a];c&&(c.value=b)},getUniform:function(a){var b=this.material.uniforms[a];return b?b.value:void 0},attachOutput:function(a,b){this.outputs||(this.outputs={}),b=b||i.COLOR_ATTACHMENT0,this.outputs[b]=a},detachOutput:function(a){for(var b in this.outputs)this.outputs[b]===a&&(this.outputs[b]=null)},bind:function(a,b){if(this.outputs)for(var c in this.outputs){var d=this.outputs[c];d&&b.attach(a.gl,d,c)}b&&b.bind(a)},unbind:function(a,b){b.unbind(a)},render:function(a,b){var c=a.gl;if(b){this.bind(a,b);var d=h.getExtension(c,"EXT_draw_buffers");if(d&&this.outputs){var e=[];for(var f in this.outputs)f=+f,f>=c.COLOR_ATTACHMENT0&&f<=c.COLOR_ATTACHMENT0+8&&e.push(f);d.drawBuffersEXT(e)}}this.trigger("beforerender",this,a),c.disable(c.BLEND),c.clear(c.DEPTH_BUFFER_BIT),this.renderQuad(a),this.trigger("afterrender",this,a),b&&this.unbind(a,b)},renderQuad:function(a){k.material=this.material,a.renderQueue([k],l)}});return m}),d("qtek/compositor/Node",["require","../core/Base","./Pass","../FrameBuffer"],function(a){var b=a("../core/Base"),c=a("./Pass"),d=a("../FrameBuffer"),e=b.derive(function(){return{name:"",inputs:{},outputs:null,shader:"",inputLinks:{},outputLinks:{},pass:null,_prevOutputTextures:{},_outputTextures:{},_outputReferences:{},_rendering:!1,_rendered:!1,_compositor:null}},function(){var a=new c({fragment:this.shader});this.pass=a,this.outputs&&(this.frameBuffer=new d({depthBuffer:!1}))},{render:function(a,b){this.trigger("beforerender",a),this._rendering=!0;var c=a.gl;for(var d in this.inputLinks){var e=this.inputLinks[d],f=e.node.getOutput(a,e.pin);this.pass.setUniform(d,f)}if(this.outputs){this.pass.outputs={};for(var g in this.outputs){var h=this.updateParameter(g,a),i=this.outputs[g],j=this._compositor.allocateTexture(h);this._outputTextures[g]=j;var k=i.attachment||c.COLOR_ATTACHMENT0;"string"==typeof k&&(k=c[k]),this.pass.outputs[k]=j}this.pass.render(a,this.frameBuffer)}else this.pass.outputs=null,this.pass.render(a,b);for(var d in this.inputLinks){var e=this.inputLinks[d];e.node.removeReference(e.pin)}this._rendering=!1,this._rendered=!0,this.trigger("afterrender",a)},updateParameter:function(a,b){var c=this.outputs[a],d=c.parameters,e=c._parametersCopy;if(e||(e=c._parametersCopy={}),d)for(var f in d)"width"!==f&&"height"!==f&&(e[f]=d[f]);var g,h;return g=d.width instanceof Function?d.width(b):d.width,h=d.height instanceof Function?d.height(b):d.height,(e.width!==g||e.height!==h)&&this._outputTextures[a]&&this._outputTextures[a].dispose(b.gl),e.width=g,e.height=h,e},setParameter:function(a,b){this.pass.setUniform(a,b)},getParameter:function(a){return this.pass.getUniform(a)},setParameters:function(a){for(var b in a)this.setParameter(b,a[b])},setShader:function(a){var b=this.pass.material;b.shader.setFragment(a),b.attachShader(b.shader,!0)},getOutput:function(a,b){if(void 0===b)return b=a,this._outputTextures[b];var c=this.outputs[b];if(c)return this._rendered?c.outputLastFrame?this._prevOutputTextures[b]:this._outputTextures[b]:this._rendering?(this._prevOutputTextures[b]||(this._prevOutputTextures[b]=this._compositor.allocateTexture(c.parameters||{})),this._prevOutputTextures[b]):(this.render(a),this._outputTextures[b])},removeReference:function(a){if(this._outputReferences[a]--,0===this._outputReferences[a]){var b=this.outputs[a];b.keepLastFrame?(this._prevOutputTextures[a]&&this._compositor.releaseTexture(this._prevOutputTextures[a]),this._prevOutputTextures[a]=this._outputTextures[a]):this._compositor.releaseTexture(this._outputTextures[a])}},link:function(a,b,c){this.inputLinks[a]={node:b,pin:c},b.outputLinks[c]||(b.outputLinks[c]=[]),b.outputLinks[c].push({node:this,pin:a});var d=this.pass.material.shader;d.enableTexture(a)},clear:function(){this.inputLinks={},this.outputLinks={};var a=this.pass.material.shader;a.disableTexturesAll()},updateReference:function(a){if(!this._rendering){this._rendering=!0;for(var b in this.inputLinks){var c=this.inputLinks[b];c.node.updateReference(c.pin)}this._rendering=!1}a&&this._outputReferences[a]++},beforeFrame:function(){this._rendered=!1;for(var a in this.outputLinks)this._outputReferences[a]=0},afterFrame:function(){for(var a in this.outputLinks)if(this._outputReferences[a]>0){var b=this.outputs[a];b.keepLastFrame?(this._prevOutputTextures[a]&&this._compositor.releaseTexture(this._prevOutputTextures[a]),this._prevOutputTextures[a]=this._outputTextures[a]):this._compositor.releaseTexture(this._outputTextures[a])}}});return e}),d("qtek/compositor/SceneNode",["require","./Node","../core/glinfo"],function(a){var b=a("./Node"),c=a("../core/glinfo"),d=b.derive({name:"scene",scene:null,camera:null,autoUpdateScene:!0,preZ:!1},function(){this.frameBuffer&&(this.frameBuffer.depthBuffer=!0)},{render:function(a){this._rendering=!0;var b=a.gl;this.trigger("beforerender");var d;if(this.outputs){var e=this.frameBuffer;for(var f in this.outputs){var g=this.updateParameter(f,a),h=this.outputs[f],i=this._compositor.allocateTexture(g);this._outputTextures[f]=i;var j=h.attachment||b.COLOR_ATTACHMENT0;"string"==typeof j&&(j=b[j]),e.attach(a.gl,i,j)}e.bind(a);var k=c.getExtension(b,"EXT_draw_buffers");if(k){var l=[];for(var j in this.outputs)j=parseInt(j),j>=b.COLOR_ATTACHMENT0&&j<=b.COLOR_ATTACHMENT0+8&&l.push(j);k.drawBuffersEXT(l)}d=a.render(this.scene,this.camera,!this.autoUpdateScene,this.preZ),e.unbind(a)}else d=a.render(this.scene,this.camera,!this.autoUpdateScene,this.preZ);this.trigger("afterrender",d),this._rendering=!1,this._rendered=!0}});return d}),d("qtek/compositor/TextureNode",["require","./Node","../Shader"],function(a){var b=a("./Node"),c=a("../Shader"),d=b.derive(function(){return{shader:c.source("buildin.compositor.output"),texture:null}},{render:function(a,b){this._rendering=!0;var c=a.gl;if(this.pass.setUniform("texture",this.texture),this.outputs){this.pass.outputs={};for(var d in this.outputs){var e=this.updateParameter(d,a),f=this.outputs[d],g=this._compositor.allocateTexture(e);this._outputTextures[d]=g;var h=f.attachment||c.COLOR_ATTACHMENT0;"string"==typeof h&&(h=c[h]),this.pass.outputs[h]=g}this.pass.render(a,this.frameBuffer)}else this.pass.outputs=null,this.pass.render(a,b);this._rendering=!1,this._rendered=!0}});return d}),d("qtek/core/Event",["require","./Base"],function(a){var b=a("./Base"),c=b.derive({cancelBubble:!1},{stopPropagation:function(){this.cancelBubble=!0}});return c["throw"]=function(a,b,d){var e=new c(d);for(e.type=a,e.target=b;b&&!e.cancelBubble;)e.currentTarget=b,b.trigger(a,e),b=b.getParent()},c}),d("qtek/core/LinkedList",["require"],function(){var a=function(){this.head=null,this.tail=null,this._length=0};return a.prototype.insert=function(b){var c=new a.Entry(b);return this.insertEntry(c),c},a.prototype.insertAt=function(b,c){if(!(0>b)){for(var d=this.head,e=0;d&&e!=b;)d=d.next,e++;if(d){var f=new a.Entry(c),g=d.prev;g.next=f,f.prev=g,f.next=d,d.prev=f}else this.insert(c)}},a.prototype.insertEntry=function(a){this.head?(this.tail.next=a,a.prev=this.tail,this.tail=a):this.head=this.tail=a,this._length++},a.prototype.remove=function(a){var b=a.prev,c=a.next;b?b.next=c:this.head=c,c?c.prev=b:this.tail=b,a.next=a.prev=null,this._length--},a.prototype.removeAt=function(a){if(!(0>a)){for(var b=this.head,c=0;b&&c!=a;)b=b.next,c++;return b?(this.remove(b),b.value):void 0}},a.prototype.getHead=function(){return this.head?this.head.value:void 0},a.prototype.getTail=function(){return this.tail?this.tail.value:void 0},a.prototype.getAt=function(a){if(!(0>a)){for(var b=this.head,c=0;b&&c!=a;)b=b.next,c++;return b.value}},a.prototype.indexOf=function(a){for(var b=this.head,c=0;b;){if(b.value===a)return c;b=b.next,c++}},a.prototype.length=function(){return this._length},a.prototype.isEmpty=function(){return 0===this._length},a.prototype.forEach=function(a,b){for(var c=this.head,d=0,e="undefined"!=typeof b;c;)e?a.call(b,c.value,d):a(c.value,d),c=c.next,d++},a.prototype.clear=function(){this.tail=this.head=null,this._length=0},a.Entry=function(a){this.value=a,this.next=null,this.prev=null},a}),d("qtek/core/LRU",["require","./LinkedList"],function(a){var b=a("./LinkedList"),c=function(a){this._list=new b,this._map={},this._maxSize=a||10};return c.prototype.setMaxSize=function(a){this._maxSize=a},c.prototype.put=function(a,b){if("undefined"==typeof this._map[a]){var c=this._list.length();if(c>=this._maxSize&&c>0){var d=this._list.head;this._list.remove(d),delete this._map[d.key]}var e=this._list.insert(b);e.key=a,this._map[a]=e}},c.prototype.get=function(a){var b=this._map[a];return"undefined"!=typeof b?(b!==this._list.tail&&(this._list.remove(b),this._list.insertEntry(b)),b.value):void 0},c.prototype.remove=function(a){var b=this._map[a];"undefined"!=typeof b&&(delete this._map[a],this._list.remove(b))},c.prototype.clear=function(){this._list.clear(),this._map={}},c}),d("qtek/deferred/StandardMaterial",["require","../core/Base"],function(a){var b=a("../core/Base"),c=function(){},d=b.derive({color:null,emission:null,specularColor:null,glossiness:.5,diffuseMap:null,normalMap:null,environmentMap:null,diffuseAlphaUsage:"none",uvRepeat:null,uvOffset:null},function(){this.color=this.color||[1,1,1],this.emission=this.emission||[0,0,0],this.specularColor=this.specularColor||[.1,.1,.1],this.uvRepeat=this.uvRepeat||[1,1],this.uvOffset=this.uvOffset||[0,0],this.shader=new c},{});return d}),d("qtek/geometry/Sphere",["require","../DynamicGeometry","../dep/glmatrix","../math/BoundingBox"],function(a){var b=a("../DynamicGeometry"),c=a("../dep/glmatrix"),d=c.vec3,e=c.vec2,f=a("../math/BoundingBox"),g=b.derive({widthSegments:20,heightSegments:20,phiStart:0,phiLength:2*Math.PI,thetaStart:0,thetaLength:Math.PI,radius:1},function(){this.build()},{build:function(){var a=this.attributes.position.value,b=this.attributes.texcoord0.value,c=this.attributes.normal.value;a.length=0,b.length=0,c.length=0,this.faces.length=0;var g,h,i,j,k,l,m,n,o=this.heightSegments,p=this.widthSegments,q=this.radius,r=this.phiStart,s=this.phiLength,t=this.thetaStart,u=this.thetaLength,q=this.radius;for(m=0;o>=m;m++)for(l=0;p>=l;l++)j=l/p,k=m/o,g=-q*Math.cos(r+j*s)*Math.sin(t+k*u),h=q*Math.cos(t+k*u),i=q*Math.sin(r+j*s)*Math.sin(t+k*u),a.push(d.fromValues(g,h,i)),b.push(e.fromValues(j,k)),n=d.fromValues(g,h,i),d.normalize(n,n),c.push(n);var v,w,x,y,z=this.faces,A=p+1;for(m=0;o>m;m++)for(l=0;p>l;l++)w=m*A+l,v=m*A+l+1,y=(m+1)*A+l+1,x=(m+1)*A+l,z.push(d.fromValues(v,w,y)),z.push(d.fromValues(w,x,y));this.boundingBox=new f,this.boundingBox.max.set(q,q,q),this.boundingBox.min.set(-q,-q,-q)}});return g}),d("qtek/geometry/Cone",["require","../DynamicGeometry","../math/BoundingBox","../dep/glmatrix"],function(a){var b=a("../DynamicGeometry"),c=a("../math/BoundingBox"),d=a("../dep/glmatrix"),e=d.vec3,f=d.vec2,g=b.derive({topRadius:0,bottomRadius:1,height:2,capSegments:20,heightSegments:1},function(){this.build()},{build:function(){var a=this.attributes.position.value,b=this.attributes.texcoord0.value,d=this.faces;a.length=0,b.length=0,d.length=0;for(var g=2*Math.PI/this.capSegments,h=[],i=[],j=this.topRadius,k=this.bottomRadius,l=this.height/2,m=e.fromValues(0,l,0),n=e.fromValues(0,-l,0),o=0;o<this.capSegments;o++){var p=o*g,q=j*Math.sin(p),r=j*Math.cos(p);h.push(e.fromValues(q,l,r)),q=k*Math.sin(p),r=k*Math.cos(p),i.push(e.fromValues(q,-l,r))}a.push(m),b.push(f.fromValues(0,1));for(var s=this.capSegments,o=0;s>o;o++)a.push(h[o]),b.push(f.fromValues(o/s,0)),d.push([0,o+1,(o+1)%s+1]);var t=a.length;a.push(n),b.push(f.fromValues(0,1));for(var o=0;s>o;o++)a.push(i[o]),b.push(f.fromValues(o/s,0)),d.push([t,t+((o+1)%s+1),t+o+1]);t=a.length;for(var u=this.heightSegments,o=0;s>o;o++)for(var v=0;u+1>v;v++){var w=v/u;a.push(e.lerp(e.create(),h[o],i[o],w)),b.push(f.fromValues(o/s,w))}for(var o=0;s>o;o++)for(var v=0;u>v;v++){var x=o*(u+1)+v,y=(o+1)%s*(u+1)+v,z=(o+1)%s*(u+1)+v+1,A=o*(u+1)+v+1;d.push([t+y,t+x,t+A]),d.push([t+A,t+z,t+y])}this.generateVertexNormals(),this.boundingBox=new c;var B=Math.max(this.topRadius,this.bottomRadius);this.boundingBox.min.set(-B,-this.height/2,-B),this.boundingBox.max.set(B,this.height/2,B)}});return g}),d("qtek/geometry/Cylinder",["require","../DynamicGeometry","./Cone"],function(a){var b=a("../DynamicGeometry"),c=a("./Cone"),d=b.derive({radius:1,height:2,capSegments:50,heightSegments:1},function(){this.build()},{build:function(){var a=new c({topRadius:this.radius,bottomRadius:this.radius,capSegments:this.capSegments,heightSegments:this.heightSegments,height:this.height});this.attributes.position.value=a.attributes.position.value,this.attributes.normal.value=a.attributes.normal.value,this.attributes.texcoord0.value=a.attributes.texcoord0.value,this.faces=a.faces,this.boundingBox=a.boundingBox}});return d
}),d("qtek/shader/source/util.essl",[],function(){return"// Use light attenuation formula in\n// http://blog.slindev.com/2011/01/10/natural-light-attenuation/\n@export buildin.util.calculate_attenuation\n\nuniform float attenuationFactor : 5.0;\n\nfloat lightAttenuation(float dist, float range)\n{\n    float attenuation = 1.0;\n    attenuation = dist*dist/(range*range+1.0);\n    float att_s = attenuationFactor;\n    attenuation = 1.0/(attenuation*att_s+1.0);\n    att_s = 1.0/(att_s+1.0);\n    attenuation = attenuation - att_s;\n    attenuation /= 1.0 - att_s;\n    return clamp(attenuation, 0.0, 1.0);\n}\n\n@end\n\n//http://codeflow.org/entries/2012/aug/02/easy-wireframe-display-with-barycentric-coordinates/\n@export buildin.util.edge_factor\n\nfloat edgeFactor(float width)\n{\n    vec3 d = fwidth(v_Barycentric);\n    vec3 a3 = smoothstep(vec3(0.0), d * width, v_Barycentric);\n    return min(min(a3.x, a3.y), a3.z);\n}\n\n@end\n\n// Pack depth\n// Float value can only be [0.0 - 1.0) ?\n@export buildin.util.encode_float\nvec4 encodeFloat( const in float depth )\n{\n\n    const vec4 bitShifts = vec4( 256.0 * 256.0 * 256.0, 256.0 * 256.0, 256.0, 1.0 );\n\n    const vec4 bit_mask  = vec4( 0.0, 1.0 / 256.0, 1.0 / 256.0, 1.0 / 256.0 );\n    vec4 res = fract( depth * bitShifts );\n    res -= res.xxyz * bit_mask;\n\n    return res;\n}\n@end\n\n@export buildin.util.decode_float\nfloat decodeFloat(const in vec4 colour)\n{\n    const vec4 bitShifts = vec4( 1.0 / ( 256.0 * 256.0 * 256.0 ), 1.0 / ( 256.0 * 256.0 ), 1.0 / 256.0, 1.0 );\n    return dot(colour, bitShifts);\n}\n@end\n\n// http://graphicrants.blogspot.com/2009/04/rgbm-color-encoding.html\n@export buildin.util.rgbm_decode\nvec3 RGBMDecode(vec4 rgbm, float range) {\n  return range * rgbm.rgb * rgbm.a;\n}\n@end\n\n@export buildin.util.rgbm_encode\nvec4 RGBMEncode(vec3 color, float range) {\n    vec4 rgbm;\n    color *= 1.0 / range;\n    rgbm.a = clamp(max(max(color.r, color.g), max(color.b, 1e-6 ) ), 0.0, 1.0);\n    rgbm.a = ceil(rgbm.a * 255.0) / 255.0;\n    rgbm.rgb = color / rgbm.a;\n    return rgbm;\n}\n@end\n\n@export buildin.chunk.skin_matrix\n\n// Weighted Sum Skinning Matrix\nmat4 skinMatrixWS;\nif (joint.x >= 0.0)\n{\n    skinMatrixWS = skinMatrix[int(joint.x)] * weight.x;\n}\nif (joint.y >= 0.0)\n{\n    skinMatrixWS += skinMatrix[int(joint.y)] * weight.y;\n}\nif (joint.z >= 0.0)\n{\n    skinMatrixWS += skinMatrix[int(joint.z)] * weight.z;\n}\nif (joint.w >= 0.0)\n{\n    skinMatrixWS += skinMatrix[int(joint.w)] * (1.0-weight.x-weight.y-weight.z);\n}\n@end\n"}),d("qtek/shader/source/deferred/gbuffer.essl",[],function(){return"@export buildin.deferred.gbuffer.vertex\n\nuniform mat4 worldViewProjection : WORLDVIEWPROJECTION;\nuniform mat4 worldInverseTranspose : WORLDINVERSETRANSPOSE;\nuniform mat4 world : WORLD;\n\nuniform vec2 uvRepeat;\nuniform vec2 uvOffset;\n\nattribute vec3 position : POSITION;\nattribute vec2 texcoord : TEXCOORD_0;\nattribute vec3 normal : NORMAL;\n\n#ifdef SKINNING\nattribute vec3 weight : WEIGHT;\nattribute vec4 joint : JOINT;\n\nuniform mat4 skinMatrix[JOINT_NUMBER] : SKIN_MATRIX;\n#endif\n\nvarying vec2 v_Texcoord;\nvarying vec3 v_Normal;\n\n#ifdef NORMALMAP_ENABLED\nattribute vec4 tangent : TANGENT;\nvarying vec3 v_Tangent;\nvarying vec3 v_Bitangent;\n#endif\n\nvarying vec4 v_ProjPos;\n\nvoid main()\n{\n    \n    vec3 skinnedPosition = position;\n    vec3 skinnedNormal = normal;\n#ifdef NORMALMAP_ENABLED\n    vec3 skinnedTangent = tangent.xyz;\n#endif\n#ifdef SKINNING\n\n    @import buildin.chunk.skin_matrix\n\n    skinnedPosition = (skinMatrixWS * vec4(position, 1.0)).xyz;\n    // Upper skinMatrix \n    skinnedNormal = (skinMatrixWS * vec4(normal, 0.0)).xyz;\n#ifdef NORMALMAP_ENABLED\n    skinnedTangent = (skinMatrixWS * vec4(tangent.xyz, 0.0)).xyz;\n#endif\n#endif\n\n    gl_Position = worldViewProjection * vec4(skinnedPosition, 1.0);\n\n    v_Texcoord = texcoord * uvRepeat + uvOffset;\n\n    v_Normal = normalize((worldInverseTranspose * vec4(skinnedNormal, 0.0)).xyz);\n    \n#ifdef NORMALMAP_ENABLED\n    v_Tangent = normalize((worldInverseTranspose * vec4(skinnedTangent, 0.0)).xyz);\n    v_Bitangent = normalize(cross(v_Normal, v_Tangent) * tangent.w);\n#endif\n\n    v_ProjPos = gl_Position;\n}\n\n\n@end\n\n\n@export buildin.deferred.gbuffer.fragment\n\nuniform sampler2D diffuseMap;\nuniform float glossiness;\n\nvarying vec2 v_Texcoord;\nvarying vec3 v_Normal;\n\n#ifdef NORMALMAP_ENABLED\nuniform sampler2D normalMap;\nvarying vec3 v_Tangent;\nvarying vec3 v_Bitangent;\n#endif\n\nvarying vec4 v_ProjPos;\n\nvoid main()\n{\n    vec3 N = v_Normal;\n#ifdef NORMALMAP_ENABLED\n    N = texture2D(normalMap, v_Texcoord).xyz * 2.0 - 1.0;\n    mat3 tbn = mat3(v_Tangent, v_Bitangent, v_Normal);\n    N = tbn * N;\n#endif\n\n    // N.z can be recovered from sqrt(1 - dot(N.xy, N.xy));\n    gl_FragColor.rg = (N.xy + 1.0) * 0.5;\n\n    // Depth\n    gl_FragColor.b = v_ProjPos.z / v_ProjPos.w;\n\n    gl_FragColor.a = glossiness;\n#ifdef DIFFUSEMAP_ENABLED\n    // Ouptut glossiness to alpha channel\n    gl_FragColor.a *= texture2D(diffuseMap, v_Texcoord).a;\n#endif\n}\n@end"}),d("qtek/shader/source/deferred/chunk.essl",[],function(){return"@export buildin.deferred.chunk.light_head\nuniform sampler2D normalTex;\nuniform vec2 viewportSize;\n\nuniform mat4 viewProjectionInv;\n\nconst vec3 LUM = vec3(0.2125, 0.7154, 0.0721);\n@end\n\n@export buildin.deferred.chunk.gbuffer_read\n    vec2 uv = gl_FragCoord.xy / viewportSize;\n\n    vec4 tex = texture2D(normalTex, uv);\n    // Is empty\n    if (dot(tex.rgb, vec3(1.0)) == 0.0) {\n        discard;\n    }\n\n    vec3 N;\n    N.xy = tex.rg * 2.0 - 1.0;\n    N.z = sqrt(1.0 - dot(N.xy, N.xy));\n\n    // Depth value in depth texture is 0 - 1\n    // float z = texture2D(depthTex, uv).r * 2.0 - 1.0;\n    float z = tex.b;\n\n    float glossiness = tex.a;\n\n    vec2 xy = uv * 2.0 - 1.0;\n\n    vec4 projectedPos = vec4(xy, z, 1.0);\n    vec4 p4 = viewProjectionInv * projectedPos;\n\n    vec3 position = p4.xyz / p4.w;\n@end\n\n@export buildin.deferred.chunk.light_equation\n\nfloat D_Phong(float g, float ndh) {\n    // from black ops 2\n    float a = pow(8192.0, g);\n    return (a + 2.0) / 8.0 * pow(ndh, a);\n}\n\n@end"}),d("qtek/shader/source/deferred/lightvolume.essl",[],function(){return"@export buildin.deferred.light_volume.vertex\n\nuniform mat4 worldViewProjection : WORLDVIEWPROJECTION;\n\nattribute vec3 position : POSITION;\n\nvarying vec3 v_Position;\n\nvoid main()\n{\n    gl_Position = worldViewProjection * vec4(position, 1.0);\n\n    v_Position = position;\n}\n\n@end"}),d("qtek/shader/source/deferred/spot.essl",[],function(){return"@export buildin.deferred.spot_light\n\n@import buildin.deferred.chunk.light_head\n\n@import buildin.deferred.chunk.light_equation\n\n@import buildin.util.calculate_attenuation\n\nuniform vec3 lightPosition;\nuniform vec3 lightDirection;\nuniform vec3 lightColor;\nuniform float umbraAngleCosine;\nuniform float penumbraAngleCosine;\nuniform float lightRange;\nuniform float falloffFactor;\n\nuniform vec3 eyePosition;\n\nvoid main()\n{\n    @import buildin.deferred.chunk.gbuffer_read\n\n    vec3 L = lightPosition - position;\n    vec3 V = normalize(eyePosition - position);\n\n    float dist = length(L);\n    L /= dist;\n\n    float attenuation = lightAttenuation(dist, lightRange);\n    float c = dot(-lightDirection, L);\n\n    float falloff = clamp((c - umbraAngleCosine) / (penumbraAngleCosine - umbraAngleCosine), 0.0, 1.0);\n    falloff = pow(falloff, falloffFactor);\n\n    vec3 H = normalize(L + V);\n    float ndl = clamp(dot(N, L), 0.0, 1.0);\n    float ndh = clamp(dot(N, H), 0.0, 1.0);\n\n    // Diffuse term\n    gl_FragColor.rgb = lightColor * ndl * (1.0 - falloff) * attenuation;\n    if (dot(gl_FragColor.rgb, vec3(1.0)) == 0.0) // Reduce blending\n    {\n        discard;\n    }\n    gl_FragColor.a = dot(LUM, gl_FragColor.rgb * D_Phong(glossiness, ndh));\n}\n@end\n"}),d("qtek/shader/source/deferred/directional.essl",[],function(){return"@export buildin.deferred.directional_light\n\n@import buildin.deferred.chunk.light_head\n\n@import buildin.deferred.chunk.light_equation\n\nuniform vec3 lightDirection;\nuniform vec3 lightColor;\n\nuniform vec3 eyePosition;\n\nvoid main()\n{\n    @import buildin.deferred.chunk.gbuffer_read\n\n    vec3 L = -normalize(lightDirection);\n    vec3 V = normalize(eyePosition - position);\n\n    vec3 H = normalize(L + V);\n    float ndl = clamp(dot(N, L), 0.0, 1.0);\n    float ndh = clamp(dot(N, H), 0.0, 1.0);\n\n    gl_FragColor.rgb = ndl * lightColor;\n    gl_FragColor.a = dot(LUM, gl_FragColor.rgb * D_Phong(glossiness, ndh));\n}\n@end\n"}),d("qtek/shader/source/deferred/ambient.essl",[],function(){return"@export buildin.deferred.ambient_light\nuniform sampler2D normalTexture;\nuniform vec3 lightColor;\n\nvarying vec2 v_Texcoord;\n\nvoid main()\n{\n    vec4 tex = texture2D(normalTexture, v_Texcoord);\n    vec3 normal = tex.rgb * 2.0 - 1.0;\n\n    gl_FragColor.rgb = lightColor * (clamp(normal.y * 0.7, 0.0, 1.0) + 0.3);\n    gl_FragColor.a = 0.0;\n}\n@end"}),d("qtek/shader/source/deferred/point.essl",[],function(){return"@export buildin.deferred.point_light\n\n@import buildin.deferred.chunk.light_head\n\n@import buildin.util.calculate_attenuation\n\n@import buildin.deferred.chunk.light_equation\n\nuniform vec3 lightPosition;\nuniform vec3 lightColor;\nuniform float lightRange;\n\nuniform vec3 eyePosition;\n\nvarying vec3 v_Position;\n\nvoid main()\n{\n    @import buildin.deferred.chunk.gbuffer_read\n\n    vec3 L = lightPosition - position;\n    vec3 V = normalize(eyePosition - position);\n\n    float dist = length(L);\n    L /= dist;\n\n    vec3 H = normalize(L + V);\n\n    float ndl = clamp(dot(N, L), 0.0, 1.0);\n    float ndh = clamp(dot(N, H), 0.0, 1.0);\n    float attenuation = lightAttenuation(dist, lightRange);\n    // Diffuse term\n    gl_FragColor.rgb = lightColor * ndl * attenuation;\n    if (dot(gl_FragColor.rgb, vec3(1.0)) == 0.0) // Reduce blending\n    {\n        discard;\n    }\n    // // Specular luminance\n    gl_FragColor.a = dot(LUM, gl_FragColor.rgb * D_Phong(glossiness, ndh));\n}\n@end"}),d("qtek/shader/source/deferred/sphere.essl",[],function(){return"@export buildin.deferred.sphere_light\n\n@import buildin.deferred.chunk.light_head\n\n@import buildin.util.calculate_attenuation\n\n@import buildin.deferred.chunk.light_equation\n\nuniform vec3 lightPosition;\nuniform vec3 lightColor;\nuniform float lightRange;\nuniform float lightRadius;\n\nuniform vec3 eyePosition;\n\nvarying vec3 v_Position;\n\nvoid main()\n{\n    @import buildin.deferred.chunk.gbuffer_read\n\n    vec3 L = lightPosition - position;\n\n    vec3 V = normalize(eyePosition - position);\n\n    float dist = length(L);\n    // Light pos fix\n    vec3 R = reflect(V, N);\n    float tmp = dot(L, R);\n    vec3 cToR = tmp * R - L;\n    float d = length(cToR);\n    L = L + cToR * clamp(lightRadius / d, 0.0, 1.0);\n\n    L = normalize(L);\n\n    vec3 H = normalize(L + V);\n\n    float ndl = clamp(dot(N, L), 0.0, 1.0);\n    float ndh = clamp(dot(N, H), 0.0, 1.0);\n    float attenuation = lightAttenuation(dist, lightRange);\n    // Diffuse term\n    gl_FragColor.rgb = lightColor * ndl * attenuation;\n    if (dot(gl_FragColor.rgb, vec3(1.0)) == 0.0) // Reduce blending\n    {\n        discard;\n    }\n\n    // Specular fix\n    glossiness = clamp(glossiness - lightRadius / 2.0 / dist, 0.0, 1.0);\n\n    // Specular luminance\n    gl_FragColor.a = dot(LUM, gl_FragColor.rgb * D_Phong(glossiness, ndh));\n}\n@end"}),d("qtek/shader/source/deferred/tube.essl",[],function(){return"@export buildin.deferred.tube_light\n\n@import buildin.deferred.chunk.light_head\n\n@import buildin.util.calculate_attenuation\n\n@import buildin.deferred.chunk.light_equation\n\nuniform vec3 lightPosition;\nuniform vec3 lightColor;\nuniform float lightRange;\nuniform vec3 lightExtend;\n\nuniform vec3 eyePosition;\n\nvarying vec3 v_Position;\n\nvoid main()\n{\n    @import buildin.deferred.chunk.gbuffer_read\n\n    vec3 L = lightPosition - position;\n\n    vec3 V = normalize(eyePosition - position);\n\n    // Light pos and irradiance fix\n    vec3 R = reflect(V, N);\n\n    vec3 L0 = lightPosition - lightExtend - position;\n    vec3 L1 = lightPosition + lightExtend - position;\n    vec3 LD = L1 - L0;\n\n    float len0 = length(L0);\n    float len1 = length(L1);\n    float irra = 2.0 * clamp(dot(N, L0) / (2.0 * len0) + dot(N, L1) / (2.0 * len1), 0.0, 1.0);\n\n    float LDDotR = dot(R, LD);\n    float t = (LDDotR * dot(R, L0) - dot(L0, LD)) / (dot(LD, LD) - LDDotR * LDDotR);\n    t = clamp(t, 0.0, 1.0);\n    L = L0 + t * LD;\n    // FIXME attenuation integration\n    float dist = length(L);\n    L /= dist;\n\n    vec3 H = normalize(L + V);\n\n    float ndh = clamp(dot(N, H), 0.0, 1.0);\n\n    // Diffuse term\n\n    gl_FragColor.rgb = lightColor * irra * lightAttenuation(dist, lightRange);\n    if (dot(gl_FragColor.rgb, vec3(1.0)) == 0.0) // Reduce blending\n    {\n        discard;\n    }\n\n    // Specular fix\n    // glossiness = clamp(glossiness - 0.0 / 2.0 / dist, 0.0, 1.0);\n\n    // Specular luminance\n    gl_FragColor.a = dot(LUM, gl_FragColor.rgb * D_Phong(glossiness, ndh));\n}\n@end"}),d("qtek/shader/source/deferred/output.essl",[],function(){return"@export buildin.deferred.output.vertex\n\nuniform mat4 worldViewProjection : WORLDVIEWPROJECTION;\nuniform mat4 world: WORLD;\nattribute vec3 position : POSITION;\nattribute vec2 texcoord : TEXCOORD_0;\n\nuniform vec2 uvRepeat;\nuniform vec2 uvOffset;\n\n#ifdef SKINNING\nattribute vec3 weight : WEIGHT;\nattribute vec4 joint : JOINT;\n\nuniform mat4 skinMatrix[JOINT_NUMBER] : SKIN_MATRIX;\n#endif\n\nvarying vec2 v_Texcoord;\n\nvarying vec4 v_ProjPos;\n\nvarying vec3 v_WorldPos;\n\nvoid main()\n{\n\n    vec3 skinnedPosition = position;\n\n#ifdef SKINNING\n    \n    @import buildin.chunk.skin_matrix\n\n    skinnedPosition = (skinMatrixWS * vec4(position, 1.0)).xyz;\n#endif\n\n    gl_Position = worldViewProjection * vec4(skinnedPosition, 1.0);\n\n    v_WorldPos = (world * vec4(skinnedPosition, 1.0)).xyz;\n\n    v_ProjPos = gl_Position;\n\n    v_Texcoord = texcoord * uvRepeat + uvOffset;\n}\n@end\n\n@export buildin.deferred.output.fragment\n\nuniform sampler2D diffuseMap;\n\nuniform sampler2D lightAccumTex;\nuniform sampler2D normalTex;\n\nuniform vec3 color;\nuniform vec3 specularColor;\nuniform vec3 emission;\n\nuniform vec3 eyePosition;\n\nvarying vec2 v_Texcoord;\nvarying vec3 v_WorldPos;\nvarying vec4 v_ProjPos;\n\nconst vec3 LUM = vec3(0.2125, 0.7154, 0.0721);\n\n// Fresnel\nvec3 F_Schlick(float ndv, vec3 spec) {\n    return spec + (1.0 - spec) * pow(1.0 - ndv, 5.0);\n}\n\nvoid main()\n{\n    vec2 uv = (v_ProjPos.xy / v_ProjPos.w + 1.0) * 0.5;\n\n    vec3 V = normalize(eyePosition - v_WorldPos);\n\n    vec3 albedo = color;\n#ifdef diffuseMap\n    albedo *= texture2D(diffuseMap, v_Texcoord);\n#endif\n\n    vec4 diffSpec = texture2D(lightAccumTex, uv);\n    vec3 N;\n    vec2 tex = texture2D(normalTex, uv).rg;\n    N.xy = tex * 2.0 - 1.0;\n    N.z = sqrt(1.0 - dot(N.xy, N.xy));\n\n    vec3 diffTerm = diffSpec.rgb;\n    // PENDING\n    vec3 specTerm = diffTerm * diffSpec.a / (dot(LUM, diffTerm) + 0.001);\n    vec3 fresnelTerm = F_Schlick(clamp(dot(N, V), 0.0, 1.0), specularColor);\n\n    gl_FragColor.rgb = albedo * diffTerm + fresnelTerm * specTerm + emission;\n    gl_FragColor.a = 1.0;\n}\n@end\n\n"}),d("qtek/shader/source/prez.essl",[],function(){return"// Shader for prez pass\n@export buildin.prez.vertex\n\nuniform mat4 worldViewProjection : WORLDVIEWPROJECTION;\n\nattribute vec3 position : POSITION;\n\n#ifdef SKINNING\nattribute vec3 weight : WEIGHT;\nattribute vec4 joint : JOINT;\n\nuniform mat4 skinMatrix[JOINT_NUMBER] : SKIN_MATRIX;\n#endif\n\nvoid main()\n{\n\n    vec3 skinnedPosition = position;\n\n#ifdef SKINNING\n    \n    @import buildin.chunk.skin_matrix\n    \n    skinnedPosition = (skinMatrixWS * vec4(position, 1.0)).xyz;\n#endif\n    \n    gl_Position = worldViewProjection * vec4(skinnedPosition, 1.0);\n}\n\n@end\n\n\n@export buildin.prez.fragment\n\nvoid main()\n{\n    gl_FragColor = vec4(0.0, 0.0, 0.0, 1.0);\n}\n\n@end"}),d("qtek/deferred/Renderer",["require","../core/Base","../Shader","./StandardMaterial","../Material","../FrameBuffer","../compositor/Pass","../Texture2D","../Texture","../math/BoundingBox","../Mesh","../geometry/Sphere","../geometry/Cone","../geometry/Cylinder","../math/Matrix4","../math/Vector3","../Renderer","../shader/source/util.essl","../shader/source/deferred/gbuffer.essl","../shader/source/deferred/chunk.essl","../shader/source/deferred/lightvolume.essl","../shader/source/deferred/spot.essl","../shader/source/deferred/directional.essl","../shader/source/deferred/ambient.essl","../shader/source/deferred/point.essl","../shader/source/deferred/sphere.essl","../shader/source/deferred/tube.essl","../shader/source/deferred/output.essl","../shader/source/prez.essl"],function(a){var b=a("../core/Base"),c=a("../Shader"),d=a("./StandardMaterial"),e=a("../Material"),f=a("../FrameBuffer"),g=a("../compositor/Pass"),h=a("../Texture2D"),i=a("../Texture");a("../math/BoundingBox");var j=a("../Mesh"),k=a("../geometry/Sphere"),l=a("../geometry/Cone"),m=a("../geometry/Cylinder"),n=a("../math/Matrix4"),o=a("../math/Vector3"),p=a("../Renderer");c.import(a("../shader/source/util.essl")),c.import(a("../shader/source/deferred/gbuffer.essl")),c.import(a("../shader/source/deferred/chunk.essl")),c.import(a("../shader/source/deferred/lightvolume.essl")),c.import(a("../shader/source/deferred/spot.essl")),c.import(a("../shader/source/deferred/directional.essl")),c.import(a("../shader/source/deferred/ambient.essl")),c.import(a("../shader/source/deferred/point.essl")),c.import(a("../shader/source/deferred/sphere.essl")),c.import(a("../shader/source/deferred/tube.essl")),c.import(a("../shader/source/deferred/output.essl")),c.import(a("../shader/source/prez.essl"));var q={},r=b.derive(function(){var a=new c({vertex:c.source("buildin.deferred.gbuffer.vertex"),fragment:c.source("buildin.deferred.gbuffer.fragment")}),b=a.clone();b.enableTexture("diffuseMap");var d=a.clone();d.enableTexture("normalMap");var j=b.clone();j.enableTexture("normalMap");var p=new c({vertex:c.source("buildin.deferred.output.vertex"),fragment:c.source("buildin.deferred.output.fragment")}),q=p.clone();q.enableTexture("diffuseMap");var r=c.source("buildin.compositor.vertex"),s=c.source("buildin.deferred.light_volume.vertex"),t=function(a){a.blendEquation(a.FUNC_ADD),a.blendFunc(a.ONE,a.ONE)},u=function(a){return new e({shader:a,blend:t,transparent:!0,depthMask:!1})},v=function(a){return new c({vertex:s,fragment:c.source("buildin.deferred."+a)})},w=new l({capSegments:10}),x=new n;x.rotateX(Math.PI/2).translate(new o(0,-1,0)),w.applyTransform(x);var y=new m({capSegments:10});return x.identity().rotateZ(Math.PI/2),y.applyTransform(x),{_gBufferShader:a,_gBufferDiffShader:b,_gBufferDiffNormShader:j,_gBufferNormShader:d,_outputShader:p,_outputDiffShader:q,_gBufferFrameBuffer:new f,_gBufferTex:new h({width:0,height:0,type:i.FLOAT,minFilter:i.NEAREST,magFilter:i.NEAREST}),_lightAccumFrameBuffer:new f,_lightAccumTex:new h({type:i.FLOAT,minFilter:i.NEAREST,magFilter:i.NEAREST}),_fullQuadPass:new g,_directionalLightMat:u(new c({vertex:r,fragment:c.source("buildin.deferred.directional_light")})),_ambientMat:u(new c({vertex:r,fragment:c.source("buildin.deferred.ambient_light")})),_spotLightShader:v("spot_light"),_pointLightShader:v("point_light"),_sphereLightShader:v("sphere_light"),_tubeLightShader:v("tube_light"),_createLightPassMat:u,_lightSphereGeo:new k({widthSegments:10,heightSegements:10}),_lightConeGeo:w,_lightCylinderGeo:y}},{render:function(a,b,c){var d=a.gl;b.update(!1,!0),c.update(!0);var e=b.opaqueQueue;e.sort(p.opaqueSortFunc);for(var f=0;f<e.length;f++)this._replaceGBufferMaterial(e[f]);var g=a.getWidth(),h=a.getHeight(),i=this._gBufferFrameBuffer,j=this._gBufferTex,k=this._lightAccumTex;(g!==j.width||h!==j.height)&&(j.width=g,j.height=h,k.width=g,k.height=h,j.dirty(),k.dirty()),i.attach(d,j),i.bind(a),d.clearColor(0,0,0,0),d.clear(d.COLOR_BUFFER_BIT|d.DEPTH_BUFFER_BIT),d.disable(d.BLEND),a.renderQueue(e,c),i.unbind(a),this._accumulateLightBuffer(a,b,c);for(var l=c.getWorldPosition()._array,f=0;f<e.length;f++)this._swapOutputMaterial(e[f],l);if(a.clear){var m=a.color;d.clearColor(m[0],m[1],m[2],m[3]),d.clear(a.clear)}d.disable(d.BLEND),a.renderQueue(e,c);for(var f=0;f<e.length;f++)e[f].material=e[f].__standardMat},_accumulateLightBuffer:function(a,b,c){var d=a.gl,e=this._lightAccumTex,f=this._lightAccumFrameBuffer;this._lightVolumeMeshList;var g=c.getWorldPosition()._array;f.attach(d,e),f.bind(a),d.clearColor(0,0,0,0),d.clear(d.COLOR_BUFFER_BIT),d.enable(d.BLEND);var h=new n;n.multiply(h,c.worldTransform,c.invProjectionMatrix);for(var i=[e.width,e.height],j=[],k=0;k<b.lights.length;k++){var l=b.lights[k],m=l.uniformTemplates;this._updateLightProxy(l);var o=l.volumeMesh||l.__volumeMesh;if(o){var p=o.material;switch(o.castShadow=!1,p.setUniform("eyePosition",g),p.setUniform("viewportSize",i),p.setUniform("viewProjectionInv",h._array),p.setUniform("normalTex",this._gBufferTex),l.type){case"POINT_LIGHT":p.setUniform("lightColor",m.pointLightColor.value(l)),p.setUniform("lightRange",m.pointLightRange.value(l)),p.setUniform("lightPosition",m.pointLightPosition.value(l));break;case"SPOT_LIGHT":p.setUniform("lightPosition",m.spotLightPosition.value(l)),p.setUniform("lightColor",m.spotLightColor.value(l)),p.setUniform("lightRange",m.spotLightRange.value(l)),p.setUniform("lightDirection",m.spotLightDirection.value(l)),p.setUniform("umbraAngleCosine",m.spotLightUmbraAngleCosine.value(l)),p.setUniform("penumbraAngleCosine",m.spotLightPenumbraAngleCosine.value(l)),p.setUniform("falloffFactor",m.spotLightFalloffFactor.value(l));break;case"SPHERE_LIGHT":p.setUniform("lightColor",m.sphereLightColor.value(l)),p.setUniform("lightRange",m.sphereLightRange.value(l)),p.setUniform("lightRadius",m.sphereLightRadius.value(l)),p.setUniform("lightPosition",m.sphereLightPosition.value(l));break;case"TUBE_LIGHT":p.setUniform("lightColor",m.tubeLightColor.value(l)),p.setUniform("lightRange",m.tubeLightRange.value(l)),p.setUniform("lightExtend",m.tubeLightExtend.value(l)),p.setUniform("lightPosition",m.tubeLightPosition.value(l))}j.push(o)}else{var q=this._fullQuadPass;switch(l.type){case"AMBIENT_LIGHT":q.material=this._ambientMat,q.material.set("lightColor",m.ambientLightColor.value(l));break;case"DIRECTIONAL_LIGHT":q.material=this._directionalLightMat,q.material.set("lightColor",m.directionalLightColor.value(l)),q.material.set("lightDirection",m.directionalLightDirection.value(l))}q.material.set("eyePosition",g),q.material.set("viewportSize",i),q.material.set("viewProjectionInv",h._array),q.material.set("normalTex",this._gBufferTex),q.renderQuad(a)}}this._renderVolumeMeshList(a,c,j),f.unbind(a)},_updateLightProxy:function(a){var b;if(a.volumeMesh)b=a.volumeMesh;else switch(a.type){case"POINT_LIGHT":case"SPHERE_LIGHT":var c="SPHERE_LIGHT"===a.type?this._sphereLightShader:this._pointLightShader;a.__volumeMesh=a.__volumeMesh||new j({material:this._createLightPassMat(c),geometry:this._lightSphereGeo,culling:!1}),b=a.__volumeMesh;var d=a.range+(a.radius||0);b.scale.set(d,d,d);break;case"SPOT_LIGHT":a.__volumeMesh=a.__volumeMesh||new j({material:this._createLightPassMat(this._spotLightShader),geometry:this._lightConeGeo,culling:!1}),b=a.__volumeMesh;var e=Math.tan(a.penumbraAngle*Math.PI/180),f=a.range;b.scale.set(e*f,e*f,f/2);break;case"TUBE_LIGHT":a.__volumeMesh=a.__volumeMesh||new j({material:this._createLightPassMat(this._tubeLightShader),geometry:this._lightCylinderGeo,culling:!1}),b=a.__volumeMesh;var f=a.range;b.scale.set(a.length/2+f,f,f)}b&&(b.update(),n.multiply(b.worldTransform,a.worldTransform,b.worldTransform))},_renderVolumeMeshList:function(){var a=new n,b=new n,d=new e({shader:new c({vertex:c.source("buildin.prez.vertex"),fragment:c.source("buildin.prez.fragment")})});return function(c,e,f){var g=c.gl;g.clear(g.DEPTH_BUFFER_BIT),g.enable(g.DEPTH_TEST),g.disable(g.CULL_FACE),g.blendEquation(g.FUNC_ADD),g.blendFuncSeparate(g.ONE,g.ONE,g.ONE,g.ONE),g.depthFunc(g.LEQUAL);for(var h=0;h<f.length;h++){var i=f[h];if(n.multiply(b,e.viewMatrix,i.worldTransform),!c.isFrustumCulled(i,e,b._array,e.projectionMatrix._array)){g.colorMask(!1,!1,!1,!1),g.depthMask(!0),g.clear(g.DEPTH_BUFFER_BIT),n.multiply(a,e.projectionMatrix,b);var j=d.shader;this._bindShader(c,j);var k=j.matrixSemantics.WORLDVIEWPROJECTION;j.setUniform(g,k.type,k.symbol,a._array),i.render(g,d),g.colorMask(!0,!0,!0,!0),g.depthMask(!1);var l=i.material.shader;this._bindShader(c,l);var k=l.matrixSemantics.WORLDVIEWPROJECTION;l.setUniform(g,k.type,k.symbol,a._array),i.material.bind(g),i.render(g)}}g.depthFunc(g.LESS)}}(),_bindShader:function(a,b){var c=b.bind(a.gl);if(c){if(q[b.__GUID__])return;if(q[b.__GUID__]=!0,a.throwError)throw new Error(c);a.trigger("error",c)}},_replaceGBufferMaterial:function(a){if(a.material instanceof d){var b=a.material;a.__standardMat=b;var c=b.diffuseMap&&"glossiness"===b.diffuseAlphaUsage;a.__gBufferMat=a.__gBufferMat||new e;var f=a.__gBufferMat;b.normalMap?(c?(f.shader!==this._gBufferDiffNormShader&&f.attachShader(this._gBufferDiffNormShader,!0),f.setUniform("diffuseMap",b.diffuseMap)):f.shader!==this._gBufferNormShader&&f.attachShader(this._gBufferNormShader,!0),f.setUniform("normalMap",b.normalMap)):c?(f.shader!==this._gBufferDiffShader&&f.attachShader(this._gBufferDiffShader,!0),f.setUniform("diffuseMap",b.diffuseMap)):f.shader!==this._gBufferShader&&f.attachShader(this._gBufferShader,!0),f.set("uvOffset",b.uvOffset),f.set("uvRepeat",b.uvRepeat),f.setUniform("glossiness",b.glossiness),a.material=f}else console.warn("Deferred renderer only support StandardMaterial")},_swapOutputMaterial:function(a,b){if(a.__standardMat){var c=a.__standardMat;a.__deferredOutputMat=a.__deferredOutputMat||new e;var d=a.__deferredOutputMat;c.diffuseMap?(d.shader!==this._outputDiffShader&&d.attachShader(this._outputDiffShader,!0),d.setUniform("diffuseMap",c.diffuseMap)):d.shader!==this._outputShader&&d.attachShader(this._outputShader,!0),d.set("eyePosition",b),d.set("color",c.color),d.set("emission",c.emission),d.set("specularColor",c.specularColor),d.set("uvRepeat",c.uvRepeat),d.set("uvOffset",c.uvOffset),d.set("specularColor",c.specularColor),d.set("lightAccumTex",this._lightAccumTex),d.set("normalTex",this._gBufferTex),a.material=d}}});return r}),d("qtek/geometry/Cube",["require","../DynamicGeometry","./Plane","../math/Matrix4","../math/Vector3","../math/BoundingBox"],function(a){function b(a,b,c){h.identity();var g=new d({widthSegments:b,heightSegments:c});switch(a){case"px":e.translate(h,h,f.POSITIVE_X),e.rotateY(h,h,Math.PI/2);break;case"nx":e.translate(h,h,f.NEGATIVE_X),e.rotateY(h,h,-Math.PI/2);break;case"py":e.translate(h,h,f.POSITIVE_Y),e.rotateX(h,h,-Math.PI/2);break;case"ny":e.translate(h,h,f.NEGATIVE_Y),e.rotateX(h,h,Math.PI/2);break;case"pz":e.translate(h,h,f.POSITIVE_Z);break;case"nz":e.translate(h,h,f.NEGATIVE_Z),e.rotateY(h,h,Math.PI)}return g.applyTransform(h),g}var c=a("../DynamicGeometry"),d=a("./Plane"),e=a("../math/Matrix4"),f=a("../math/Vector3"),g=a("../math/BoundingBox"),h=new e,i=c.derive({widthSegments:1,heightSegments:1,depthSegments:1,inside:!1},function(){this.build()},{build:function(){this.faces.length=0,this.attributes.position.value.length=0,this.attributes.texcoord0.value.length=0,this.attributes.normal.value.length=0;var a={px:b("px",this.depthSegments,this.heightSegments),nx:b("nx",this.depthSegments,this.heightSegments),py:b("py",this.widthSegments,this.depthSegments),ny:b("ny",this.widthSegments,this.depthSegments),pz:b("pz",this.widthSegments,this.heightSegments),nz:b("nz",this.widthSegments,this.heightSegments)},c=0,d=["position","texcoord0","normal"];for(var e in a){for(var f=0;f<d.length;f++)for(var h=d[f],i=a[e].attributes[h].value,j=0;j<i.length;j++){var k=i[j];this.inside&&"normal"===h&&(k[0]=-k[0],k[1]=-k[1],k[2]=-k[2]),this.attributes[h].value.push(k)}for(var l=a[e],j=0;j<l.faces.length;j++){var m=l.faces[j];this.faces.push([m[0]+c,m[1]+c,m[2]+c])}c+=a[e].getVertexNumber()}this.boundingBox=new g,this.boundingBox.max.set(1,1,1),this.boundingBox.min.set(-1,-1,-1)}});return i}),d("qtek/light/Ambient",["require","../Light"],function(a){var b=a("../Light"),c=b.derive({castShadow:!1},{type:"AMBIENT_LIGHT",uniformTemplates:{ambientLightColor:{type:"3f",value:function(a){var b=a.color,c=a.intensity;return[b[0]*c,b[1]*c,b[2]*c]}}}});return c}),d("qtek/light/Directional",["require","../Light","../math/Vector3"],function(a){var b=a("../Light"),c=a("../math/Vector3"),d=b.derive({shadowBias:2e-4,shadowSlopeScale:2},{type:"DIRECTIONAL_LIGHT",uniformTemplates:{directionalLightDirection:{type:"3f",value:function(){var a=new c;return function(b){return a.copy(b.worldTransform.z).negate()._array}}()},directionalLightColor:{type:"3f",value:function(a){var b=a.color,c=a.intensity;return[b[0]*c,b[1]*c,b[2]*c]}}},clone:function(){var a=b.prototype.clone.call(this);return a.shadowBias=this.shadowBias,a.shadowSlopeScale=this.shadowSlopeScale,a}});return d}),d("qtek/light/Point",["require","../Light"],function(a){var b=a("../Light"),c=b.derive({range:100,castShadow:!1},{type:"POINT_LIGHT",uniformTemplates:{pointLightPosition:{type:"3f",value:function(a){return a.getWorldPosition()._array}},pointLightRange:{type:"1f",value:function(a){return a.range}},pointLightColor:{type:"3f",value:function(a){var b=a.color,c=a.intensity;return[b[0]*c,b[1]*c,b[2]*c]}}},clone:function(){var a=b.prototype.clone.call(this);return a.range=this.range,a}});return c}),d("qtek/light/Sphere",["require","../Light"],function(a){var b=a("../Light"),c=b.derive({range:100,radius:5},{type:"SPHERE_LIGHT",uniformTemplates:{sphereLightPosition:{type:"3f",value:function(a){return a.getWorldPosition()._array}},sphereLightRange:{type:"1f",value:function(a){return a.range}},sphereLightRadius:{type:"1f",value:function(a){return a.radius}},sphereLightColor:{type:"3f",value:function(a){var b=a.color,c=a.intensity;return[b[0]*c,b[1]*c,b[2]*c]}}}});return c}),d("qtek/light/Spot",["require","../Light","../math/Vector3"],function(a){var b=a("../Light"),c=a("../math/Vector3"),d=b.derive({range:20,umbraAngle:30,penumbraAngle:45,falloffFactor:2,shadowBias:2e-4,shadowSlopeScale:2},{type:"SPOT_LIGHT",uniformTemplates:{spotLightPosition:{type:"3f",value:function(a){return a.getWorldPosition()._array}},spotLightRange:{type:"1f",value:function(a){return a.range}},spotLightUmbraAngleCosine:{type:"1f",value:function(a){return Math.cos(a.umbraAngle*Math.PI/180)}},spotLightPenumbraAngleCosine:{type:"1f",value:function(a){return Math.cos(a.penumbraAngle*Math.PI/180)}},spotLightFalloffFactor:{type:"1f",value:function(a){return a.falloffFactor}},spotLightDirection:{type:"3f",value:function(){var a=new c;return function(b){return a.copy(b.worldTransform.z).negate()._array}}()},spotLightColor:{type:"3f",value:function(a){var b=a.color,c=a.intensity;return[b[0]*c,b[1]*c,b[2]*c]}}},clone:function(){var a=b.prototype.clone.call(this);return a.range=this.range,a.umbraAngle=this.umbraAngle,a.penumbraAngle=this.penumbraAngle,a.falloffFactor=this.falloffFactor,a.shadowBias=this.shadowBias,a.shadowSlopeScale=this.shadowSlopeScale,a}});return d}),d("qtek/light/Tube",["require","../Light","../math/Vector3"],function(a){var b=a("../Light"),c=a("../math/Vector3"),d=b.derive({range:100,length:10},{type:"TUBE_LIGHT",uniformTemplates:{tubeLightPosition:{type:"3f",value:function(a){return a.getWorldPosition()._array}},tubeLightExtend:{type:"3f",value:function(){var a=new c;return function(b){return a.copy(b.worldTransform.x).normalize().scale(b.length/2)._array}}()},tubeLightRange:{type:"1f",value:function(a){return a.range}},tubeLightColor:{type:"3f",value:function(a){var b=a.color,c=a.intensity;return[b[0]*c,b[1]*c,b[2]*c]}}}});return d}),d("qtek/loader/FX",["require","../core/Base","../core/request","../core/util","../compositor/Compositor","../compositor/Node","../Shader","../Texture","../Texture2D","../TextureCube"],function(a){function b(a,b){return b=parseFloat(b),function(c){this.setParameter(a,e(b,c))
}}function c(a,b){return b=parseFloat(b),function(c){this.setParameter(a,e(b,c))}}function d(a,b){return b[0]=parseFloat(b[0]),b[1]=parseFloat(b[1]),function(c){this.setParameter(a,[e(b[0],c),f(b[0],c)])}}function e(a,b){return a/100*b.getWidth()}function f(a,b){return a/100*b.getHeight()}var g=a("../core/Base"),h=a("../core/request"),i=a("../core/util"),j=a("../compositor/Compositor"),k=a("../compositor/Node"),l=a("../Shader"),m=a("../Texture"),n=a("../Texture2D"),o=a("../TextureCube"),p=/#source\((.*?)\)/,q=/#url\((.*?)\)/,r=g.derive({rootPath:"",textureRootPath:"",shaderRootPath:""},{load:function(a){var b=this;this.rootPath||(this.rootPath=a.slice(0,a.lastIndexOf("/"))),h.get({url:a,onprogress:function(a,c,d){b.trigger("progress",a,c,d)},onerror:function(a){b.trigger("error",a)},responseType:"text",onload:function(a){b.parse(JSON.parse(a))}})},parse:function(a){var b=this,c=new j,d={textures:{},shaders:{},parameters:{}},e=function(){for(var e=0;e<a.nodes.length;e++){var f=a.nodes[e],g=b._createNode(f,d);g&&c.addNode(g),f.output&&c.addOutput(g)}b.trigger("success",c)};for(var f in a.parameters){var g=a.parameters[f];d.parameters[f]=this._convertParameter(g)}return this._loadShaders(a,function(c){b._loadTextures(a,d,function(a){d.textures=a,d.shaders=c,e()})}),c},_createNode:function(a,e){if(a.shader){var f,g,h,i=a.type||"filter";if("filter"===i){var j=a.shader.trim(),m=p.exec(j);if(m?f=l.source(m[1].trim()):"#"===j.charAt(0)&&(f=e.shaders[j.substr(1)]),f||(f=j),!f)return}if(a.inputs){g={};for(var n in a.inputs)g[n]={node:a.inputs[n].node,pin:a.inputs[n].pin}}if(a.outputs){h={};for(var n in a.outputs){var o=a.outputs[n];if(h[n]={},void 0!==o.attachment&&(h[n].attachment=o.attachment),void 0!==o.keepLastFrame&&(h[n].keepLastFrame=o.keepLastFrame),void 0!==o.outputLastFrame&&(h[n].outputLastFrame=o.outputLastFrame),"string"==typeof o.parameters){var q=o.parameters;"#"===q.charAt(0)&&(h[n].parameters=e.parameters[q.substr(1)])}else o.parameters&&(h[n].parameters=this._convertParameter(o.parameters))}}var r;if("filter"===i&&(r=new k({name:a.name,shader:f,inputs:g,outputs:h})),r){if(a.parameters)for(var n in a.parameters){var s=a.parameters[n];if("string"==typeof s)if(s=s.trim(),"#"===s.charAt(0))s=e.textures[s.substr(1)];else{if(s.match(/%width$/)){r.on("beforerender",b(n,s));continue}if(s.match(/%height$/)){r.on("beforerender",c(n,s));continue}}else if(s instanceof Array&&"string"==typeof s[0]&&"string"==typeof s[1]&&s[0].match(/%width$/)&&s[1].match(/%height$/)){r.on("beforerender",d(n,s));continue}r.setParameter(n,s)}if(a.defines)for(var n in a.defines){var s=a.defines[n];r.pass.material.shader.define("fragment",n,s)}}return r}},_convertParameter:function(a){var b={};return a?(["type","minFilter","magFilter","wrapS","wrapT"].forEach(function(c){var d=a[c];void 0!==d&&("string"==typeof d&&(d=m[d]),b[c]=d)}),["width","height"].forEach(function(c){if(void 0!==a[c]){var d=a[c];"string"==typeof d?(d=d.trim(),d.match(/%width$/)?b[c]=e.bind(null,parseFloat(d)):d.match(/%height$/)&&(b[c]=f.bind(null,parseFloat(d)))):b[c]=d}}),void 0!==a.useMipmap&&(b.useMipmap=a.useMipmap),b):b},_loadShaders:function(a,b){if(!a.shaders)return b({}),void 0;var c={},d=0,e=!1,f=this.shaderRootPath||this.rootPath;i.each(a.shaders,function(a,g){var j=q.exec(a);if(j){var k=j[1];k=i.relative2absolute(k,f),d++,h.get({url:k,onload:function(a){c[g]=a,l["import"](a),d--,0===d&&(b(c),e=!0)}})}else c[g]=a,l["import"](a)},this),0!==d||e||b(c)},_loadTextures:function(a,b,c){if(!a.textures)return c({}),void 0;var d={},e=0,f=!1,g=this.textureRootPath||this.rootPath;i.each(a.textures,function(a,b){var h,j=a.path,k=this._convertParameter(a.parameters);if(j instanceof Array&&6===j.length)j=j.map(function(a){return i.relative2absolute(a,g)}),h=new o(k);else{if("string"!=typeof j)return;j=i.relative2absolute(j,g),h=new n(k)}h.load(j),e++,h.once("success",function(){d[b]=h,e--,0===e&&(c(d),f=!0)})},this),0!==e||f||c(d)}});return r}),d("qtek/shader/source/basic.essl",[],function(){return"@export buildin.basic.vertex\n\nuniform mat4 worldViewProjection : WORLDVIEWPROJECTION;\n\nuniform vec2 uvRepeat : [1.0, 1.0];\nuniform vec2 uvOffset : [0.0, 0.0];\n\nattribute vec2 texcoord : TEXCOORD_0;\nattribute vec3 position : POSITION;\n\nattribute vec3 barycentric;\n\n#ifdef SKINNING\nattribute vec3 weight : WEIGHT;\nattribute vec4 joint : JOINT;\n\nuniform mat4 skinMatrix[JOINT_NUMBER] : SKIN_MATRIX;\n#endif\n\nvarying vec2 v_Texcoord;\nvarying vec3 v_Barycentric;\n\nvoid main()\n{\n    vec3 skinnedPosition = position;\n\n#ifdef SKINNING\n    @import buildin.chunk.skin_matrix\n    \n    skinnedPosition = (skinMatrixWS * vec4(position, 1.0)).xyz;\n#endif\n\n    v_Texcoord = texcoord * uvRepeat + uvOffset;\n    v_Barycentric = barycentric;\n\n    gl_Position = worldViewProjection * vec4(skinnedPosition, 1.0);\n}\n\n@end\n\n\n\n\n@export buildin.basic.fragment\n\nvarying vec2 v_Texcoord;\nuniform sampler2D diffuseMap;\nuniform vec3 color : [1.0, 1.0, 1.0];\nuniform vec3 emission : [0.0, 0.0, 0.0];\nuniform float alpha : 1.0;\n\n// Uniforms for wireframe\nuniform float lineWidth : 0.0;\nuniform vec3 lineColor : [0.0, 0.0, 0.0];\nvarying vec3 v_Barycentric;\n\n#extension GL_OES_standard_derivatives : enable\n@import buildin.util.edge_factor\n\nvoid main()\n{\n\n#ifdef RENDER_TEXCOORD\n    gl_FragColor = vec4(v_Texcoord, 1.0, 1.0);\n    return;\n#endif\n\n    gl_FragColor = vec4(color, alpha);\n    \n#ifdef DIFFUSEMAP_ENABLED\n    vec4 tex = texture2D( diffuseMap, v_Texcoord );\n\n#ifdef SRGB_DECODE\n    tex.rgb = pow(tex.rgb, vec3(2.2));\n#endif\n    \n#if defined(DIFFUSEMAP_ALPHA_ALPHA)\n    gl_FragColor.a = tex.a;\n#endif\n\n    gl_FragColor.rgb *= tex.rgb;\n#endif\n\n    gl_FragColor.rgb += emission;\n    if( lineWidth > 0.01)\n    {\n        gl_FragColor.rgb = gl_FragColor.rgb * mix(lineColor, vec3(1.0), edgeFactor(lineWidth));\n    }\n}\n\n@end"}),d("qtek/shader/source/lambert.essl",[],function(){return"/**\n * http://en.wikipedia.org/wiki/Lambertian_reflectance\n */\n\n@export buildin.lambert.vertex\n\nuniform mat4 worldViewProjection : WORLDVIEWPROJECTION;\nuniform mat4 worldInverseTranspose : WORLDINVERSETRANSPOSE;\nuniform mat4 world : WORLD;\n\nuniform vec2 uvRepeat : [1.0, 1.0];\nuniform vec2 uvOffset : [0.0, 0.0];\n\nattribute vec3 position : POSITION;\nattribute vec2 texcoord : TEXCOORD_0;\nattribute vec3 normal : NORMAL;\n\nattribute vec3 barycentric;\n\n#ifdef SKINNING\nattribute vec3 weight : WEIGHT;\nattribute vec4 joint : JOINT;\n\nuniform mat4 skinMatrix[JOINT_NUMBER] : SKIN_MATRIX;\n#endif\n\nvarying vec2 v_Texcoord;\nvarying vec3 v_Normal;\nvarying vec3 v_WorldPosition;\nvarying vec3 v_Barycentric;\n\nvoid main()\n{\n\n    vec3 skinnedPosition = position;\n    vec3 skinnedNormal = normal;\n\n#ifdef SKINNING\n    \n    @import buildin.chunk.skin_matrix\n\n    skinnedPosition = (skinMatrixWS * vec4(position, 1.0)).xyz;\n    // Upper 3x3 of skinMatrix is orthogonal\n    skinnedNormal = (skinMatrixWS * vec4(normal, 0.0)).xyz;\n#endif\n\n    gl_Position = worldViewProjection * vec4( skinnedPosition, 1.0 );\n\n    v_Texcoord = texcoord * uvRepeat + uvOffset;\n    v_Normal = normalize( ( worldInverseTranspose * vec4(skinnedNormal, 0.0) ).xyz );\n    v_WorldPosition = ( world * vec4( skinnedPosition, 1.0) ).xyz;\n\n    v_Barycentric = barycentric;\n}\n\n@end\n\n\n@export buildin.lambert.fragment\n\nvarying vec2 v_Texcoord;\nvarying vec3 v_Normal;\nvarying vec3 v_WorldPosition;\n\nuniform sampler2D diffuseMap;\nuniform sampler2D alphaMap;\n\nuniform vec3 color : [1.0, 1.0, 1.0];\nuniform vec3 emission : [0.0, 0.0, 0.0];\nuniform float alpha : 1.0;\n\n// Uniforms for wireframe\nuniform float lineWidth : 0.0;\nuniform vec3 lineColor : [0.0, 0.0, 0.0];\nvarying vec3 v_Barycentric;\n\n#ifdef AMBIENT_LIGHT_NUMBER\n@import buildin.header.ambient_light\n#endif\n#ifdef POINT_LIGHT_NUMBER\n@import buildin.header.point_light\n#endif\n#ifdef DIRECTIONAL_LIGHT_NUMBER\n@import buildin.header.directional_light\n#endif\n#ifdef SPOT_LIGHT_NUMBER\n@import buildin.header.spot_light\n#endif\n\n#extension GL_OES_standard_derivatives : enable\n// Import util functions and uniforms needed\n@import buildin.util.calculate_attenuation\n\n@import buildin.util.edge_factor\n\n@import buildin.plugin.compute_shadow_map\n\nvoid main()\n{\n#ifdef RENDER_NORMAL\n    gl_FragColor = vec4(v_Normal, 1.0);\n    return;\n#endif\n#ifdef RENDER_TEXCOORD\n    gl_FragColor = vec4(v_Texcoord, 1.0, 1.0);\n    return;\n#endif\n\n    gl_FragColor = vec4(color, alpha);\n\n#ifdef DIFFUSEMAP_ENABLED\n    vec4 tex = texture2D( diffuseMap, v_Texcoord );\n#ifdef SRGB_DECODE\n    tex.rgb = pow(tex.rgb, vec3(2.2));\n#endif\n    gl_FragColor.rgb *= tex.rgb;\n#ifdef DIFFUSEMAP_ALPHA_ALPHA\n    gl_FragColor.a *= tex.a;\n#endif\n#endif\n\n    vec3 diffuseColor = vec3(0.0, 0.0, 0.0);\n    \n#ifdef AMBIENT_LIGHT_NUMBER\n    for(int i = 0; i < AMBIENT_LIGHT_NUMBER; i++)\n    {\n        diffuseColor += ambientLightColor[i];\n    }\n#endif\n// Compute point light color\n#ifdef POINT_LIGHT_NUMBER\n#if defined(POINT_LIGHT_SHADOWMAP_NUMBER)\n    float shadowContribsPoint[POINT_LIGHT_NUMBER];\n    if( shadowEnabled )\n    {\n        computeShadowOfPointLights(v_WorldPosition, shadowContribsPoint);\n    }\n#endif\n    for(int i = 0; i < POINT_LIGHT_NUMBER; i++)\n    {\n\n        vec3 lightPosition = pointLightPosition[i];\n        vec3 lightColor = pointLightColor[i];\n        float range = pointLightRange[i];\n\n        vec3 lightDirection = lightPosition - v_WorldPosition;\n\n        // Calculate point light attenuation\n        float dist = length(lightDirection);\n        float attenuation = lightAttenuation(dist, range);\n\n        // Normalize vectors\n        lightDirection /= dist;\n\n        float ndl = dot( v_Normal, lightDirection );\n\n        float shadowContrib = 1.0;\n#if defined(POINT_LIGHT_SHADOWMAP_NUMBER)\n        if( shadowEnabled )\n        {\n            shadowContrib = shadowContribsPoint[i];\n        }\n#endif\n\n        diffuseColor += lightColor * clamp(ndl, 0.0, 1.0) * attenuation * shadowContrib;\n    }\n#endif\n#ifdef DIRECTIONAL_LIGHT_NUMBER\n#if defined(DIRECTIONAL_LIGHT_SHADOWMAP_NUMBER)\n    float shadowContribsDir[DIRECTIONAL_LIGHT_NUMBER];\n    if(shadowEnabled)\n    {\n        computeShadowOfDirectionalLights(v_WorldPosition, shadowContribsDir);\n    }\n#endif\n    for(int i = 0; i < DIRECTIONAL_LIGHT_NUMBER; i++)\n    {\n        vec3 lightDirection = -directionalLightDirection[i];\n        vec3 lightColor = directionalLightColor[i];\n        \n        float ndl = dot(v_Normal, normalize(lightDirection));\n\n        float shadowContrib = 1.0;\n#if defined(DIRECTIONAL_LIGHT_SHADOWMAP_NUMBER)\n        if( shadowEnabled )\n        {\n            shadowContrib = shadowContribsDir[i];\n        }\n#endif\n\n        diffuseColor += lightColor * clamp(ndl, 0.0, 1.0) * shadowContrib;\n    }\n#endif\n    \n#ifdef SPOT_LIGHT_NUMBER\n#if defined(SPOT_LIGHT_SHADOWMAP_NUMBER)\n    float shadowContribsSpot[SPOT_LIGHT_NUMBER];\n    if(shadowEnabled)\n    {\n        computeShadowOfSpotLights(v_WorldPosition, shadowContribsSpot);\n    }\n#endif\n    for(int i = 0; i < SPOT_LIGHT_NUMBER; i++)\n    {\n        vec3 lightPosition = -spotLightPosition[i];\n        vec3 spotLightDirection = -normalize( spotLightDirection[i] );\n        vec3 lightColor = spotLightColor[i];\n        float range = spotLightRange[i];\n        float a = spotLightUmbraAngleCosine[i];\n        float b = spotLightPenumbraAngleCosine[i];\n        float falloffFactor = spotLightFalloffFactor[i];\n\n        vec3 lightDirection = lightPosition - v_WorldPosition;\n        // Calculate attenuation\n        float dist = length(lightDirection);\n        float attenuation = lightAttenuation(dist, range); \n\n        // Normalize light direction\n        lightDirection /= dist;\n        // Calculate spot light fall off\n        float c = dot(spotLightDirection, lightDirection);\n\n        float falloff;\n        falloff = clamp((c - a) /( b - a), 0.0, 1.0);\n        falloff = pow(falloff, falloffFactor);\n\n        float ndl = dot(v_Normal, lightDirection);\n        ndl = clamp(ndl, 0.0, 1.0);\n\n        float shadowContrib = 1.0;\n#if defined(SPOT_LIGHT_SHADOWMAP_NUMBER)\n        if( shadowEnabled )\n        {\n            shadowContrib = shadowContribsSpot[i];\n        }\n#endif\n        diffuseColor += lightColor * ndl * attenuation * (1.0-falloff) * shadowContrib;\n    }\n#endif\n\n    gl_FragColor.rgb *= diffuseColor;\n    gl_FragColor.rgb += emission;\n    if(lineWidth > 0.01)\n    {\n        gl_FragColor.rgb = gl_FragColor.rgb * mix(lineColor, vec3(1.0), edgeFactor(lineWidth));\n    }\n}\n\n@end"}),d("qtek/shader/source/phong.essl",[],function(){return"\n// http://en.wikipedia.org/wiki/Blinn%E2%80%93Phong_shading_model\n\n@export buildin.phong.vertex\n\nuniform mat4 worldViewProjection : WORLDVIEWPROJECTION;\nuniform mat4 worldInverseTranspose : WORLDINVERSETRANSPOSE;\nuniform mat4 world : WORLD;\n\nuniform vec2 uvRepeat : [1.0, 1.0];\nuniform vec2 uvOffset : [0.0, 0.0];\n\nattribute vec3 position : POSITION;\nattribute vec2 texcoord : TEXCOORD_0;\nattribute vec3 normal : NORMAL;\nattribute vec4 tangent : TANGENT;\n\n#ifdef VERTEX_COLOR\nattribute vec4 color : COLOR;\n#endif\n\nattribute vec3 barycentric;\n\n#ifdef SKINNING\nattribute vec3 weight : WEIGHT;\nattribute vec4 joint : JOINT;\n\nuniform mat4 skinMatrix[JOINT_NUMBER] : SKIN_MATRIX;\n#endif\n\nvarying vec2 v_Texcoord;\nvarying vec3 v_Normal;\nvarying vec3 v_WorldPosition;\nvarying vec3 v_Barycentric;\n\n#ifdef NORMALMAP_ENABLED\nvarying vec3 v_Tangent;\nvarying vec3 v_Bitangent;\n#endif\n\n#ifdef VERTEX_COLOR\nvarying vec4 v_Color;\n#endif\n\nvoid main()\n{\n    \n    vec3 skinnedPosition = position;\n    vec3 skinnedNormal = normal;\n    vec3 skinnedTangent = tangent.xyz;\n#ifdef SKINNING\n    \n    @import buildin.chunk.skin_matrix\n\n    skinnedPosition = (skinMatrixWS * vec4(position, 1.0)).xyz;\n    // Upper 3x3 of skinMatrix is orthogonal\n    skinnedNormal = (skinMatrixWS * vec4(normal, 0.0)).xyz;\n    skinnedTangent = (skinMatrixWS * vec4(tangent.xyz, 0.0)).xyz;\n#endif\n\n    gl_Position = worldViewProjection * vec4(skinnedPosition, 1.0);\n\n    v_Texcoord = texcoord * uvRepeat + uvOffset;\n    v_WorldPosition = (world * vec4(skinnedPosition, 1.0)).xyz;\n    v_Barycentric = barycentric;\n\n    v_Normal = normalize((worldInverseTranspose * vec4(skinnedNormal, 0.0)).xyz);\n    \n#ifdef NORMALMAP_ENABLED\n    v_Tangent = normalize((worldInverseTranspose * vec4(skinnedTangent, 0.0)).xyz);\n    v_Bitangent = normalize(cross(v_Normal, v_Tangent) * tangent.w);\n#endif\n\n#ifdef VERTEX_COLOR\n    v_Color = color;\n#endif\n}\n\n@end\n\n\n@export buildin.phong.fragment\n\nuniform mat4 viewInverse : VIEWINVERSE;\n\nvarying vec2 v_Texcoord;\nvarying vec3 v_Normal;\nvarying vec3 v_WorldPosition;\n\n#ifdef NORMALMAP_ENABLED\nvarying vec3 v_Tangent;\nvarying vec3 v_Bitangent;\n#endif\n\nuniform sampler2D diffuseMap;\nuniform sampler2D normalMap;\nuniform sampler2D specularMap;\nuniform samplerCube environmentMap;\n\nuniform vec3 color : [1.0, 1.0, 1.0];\nuniform float alpha : 1.0;\n\nuniform float shininess : 30;\n\nuniform vec3 specularColor : [1.0, 1.0, 1.0];\nuniform vec3 emission : [0.0, 0.0, 0.0];\n\nuniform float reflectivity : 0.5;\n\n// Uniforms for wireframe\nuniform float lineWidth : 0.0;\nuniform vec3 lineColor : [0.0, 0.0, 0.0];\nvarying vec3 v_Barycentric;\n\n#ifdef AMBIENT_LIGHT_NUMBER\n@import buildin.header.ambient_light\n#endif\n#ifdef POINT_LIGHT_NUMBER\n@import buildin.header.point_light\n#endif\n#ifdef DIRECTIONAL_LIGHT_NUMBER\n@import buildin.header.directional_light\n#endif\n#ifdef SPOT_LIGHT_NUMBER\n@import buildin.header.spot_light\n#endif\n\n#extension GL_OES_standard_derivatives : enable\n// Import util functions and uniforms needed\n@import buildin.util.calculate_attenuation\n\n@import buildin.util.edge_factor\n\n@import buildin.plugin.compute_shadow_map\n\nvoid main()\n{\n#ifdef RENDER_TEXCOORD\n    gl_FragColor = vec4(v_Texcoord, 1.0, 1.0);\n    return;\n#endif\n\n    vec4 finalColor = vec4(color, alpha);\n\n    vec3 eyePos = viewInverse[3].xyz;\n    vec3 viewDirection = normalize(eyePos - v_WorldPosition);\n\n#ifdef DIFFUSEMAP_ENABLED\n    vec4 tex = texture2D(diffuseMap, v_Texcoord);\n#ifdef SRGB_DECODE\n    tex.rgb = pow(tex.rgb, vec3(2.2));\n#endif\n    finalColor.rgb *= tex.rgb;\n#ifdef DIFFUSEMAP_ALPHA_ALPHA\n    finalColor.a *= tex.a;\n#endif\n#endif\n\n    vec3 spec = specularColor;\n    #ifdef SPECULARMAP_ENABLED\n        spec *= texture2D(specularMap, v_Texcoord).rgb;\n    #endif\n\n    vec3 normal = v_Normal;\n#ifdef NORMALMAP_ENABLED\n    normal = texture2D(normalMap, v_Texcoord).xyz * 2.0 - 1.0;\n    mat3 tbn = mat3(v_Tangent, v_Bitangent, v_Normal);\n    normal = normalize(tbn * normal);\n#endif\n\n#ifdef RENDER_NORMAL\n    gl_FragColor = vec4(normal, 1.0);\n    return;\n#endif\n\n    // Diffuse part of all lights\n    vec3 diffuseTerm = vec3(0.0, 0.0, 0.0);\n    // Specular part of all lights\n    vec3 specularTerm = vec3(0.0, 0.0, 0.0);\n    \n#ifdef AMBIENT_LIGHT_NUMBER\n    for(int i = 0; i < AMBIENT_LIGHT_NUMBER; i++)\n    {\n        diffuseTerm += ambientLightColor[i];\n    }\n#endif\n#ifdef POINT_LIGHT_NUMBER\n#if defined(POINT_LIGHT_SHADOWMAP_NUMBER)\n    float shadowContribsPoint[POINT_LIGHT_NUMBER];\n    if(shadowEnabled)\n    {\n        computeShadowOfPointLights(v_WorldPosition, shadowContribsPoint);\n    }\n#endif\n    for(int i = 0; i < POINT_LIGHT_NUMBER; i++)\n    {\n        vec3 lightPosition = pointLightPosition[i];\n        vec3 lightColor = pointLightColor[i];\n        float range = pointLightRange[i];\n\n        vec3 lightDirection = lightPosition - v_WorldPosition;\n\n        // Calculate point light attenuation\n        float dist = length(lightDirection);\n        float attenuation = lightAttenuation(dist, range); \n\n        // Normalize vectors\n        lightDirection /= dist;\n        vec3 halfVector = normalize(lightDirection + viewDirection);\n\n        float ndh = dot(normal, halfVector);\n        ndh = clamp(ndh, 0.0, 1.0);\n\n        float ndl = dot(normal,  lightDirection);\n        ndl = clamp(ndl, 0.0, 1.0);\n\n        float shadowContrib = 1.0;\n#if defined(POINT_LIGHT_SHADOWMAP_NUMBER)\n        if(shadowEnabled)\n        {\n            shadowContrib = shadowContribsPoint[i];\n        }\n#endif\n\n        vec3 li = lightColor * ndl * attenuation * shadowContrib;\n\n        diffuseTerm += li;\n        if (shininess > 0.0)\n        {\n            specularTerm += li * pow(ndh, shininess);\n        }\n\n    }\n#endif\n\n#ifdef DIRECTIONAL_LIGHT_NUMBER\n#if defined(DIRECTIONAL_LIGHT_SHADOWMAP_NUMBER)\n    float shadowContribsDir[DIRECTIONAL_LIGHT_NUMBER];\n    if(shadowEnabled)\n    {\n        computeShadowOfDirectionalLights(v_WorldPosition, shadowContribsDir);\n    }\n#endif\n    for(int i = 0; i < DIRECTIONAL_LIGHT_NUMBER; i++)\n    {\n\n        vec3 lightDirection = -normalize(directionalLightDirection[i]);\n        vec3 lightColor = directionalLightColor[i];\n\n        vec3 halfVector = normalize(lightDirection + viewDirection);\n\n        float ndh = dot(normal, halfVector);\n        ndh = clamp(ndh, 0.0, 1.0);\n\n        float ndl = dot(normal, lightDirection);\n        ndl = clamp(ndl, 0.0, 1.0);\n\n        float shadowContrib = 1.0;\n#if defined(DIRECTIONAL_LIGHT_SHADOWMAP_NUMBER)\n        if(shadowEnabled)\n        {\n            shadowContrib = shadowContribsDir[i];\n        }\n#endif\n\n        vec3 li = lightColor * ndl * shadowContrib;\n\n        diffuseTerm += li;\n        if (shininess > 0.0)\n        {\n            specularTerm += li * pow(ndh, shininess);\n        }\n    }\n#endif\n\n#ifdef SPOT_LIGHT_NUMBER\n#if defined(SPOT_LIGHT_SHADOWMAP_NUMBER)\n    float shadowContribsSpot[SPOT_LIGHT_NUMBER];\n    if(shadowEnabled)\n    {\n        computeShadowOfSpotLights(v_WorldPosition, shadowContribsSpot);\n    }\n#endif\n    for(int i = 0; i < SPOT_LIGHT_NUMBER; i++)\n    {\n        vec3 lightPosition = spotLightPosition[i];\n        vec3 spotLightDirection = -normalize(spotLightDirection[i]);\n        vec3 lightColor = spotLightColor[i];\n        float range = spotLightRange[i];\n        float a = spotLightUmbraAngleCosine[i];\n        float b = spotLightPenumbraAngleCosine[i];\n        float falloffFactor = spotLightFalloffFactor[i];\n\n        vec3 lightDirection = lightPosition - v_WorldPosition;\n        // Calculate attenuation\n        float dist = length(lightDirection);\n        float attenuation = lightAttenuation(dist, range); \n\n        // Normalize light direction\n        lightDirection /= dist;\n        // Calculate spot light fall off\n        float c = dot(spotLightDirection, lightDirection);\n\n        float falloff;\n        // Fomular from real-time-rendering\n        falloff = clamp((c - a) /( b - a), 0.0, 1.0);\n        falloff = pow(falloff, falloffFactor);\n\n        vec3 halfVector = normalize(lightDirection + viewDirection);\n\n        float ndh = dot(normal, halfVector);\n        ndh = clamp(ndh, 0.0, 1.0);\n\n        float ndl = dot(normal, lightDirection);\n        ndl = clamp(ndl, 0.0, 1.0);\n\n        float shadowContrib = 1.0;\n#if defined(SPOT_LIGHT_SHADOWMAP_NUMBER)\n        if (shadowEnabled)\n        {\n            shadowContrib = shadowContribsSpot[i];\n        }\n#endif\n\n        vec3 li = lightColor * ndl * attenuation * (1.0-falloff) * shadowContrib;\n\n        diffuseTerm += li;\n        if (shininess > 0.0)\n        {\n            specularTerm += li * pow(ndh, shininess);\n        }\n    }\n#endif\n\n    finalColor.rgb *= diffuseTerm;\n    finalColor.rgb += specularTerm * spec;\n    finalColor.rgb += emission;\n\n#ifdef ENVIRONMENTMAP_ENABLED\n    vec3 envTex = textureCube(environmentMap, reflect(-viewDirection, normal)).xyz;\n    finalColor.rgb = finalColor.rgb + envTex * reflectivity;\n#endif\n\n    if(lineWidth > 0.01)\n    {\n        finalColor.rgb = finalColor.rgb * mix(lineColor, vec3(1.0), edgeFactor(lineWidth));\n    }\n\n#ifdef GAMMA_ENCODE\n    finalColor.rgb = pow(finalColor.rgb, vec3(1 / 2.2));\n#endif\n\n    gl_FragColor = finalColor;\n}\n\n@end"}),d("qtek/shader/source/standard.essl",[],function(){return"\n// http://blog.selfshadow.com/publications/s2013-shading-course/\n\n@export buildin.standard.vertex\n\n@import buildin.phong.vertex\n\n@end\n\n\n@export buildin.standard.fragment\n\n#define PI 3.14159265358979\n\nuniform mat4 viewInverse : VIEWINVERSE;\n\nvarying vec2 v_Texcoord;\nvarying vec3 v_Normal;\nvarying vec3 v_WorldPosition;\n\n#ifdef NORMALMAP_ENABLED\nvarying vec3 v_Tangent;\nvarying vec3 v_Bitangent;\n#endif\n\nuniform sampler2D diffuseMap;\nuniform sampler2D normalMap;\nuniform sampler2D specularMap;\nuniform samplerCube environmentMap;\n\nuniform vec3 color : [1.0, 1.0, 1.0];\nuniform float alpha : 1.0;\n\nuniform float glossiness : 0.5;\n\nuniform vec3 specularColor : [0.1, 0.1, 0.1];\nuniform vec3 emission : [0.0, 0.0, 0.0];\n\n// Uniforms for wireframe\nuniform float lineWidth : 0.0;\nuniform vec3 lineColor : [0.0, 0.0, 0.0];\nvarying vec3 v_Barycentric;\n\n#ifdef AMBIENT_LIGHT_NUMBER\n@import buildin.header.ambient_light\n#endif\n#ifdef POINT_LIGHT_NUMBER\n@import buildin.header.point_light\n#endif\n#ifdef DIRECTIONAL_LIGHT_NUMBER\n@import buildin.header.directional_light\n#endif\n#ifdef SPOT_LIGHT_NUMBER\n@import buildin.header.spot_light\n#endif\n\n#extension GL_OES_standard_derivatives : enable\n\n// Import util functions and uniforms needed\n@import buildin.util.calculate_attenuation\n\n@import buildin.util.edge_factor\n\n@import buildin.plugin.compute_shadow_map\n\n\nfloat G_Smith(float glossiness, float ndv, float ndl)\n{\n    // float k = (roughness+1.0) * (roughness+1.0) * 0.125;\n    float roughness = 1.0 - glossiness;\n    float k = roughness * roughness / 2.0;\n    float G1V = ndv / (ndv * (1.0 - k) + k);\n    float G1L = ndl / (ndl * (1.0 - k) + k);\n    return G1L * G1V;\n}\n// Fresnel\nvec3 F_Schlick(float ndv, vec3 spec) {\n    return spec + (1.0 - spec) * pow(1.0 - ndv, 5.0);\n}\n\nfloat D_Phong(float g, float ndh) {\n    // from black ops 2\n    float a = pow(8192.0, g);\n    return (a + 2.0) / 8.0 * pow(ndh, a);\n}\n\nfloat D_GGX(float g, float ndh) {\n    float r = 1.0 - g;\n    float a = r * r;\n    float tmp = ndh * ndh * (a - 1.0) + 1.0;\n    return a / (PI * tmp * tmp);\n}\n\nvoid main()\n{\n#ifdef RENDER_TEXCOORD\n    gl_FragColor = vec4(v_Texcoord, 1.0, 1.0);\n    return;\n#endif\n\n    vec4 finalColor = vec4(color, alpha);\n\n    vec3 eyePos = viewInverse[3].xyz;\n    vec3 V = normalize(eyePos - v_WorldPosition);\n    float g = glossiness;\n\n#ifdef DIFFUSEMAP_ENABLED\n    vec4 tex = texture2D(diffuseMap, v_Texcoord);\n#ifdef SRGB_DECODE\n    tex.rgb = pow(tex.rgb, vec3(2.2));\n#endif\n    finalColor.rgb *= tex.rgb;\n#ifdef DIFFUSEMAP_ALPHA_ALPHA\n    finalColor.a *= tex.a;\n#endif\n#ifdef DIFFUSEMAP_ALPHA_GLOSS\n    g *= tex.a;\n#endif\n#endif\n\n    vec3 spec = specularColor;\n#ifdef SPECULARMAP_ENABLED\n    spec *= texture2D(specularMap, v_Texcoord).rgb;\n#endif\n\n    vec3 N = v_Normal;\n#ifdef NORMALMAP_ENABLED\n    N = texture2D(normalMap, v_Texcoord).xyz * 2.0 - 1.0;\n    mat3 tbn = mat3(v_Tangent, v_Bitangent, v_Normal);\n    N = normalize(tbn * N);\n#endif\n\n#ifdef RENDER_NORMAL\n    gl_FragColor = vec4(N, 1.0);\n    return;\n#endif\n\n#ifdef RENDER_GLOSSINESS\n    gl_FragColor = vec4(vec3(g), 1.0);\n    return;\n#endif\n\n    // Diffuse part of all lights\n    vec3 diffuseTerm = vec3(0.0, 0.0, 0.0);\n    // Specular part of all lights\n    vec3 specularTerm = vec3(0.0, 0.0, 0.0);\n    \n    vec3 fresnelTerm = F_Schlick(clamp(dot(N, V), 0.0, 1.0), spec);\n    \n#ifdef AMBIENT_LIGHT_NUMBER\n    for(int i = 0; i < AMBIENT_LIGHT_NUMBER; i++)\n    {\n        // Hemisphere ambient lighting from cryengine\n        diffuseTerm += ambientLightColor[i] * (clamp(N.y * 0.7, 0.0, 1.0) + 0.3);\n        // diffuseTerm += ambientLightColor[i];\n    }\n#endif\n#ifdef POINT_LIGHT_NUMBER\n#if defined(POINT_LIGHT_SHADOWMAP_NUMBER)\n    float shadowContribsPoint[POINT_LIGHT_NUMBER];\n    if(shadowEnabled)\n    {\n        computeShadowOfPointLights(v_WorldPosition, shadowContribsPoint);\n    }\n#endif\n    for(int i = 0; i < POINT_LIGHT_NUMBER; i++)\n    {\n\n        vec3 lightPosition = pointLightPosition[i];\n        vec3 lc = pointLightColor[i];\n        float range = pointLightRange[i];\n\n        vec3 L = lightPosition - v_WorldPosition;\n\n        // Calculate point light attenuation\n        float dist = length(L);\n        float attenuation = lightAttenuation(dist, range);\n        L /= dist;\n        vec3 H = normalize(L + V);\n        float ndl = clamp(dot(N, L), 0.0, 1.0);\n        float ndh = clamp(dot(N, H), 0.0, 1.0);\n\n        float shadowContrib = 1.0;\n#if defined(POINT_LIGHT_SHADOWMAP_NUMBER)\n        if(shadowEnabled)\n        {\n            shadowContrib = shadowContribsPoint[i];\n        }\n#endif\n\n        vec3 li = lc * ndl * attenuation * shadowContrib;\n        diffuseTerm += li;\n        specularTerm += li * fresnelTerm * D_Phong(g, ndh);\n    }\n#endif\n\n#ifdef DIRECTIONAL_LIGHT_NUMBER\n#if defined(DIRECTIONAL_LIGHT_SHADOWMAP_NUMBER)\n    float shadowContribsDir[DIRECTIONAL_LIGHT_NUMBER];\n    if(shadowEnabled)\n    {\n        computeShadowOfDirectionalLights(v_WorldPosition, shadowContribsDir);\n    }\n#endif\n    for(int i = 0; i < DIRECTIONAL_LIGHT_NUMBER; i++)\n    {\n\n        vec3 L = -normalize(directionalLightDirection[i]);\n        vec3 lc = directionalLightColor[i];\n\n        vec3 H = normalize(L + V);\n        float ndl = clamp(dot(N, L), 0.0, 1.0);\n        float ndh = clamp(dot(N, H), 0.0, 1.0);\n\n        float shadowContrib = 1.0;\n#if defined(DIRECTIONAL_LIGHT_SHADOWMAP_NUMBER)\n        if(shadowEnabled)\n        {\n            shadowContrib = shadowContribsDir[i];\n        }\n#endif\n\n        vec3 li = lc * ndl * shadowContrib;\n\n        diffuseTerm += li;\n        specularTerm += li * fresnelTerm * D_Phong(g, ndh);\n    }\n#endif\n\n#ifdef SPOT_LIGHT_NUMBER\n#if defined(SPOT_LIGHT_SHADOWMAP_NUMBER)\n    float shadowContribsSpot[SPOT_LIGHT_NUMBER];\n    if(shadowEnabled)\n    {\n        computeShadowOfSpotLights(v_WorldPosition, shadowContribsSpot);\n    }\n#endif\n    for(int i = 0; i < SPOT_LIGHT_NUMBER; i++)\n    {\n        vec3 lightPosition = spotLightPosition[i];\n        vec3 spotLightDirection = -normalize(spotLightDirection[i]);\n        vec3 lc = spotLightColor[i];\n        float range = spotLightRange[i];\n        float a = spotLightUmbraAngleCosine[i];\n        float b = spotLightPenumbraAngleCosine[i];\n        float falloffFactor = spotLightFalloffFactor[i];\n\n        vec3 L = lightPosition - v_WorldPosition;\n        // Calculate attenuation\n        float dist = length(L);\n        float attenuation = lightAttenuation(dist, range); \n\n        // Normalize light direction\n        L /= dist;\n        // Calculate spot light fall off\n        float c = dot(spotLightDirection, L);\n\n        float falloff;\n        // Fomular from real-time-rendering\n        falloff = clamp((c - a) /( b - a), 0.0, 1.0);\n        falloff = pow(falloff, falloffFactor);\n\n        vec3 H = normalize(L + V);\n        float ndl = clamp(dot(N, L), 0.0, 1.0);\n        float ndh = clamp(dot(N, H), 0.0, 1.0);\n\n        float shadowContrib = 1.0;\n#if defined(SPOT_LIGHT_SHADOWMAP_NUMBER)\n        if (shadowEnabled)\n        {\n            shadowContrib = shadowContribsSpot[i];\n        }\n#endif\n\n        vec3 li = lc * attenuation * (1.0-falloff) * shadowContrib * ndl;\n\n        diffuseTerm += li;\n        specularTerm += li * fresnelTerm * D_Phong(g, ndh);\n    }\n#endif\n\n    finalColor.rgb *= diffuseTerm;\n    finalColor.rgb += specularTerm;\n    finalColor.rgb += emission;\n\n#ifdef ENVIRONMENTMAP_ENABLED\n    vec3 envTex = textureCube(environmentMap, reflect(-V, N)).xyz;;\n    finalColor.rgb = finalColor.rgb + envTex * g * fresnelTerm;\n#endif\n\n    if(lineWidth > 0.)\n    {\n        finalColor.rgb = finalColor.rgb * mix(lineColor, vec3(1.0), edgeFactor(lineWidth));\n    }\n\n#ifdef GAMMA_ENCODE\n    finalColor.rgb = pow(finalColor.rgb, vec3(1 / 2.2));\n#endif\n    gl_FragColor = finalColor;\n}\n\n@end\n\n\n@export buildin.physical.vertex\n\n@import buildin.standard.vertex\n\n@end\n\n@export buildin.physical.fragment\n\n@import buildin.standard.fragment\n\n@end"}),d("qtek/shader/source/wireframe.essl",[],function(){return"@export buildin.wireframe.vertex\n\nuniform mat4 worldViewProjection : WORLDVIEWPROJECTION;\nuniform mat4 world : WORLD;\n\nattribute vec3 position : POSITION;\nattribute vec3 barycentric;\n\n#ifdef SKINNING\nattribute vec3 weight : WEIGHT;\nattribute vec4 joint : JOINT;\n\nuniform mat4 skinMatrix[JOINT_NUMBER] : SKIN_MATRIX;\n#endif\n\nvarying vec3 v_Barycentric;\n\nvoid main()\n{\n\n    vec3 skinnedPosition = position;\n#ifdef SKINNING\n\n    @import buildin.chunk.skin_matrix\n\n    skinnedPosition = (skinMatrixWS * vec4(position, 1.0)).xyz;\n#endif\n\n    gl_Position = worldViewProjection * vec4(skinnedPosition, 1.0 );\n\n    v_Barycentric = barycentric;\n}\n\n@end\n\n\n@export buildin.wireframe.fragment\n\nuniform vec3 color : [0.0, 0.0, 0.0];\n\nuniform float alpha : 1.0;\nuniform float lineWidth : 1.0;\n\nvarying vec3 v_Barycentric;\n\n#extension GL_OES_standard_derivatives : enable\n\n@import buildin.util.edge_factor\n\nvoid main()\n{\n\n    gl_FragColor.rgb = color;\n    gl_FragColor.a = ( 1.0-edgeFactor(lineWidth) ) * alpha;\n}\n\n@end"}),d("qtek/shader/source/skybox.essl",[],function(){return"@export buildin.skybox.vertex\n\nuniform mat4 world : WORLD;\nuniform mat4 worldViewProjection : WORLDVIEWPROJECTION;\n\nattribute vec3 position : POSITION;\n\nvarying vec3 v_WorldPosition;\n\nvoid main()\n{\n    v_WorldPosition = (world * vec4(position, 1.0)).xyz;\n    gl_Position = worldViewProjection * vec4(position, 1.0);\n}\n\n@end\n\n@export buildin.skybox.fragment\n\nuniform mat4 viewInverse : VIEWINVERSE;\nuniform samplerCube environmentMap;\n\nvarying vec3 v_WorldPosition;\n\nvoid main()\n{\n    vec3 eyePos = viewInverse[3].xyz;\n    vec3 viewDirection = normalize(v_WorldPosition - eyePos);\n\n    vec3 tex = textureCube(environmentMap, viewDirection).xyz;\n\n#ifdef SRGB_DECODE\n    tex.rgb = pow(tex.rgb, vec3(2.2));\n#endif\n    \n    gl_FragColor = vec4(tex, 1.0);\n}\n@end"
}),d("qtek/shader/source/shadowmap.essl",[],function(){return"@export buildin.sm.depth.vertex\n\nuniform mat4 worldViewProjection : WORLDVIEWPROJECTION;\n\nattribute vec3 position : POSITION;\n\n#ifdef SHADOW_TRANSPARENT \nattribute vec2 texcoord : TEXCOORD_0;\n#endif\n\n#ifdef SKINNING\nattribute vec3 weight : WEIGHT;\nattribute vec4 joint : JOINT;\n\nuniform mat4 skinMatrix[JOINT_NUMBER] : SKIN_MATRIX;\n#endif\n\nvarying vec4 v_ViewPosition;\n\n#ifdef SHADOW_TRANSPARENT\nvarying vec2 v_Texcoord;\n#endif\n\nvoid main(){\n    \n    vec3 skinnedPosition = position;\n    \n#ifdef SKINNING\n\n    @import buildin.chunk.skin_matrix\n\n    skinnedPosition = (skinMatrixWS * vec4(position, 1.0)).xyz;\n#endif\n\n    v_ViewPosition = worldViewProjection * vec4(skinnedPosition, 1.0);\n    gl_Position = v_ViewPosition;\n\n#ifdef SHADOW_TRANSPARENT\n    v_Texcoord = texcoord;\n#endif\n}\n@end\n\n@export buildin.sm.depth.fragment\n\nvarying vec4 v_ViewPosition;\n\n#ifdef SHADOW_TRANSPARENT\nvarying vec2 v_Texcoord;\n#endif\n\nuniform float bias : 0.001;\nuniform float slopeScale : 1.0;\n\n#ifdef SHADOW_TRANSPARENT\nuniform sampler2D transparentMap;\n#endif\n\n#extension GL_OES_standard_derivatives : enable\n\n@import buildin.util.encode_float\n\nvoid main(){\n    // Whats the difference between gl_FragCoord.z and this v_ViewPosition\n    // gl_FragCoord consider the polygon offset ?\n    float depth = v_ViewPosition.z / v_ViewPosition.w;\n    // float depth = gl_FragCoord.z / gl_FragCoord.w;\n\n#ifdef USE_VSM\n    depth = depth * 0.5 + 0.5;\n    float moment1 = depth;\n    float moment2 = depth * depth;\n\n    // Adjusting moments using partial derivative\n    float dx = dFdx(depth);\n    float dy = dFdy(depth);\n    moment2 += 0.25*(dx*dx+dy*dy);\n\n    gl_FragColor = vec4(moment1, moment2, 0.0, 1.0);\n#else\n    // Add slope scaled bias using partial derivative\n    float dx = dFdx(depth);\n    float dy = dFdy(depth);\n    depth += sqrt(dx*dx + dy*dy) * slopeScale + bias;\n\n#ifdef SHADOW_TRANSPARENT\n    if (texture2D(transparentMap, v_Texcoord).a <= 0.1) {\n        // Hi-Z\n        gl_FragColor = encodeFloat(0.9999);\n        return;\n    }\n#endif\n\n    gl_FragColor = encodeFloat(depth * 0.5 + 0.5);\n#endif\n}\n@end\n\n@export buildin.sm.debug_depth\n\nuniform sampler2D depthMap;\nvarying vec2 v_Texcoord;\n\n@import buildin.util.decode_float\n\nvoid main() {\n    vec4 tex = texture2D(depthMap, v_Texcoord);\n#ifdef USE_VSM\n    gl_FragColor = vec4(tex.rgb, 1.0);\n#else\n    float depth = decodeFloat(tex);\n    gl_FragColor = vec4(depth, depth, depth, 1.0);\n#endif\n}\n\n@end\n\n\n@export buildin.sm.distance.vertex\n\nuniform mat4 worldViewProjection : WORLDVIEWPROJECTION;\nuniform mat4 world : WORLD;\n\nattribute vec3 position : POSITION;\n\n#ifdef SKINNING\nattribute vec3 boneWeight;\nattribute vec4 boneIndex;\n\nuniform mat4 skinMatrix[JOINT_NUMBER] : SKIN_MATRIX;\n#endif\n\nvarying vec3 v_WorldPosition;\n\nvoid main (){\n\n    vec3 skinnedPosition = position;\n#ifdef SKINNING\n    @import buildin.chunk.skin_matrix\n\n    skinnedPosition = (skinMatrixWS * vec4(position, 1.0)).xyz;\n#endif\n\n    gl_Position = worldViewProjection * vec4(skinnedPosition , 1.0);\n    v_WorldPosition = (world * vec4(skinnedPosition, 1.0)).xyz;\n}\n\n@end\n\n@export buildin.sm.distance.fragment\n\nuniform vec3 lightPosition;\nuniform float range : 100;\n\nvarying vec3 v_WorldPosition;\n\n@import buildin.util.encode_float\n\nvoid main(){\n    float dist = distance(lightPosition, v_WorldPosition);\n#ifdef USE_VSM\n    gl_FragColor = vec4(dist, dist * dist, 0.0, 0.0);\n#else\n    dist = dist / range;\n    gl_FragColor = encodeFloat(dist);\n#endif\n}\n@end\n\n@export buildin.plugin.compute_shadow_map\n\n#if defined(SPOT_LIGHT_SHADOWMAP_NUMBER) || defined(DIRECTIONAL_LIGHT_SHADOWMAP_NUMBER) || defined(POINT_LIGHT_SHADOWMAP_NUMBER)\n\n#ifdef SPOT_LIGHT_SHADOWMAP_NUMBER\nuniform sampler2D spotLightShadowMaps[SPOT_LIGHT_SHADOWMAP_NUMBER];\nuniform mat4 spotLightMatrices[SPOT_LIGHT_SHADOWMAP_NUMBER];\n#endif\n\n#ifdef DIRECTIONAL_LIGHT_SHADOWMAP_NUMBER\n#if defined(SHADOW_CASCADE)\nuniform sampler2D directionalLightShadowMaps[SHADOW_CASCADE];\nuniform mat4 directionalLightMatrices[SHADOW_CASCADE];\nuniform float shadowCascadeClipsNear[SHADOW_CASCADE];\nuniform float shadowCascadeClipsFar[SHADOW_CASCADE];\n#else\nuniform sampler2D directionalLightShadowMaps[DIRECTIONAL_LIGHT_SHADOWMAP_NUMBER];\nuniform mat4 directionalLightMatrices[DIRECTIONAL_LIGHT_SHADOWMAP_NUMBER];\n#endif\n#endif\n\n#ifdef POINT_LIGHT_SHADOWMAP_NUMBER\nuniform samplerCube pointLightShadowMaps[POINT_LIGHT_SHADOWMAP_NUMBER];\nuniform float pointLightRanges[POINT_LIGHT_SHADOWMAP_NUMBER];\n#endif\n\nuniform bool shadowEnabled : true;\n\n@import buildin.util.decode_float\n\n#if defined(DIRECTIONAL_LIGHT_NUMBER) || defined(SPOT_LIGHT_SHADOWMAP_NUMBER)\n\nfloat tapShadowMap(sampler2D map, vec2 uv, float z){\n    vec4 tex = texture2D(map, uv);\n    return decodeFloat(tex) * 2.0 - 1.0 < z ? 0.0 : 1.0;\n}\n\nfloat pcf(sampler2D map, vec2 uv, float z){\n\n    float shadowContrib = tapShadowMap(map, uv, z);\n    float offset = 1.0 / 2048.0;\n    shadowContrib += tapShadowMap(map, uv+vec2(offset, 0.0), z);\n    shadowContrib += tapShadowMap(map, uv+vec2(offset, offset), z);\n    shadowContrib += tapShadowMap(map, uv+vec2(-offset, offset), z);\n    shadowContrib += tapShadowMap(map, uv+vec2(0.0, offset), z);\n    shadowContrib += tapShadowMap(map, uv+vec2(-offset, 0.0), z);\n    shadowContrib += tapShadowMap(map, uv+vec2(-offset, -offset), z);\n    shadowContrib += tapShadowMap(map, uv+vec2(offset, -offset), z);\n    shadowContrib += tapShadowMap(map, uv+vec2(0.0, -offset), z);\n\n    return shadowContrib / 9.0;\n}\nfloat chebyshevUpperBound(vec2 moments, float z){\n    float p = 0.0;\n    z = z * 0.5 + 0.5;\n    if (z <= moments.x) {\n        p = 1.0;\n    }\n    float variance = moments.y - moments.x * moments.x;\n    // http://fabiensanglard.net/shadowmappingVSM/\n    variance = max(variance, 0.0000001);\n    // Compute probabilistic upper bound. \n    float mD = moments.x - z;\n    float pMax = variance / (variance + mD * mD);\n    // Now reduce light-bleeding by removing the [0, x] tail and linearly rescaling (x, 1]\n    // TODO : bleedBias parameter ?\n    pMax = clamp((pMax-0.4)/(1.0-0.4), 0.0, 1.0);\n    return max(p, pMax);\n}\nfloat computeShadowContrib(sampler2D map, mat4 lightVPM, vec3 position){\n    \n    vec4 posInLightSpace = lightVPM * vec4(v_WorldPosition, 1.0);\n    posInLightSpace.xyz /= posInLightSpace.w;\n    float z = posInLightSpace.z;\n    // In frustum\n    if(all(greaterThan(posInLightSpace.xyz, vec3(-0.99, -0.99, -1.0))) &&\n        all(lessThan(posInLightSpace.xyz, vec3(0.99, 0.99, 1.0)))){\n        // To texture uv\n        vec2 uv = (posInLightSpace.xy+1.0) / 2.0;\n\n        #ifdef USE_VSM\n            vec2 moments = texture2D(map, uv).xy;\n            return chebyshevUpperBound(moments, z);\n        #else\n            return pcf(map, uv, z);\n        #endif\n    }\n    return 1.0;\n}\n\n#endif\n\n#ifdef POINT_LIGHT_SHADOWMAP_NUMBER\n\nfloat computeShadowOfCube(samplerCube map, vec3 direction, float range){\n    vec4 shadowTex = textureCube(map, direction);\n    float dist = length(direction);\n\n#ifdef USE_VSM\n    vec2 moments = shadowTex.xy;\n    float variance = moments.y - moments.x * moments.x;\n    float mD = moments.x - dist;\n    float p = variance / (variance + mD * mD);\n    if(moments.x + 0.001 < dist){\n        return clamp(p, 0.0, 1.0);\n    }else{\n        return 1.0;\n    }\n#else\n    if((decodeFloat(shadowTex) + 0.0002) * range < dist){\n        return 0.0;\n    }else{\n        return 1.0;\n    }\n#endif\n}\n#endif\n\n#if defined(SPOT_LIGHT_SHADOWMAP_NUMBER)\n\nvoid computeShadowOfSpotLights(vec3 position, inout float shadowContribs[SPOT_LIGHT_NUMBER] ){\n    for(int i = 0; i < SPOT_LIGHT_SHADOWMAP_NUMBER; i++){\n        float shadowContrib = computeShadowContrib(spotLightShadowMaps[i], spotLightMatrices[i], position);\n        shadowContribs[i] = shadowContrib;\n    }\n    // set default fallof of rest lights\n    for(int i = SPOT_LIGHT_SHADOWMAP_NUMBER; i < SPOT_LIGHT_NUMBER; i++){\n        shadowContribs[i] = 1.0;\n    }\n}\n\n#endif\n\n\n#if defined(DIRECTIONAL_LIGHT_SHADOWMAP_NUMBER)\n\n#ifdef SHADOW_CASCADE\n\nvoid computeShadowOfDirectionalLights(vec3 position, inout float shadowContribs[DIRECTIONAL_LIGHT_NUMBER]){\n    // http://www.opengl.org/wiki/Compute_eye_space_from_window_space\n    float depth = (2.0 * gl_FragCoord.z - gl_DepthRange.near - gl_DepthRange.far)\n                    / (gl_DepthRange.far - gl_DepthRange.near);\n\n    // Pixels not in light box are lighted\n    // TODO\n    shadowContribs[0] = 1.0;\n\n    for (int i = 0; i < SHADOW_CASCADE; i++) {\n        if (\n            depth >= shadowCascadeClipsNear[i] &&\n            depth <= shadowCascadeClipsFar[i]\n        ) {\n            float shadowContrib = computeShadowContrib(directionalLightShadowMaps[i], directionalLightMatrices[i], position);\n            // TODO Will get a sampler needs to be be uniform error in native gl\n            shadowContribs[0] = shadowContrib;\n        }\n    }\n    // set default fallof of rest lights\n    for(int i = DIRECTIONAL_LIGHT_SHADOWMAP_NUMBER; i < DIRECTIONAL_LIGHT_NUMBER; i++){\n        shadowContribs[i] = 1.0;\n    }\n}\n\n#else\n\nvoid computeShadowOfDirectionalLights(vec3 position, inout float shadowContribs[DIRECTIONAL_LIGHT_NUMBER]){\n    for(int i = 0; i < DIRECTIONAL_LIGHT_SHADOWMAP_NUMBER; i++){\n        float shadowContrib = computeShadowContrib(directionalLightShadowMaps[i], directionalLightMatrices[i], position);\n        shadowContribs[i] = shadowContrib;\n    }\n    // set default fallof of rest lights\n    for(int i = DIRECTIONAL_LIGHT_SHADOWMAP_NUMBER; i < DIRECTIONAL_LIGHT_NUMBER; i++){\n        shadowContribs[i] = 1.0;\n    }\n}\n#endif\n\n#endif\n\n\n#if defined(POINT_LIGHT_SHADOWMAP_NUMBER)\n\nvoid computeShadowOfPointLights(vec3 position, inout float shadowContribs[POINT_LIGHT_NUMBER] ){\n    for(int i = 0; i < POINT_LIGHT_SHADOWMAP_NUMBER; i++){\n        vec3 lightPosition = pointLightPosition[i];\n        vec3 direction = position - lightPosition;\n        shadowContribs[i] = computeShadowOfCube(pointLightShadowMaps[i], direction, pointLightRanges[i]);\n    }\n    for(int i = POINT_LIGHT_SHADOWMAP_NUMBER; i < POINT_LIGHT_NUMBER; i++){\n        shadowContribs[i] = 1.0;\n    }\n}\n\n#endif\n\n#endif\n\n@end"}),d("qtek/shader/source/compositor/coloradjust.essl",[],function(){return'@export buildin.compositor.coloradjust\n\nvarying vec2 v_Texcoord;\nuniform sampler2D texture;\n\nuniform float brightness : 0.0;\nuniform float contrast : 1.0;\nuniform float exposure : 0.0;\nuniform float gamma : 1.0;\nuniform float saturation : 1.0;\n\n// Values from "Graphics Shaders: Theory and Practice" by Bailey and Cunningham\nconst vec3 w = vec3(0.2125, 0.7154, 0.0721);\n\nvoid main()\n{\n    vec4 tex = texture2D( texture, v_Texcoord);\n\n    // brightness\n    vec3 color = clamp(tex.rgb + vec3(brightness), 0.0, 1.0);\n    // contrast\n    color = clamp( (color-vec3(0.5))*contrast+vec3(0.5), 0.0, 1.0);\n    // exposure\n    color = clamp( color * pow(2.0, exposure), 0.0, 1.0);\n    // gamma\n    color = clamp( pow(color, vec3(gamma)), 0.0, 1.0);\n    // saturation\n    float luminance = dot( color, w );\n    color = mix(vec3(luminance), color, saturation);\n    \n    gl_FragColor = vec4(color, tex.a);\n}\n\n@end\n\n// Seperate shader for float texture\n@export buildin.compositor.brightness\nvarying vec2 v_Texcoord;\nuniform sampler2D texture;\n\nuniform float brightness : 0.0;\n\nvoid main()\n{\n    vec4 tex = texture2D( texture, v_Texcoord);\n    vec3 color = tex.rgb + vec3(brightness);\n    gl_FragColor = vec4(color, tex.a);\n}\n@end\n\n@export buildin.compositor.contrast\nvarying vec2 v_Texcoord;\nuniform sampler2D texture;\n\nuniform float contrast : 1.0;\n\nvoid main()\n{\n    vec4 tex = texture2D( texture, v_Texcoord);\n    vec3 color = (tex.rgb-vec3(0.5))*contrast+vec3(0.5);\n    gl_FragColor = vec4(color, tex.a);\n}\n@end\n\n@export buildin.compositor.exposure\nvarying vec2 v_Texcoord;\nuniform sampler2D texture;\n\nuniform float exposure : 0.0;\n\nvoid main()\n{\n    vec4 tex = texture2D(texture, v_Texcoord);\n    vec3 color = tex.rgb * pow(2.0, exposure);\n    gl_FragColor = vec4(color, tex.a);\n}\n@end\n\n@export buildin.compositor.gamma\nvarying vec2 v_Texcoord;\nuniform sampler2D texture;\n\nuniform float gamma : 1.0;\n\nvoid main()\n{\n    vec4 tex = texture2D(texture, v_Texcoord);\n    vec3 color = pow(tex.rgb, vec3(gamma));\n    gl_FragColor = vec4(color, tex.a);\n}\n@end\n\n@export buildin.compositor.saturation\nvarying vec2 v_Texcoord;\nuniform sampler2D texture;\n\nuniform float saturation : 1.0;\n\nconst vec3 w = vec3(0.2125, 0.7154, 0.0721);\n\nvoid main()\n{\n    vec4 tex = texture2D(texture, v_Texcoord);\n    vec3 color = tex.rgb;\n    float luminance = dot(color, w);\n    color = mix(vec3(luminance), color, saturation);\n    gl_FragColor = vec4(color, tex.a);\n}\n@end'}),d("qtek/shader/source/compositor/blur.essl",[],function(){return"@export buildin.compositor.gaussian_blur_h\n\nuniform sampler2D texture; // the texture with the scene you want to blur\nvarying vec2 v_Texcoord;\n \nuniform float blurSize : 2.0; \nuniform float textureWidth : 512.0;\n\nvoid main(void)\n{\n   vec4 sum = vec4(0.0);\n   float blurOffset = blurSize / textureWidth;\n   // blur in y (vertical)\n   // take nine samples, with the distance blurSize between them\n   sum += texture2D(texture, vec2(max(v_Texcoord.x - 4.0*blurOffset, 0.0), v_Texcoord.y)) * 0.05;\n   sum += texture2D(texture, vec2(max(v_Texcoord.x - 3.0*blurOffset, 0.0), v_Texcoord.y)) * 0.09;\n   sum += texture2D(texture, vec2(max(v_Texcoord.x - 2.0*blurOffset, 0.0), v_Texcoord.y)) * 0.12;\n   sum += texture2D(texture, vec2(max(v_Texcoord.x - blurOffset, 0.0), v_Texcoord.y)) * 0.15;\n   sum += texture2D(texture, vec2(v_Texcoord.x, v_Texcoord.y)) * 0.18;\n   sum += texture2D(texture, vec2(min(v_Texcoord.x + blurOffset, 1.0), v_Texcoord.y)) * 0.15;\n   sum += texture2D(texture, vec2(min(v_Texcoord.x + 2.0*blurOffset, 1.0), v_Texcoord.y)) * 0.12;\n   sum += texture2D(texture, vec2(min(v_Texcoord.x + 3.0*blurOffset, 1.0), v_Texcoord.y)) * 0.09;\n   sum += texture2D(texture, vec2(min(v_Texcoord.x + 4.0*blurOffset, 1.0), v_Texcoord.y)) * 0.05;\n \n   gl_FragColor = sum;\n}\n\n@end\n\n@export buildin.compositor.gaussian_blur_v\n\nuniform sampler2D texture;\nvarying vec2 v_Texcoord;\n \nuniform float blurSize : 2.0;\nuniform float textureHeight : 512.0;\n \nvoid main(void)\n{\n   vec4 sum = vec4(0.0);\n   float blurOffset = blurSize / textureHeight;\n   // blur in y (vertical)\n   // take nine samples, with the distance blurSize between them\n   sum += texture2D(texture, vec2(v_Texcoord.x, max(v_Texcoord.y - 4.0*blurOffset, 0.0))) * 0.05;\n   sum += texture2D(texture, vec2(v_Texcoord.x, max(v_Texcoord.y - 3.0*blurOffset, 0.0))) * 0.09;\n   sum += texture2D(texture, vec2(v_Texcoord.x, max(v_Texcoord.y - 2.0*blurOffset, 0.0))) * 0.12;\n   sum += texture2D(texture, vec2(v_Texcoord.x, max(v_Texcoord.y - blurOffset, 0.0))) * 0.15;\n   sum += texture2D(texture, vec2(v_Texcoord.x, v_Texcoord.y)) * 0.18;\n   sum += texture2D(texture, vec2(v_Texcoord.x, min(v_Texcoord.y + blurOffset, 1.0))) * 0.15;\n   sum += texture2D(texture, vec2(v_Texcoord.x, min(v_Texcoord.y + 2.0*blurOffset, 1.0))) * 0.12;\n   sum += texture2D(texture, vec2(v_Texcoord.x, min(v_Texcoord.y + 3.0*blurOffset, 1.0))) * 0.09;\n   sum += texture2D(texture, vec2(v_Texcoord.x, min(v_Texcoord.y + 4.0*blurOffset, 1.0))) * 0.05;\n \n   gl_FragColor = sum;\n}\n\n@end\n\n@export buildin.compositor.box_blur\n\nuniform sampler2D texture;\nvarying vec2 v_Texcoord;\n\nuniform float blurSize : 3.0;\nuniform vec2 textureSize : [512.0, 512.0];\n\nvoid main(void){\n\n   vec4 tex = texture2D(texture, v_Texcoord);\n   vec2 offset = blurSize / textureSize;\n\n   tex += texture2D(texture, v_Texcoord + vec2(offset.x, 0.0) );\n   tex += texture2D(texture, v_Texcoord + vec2(offset.x, offset.y) );\n   tex += texture2D(texture, v_Texcoord + vec2(-offset.x, offset.y) );\n   tex += texture2D(texture, v_Texcoord + vec2(0.0, offset.y) );\n   tex += texture2D(texture, v_Texcoord + vec2(-offset.x, 0.0) );\n   tex += texture2D(texture, v_Texcoord + vec2(-offset.x, -offset.y) );\n   tex += texture2D(texture, v_Texcoord + vec2(offset.x, -offset.y) );\n   tex += texture2D(texture, v_Texcoord + vec2(0.0, -offset.y) );\n\n   tex /= 9.0;\n\n   gl_FragColor = tex;\n}\n\n@end\n\n// http://www.slideshare.net/DICEStudio/five-rendering-ideas-from-battlefield-3-need-for-speed-the-run\n@export buildin.compositor.hexagonal_blur_mrt_1\n\n// MRT in chrome\n// https://www.khronos.org/registry/webgl/sdk/tests/conformance/extensions/webgl-draw-buffers.html\n#extension GL_EXT_draw_buffers : require\n\nuniform sampler2D texture;\nvarying vec2 v_Texcoord;\n\nuniform float blurSize : 2.0;\n\nuniform vec2 textureSize : [512.0, 512.0];\n\nvoid main(void){\n   vec2 offset = blurSize / textureSize;\n\n   vec4 color = vec4(0.0);\n   // Top\n   for(int i = 0; i < 10; i++){\n      color += 1.0/10.0 * texture2D(texture, v_Texcoord + vec2(0.0, offset.y * float(i)) );\n   }\n   gl_FragData[0] = color;\n   vec4 color2 = vec4(0.0);\n   // Down left\n   for(int i = 0; i < 10; i++){\n      color2 += 1.0/10.0 * texture2D(texture, v_Texcoord - vec2(offset.x * float(i), offset.y * float(i)) );\n   }\n   gl_FragData[1] = (color + color2) / 2.0;\n}\n\n@end\n\n@export buildin.compositor.hexagonal_blur_mrt_2\n\nuniform sampler2D texture0;\nuniform sampler2D texture1;\n\nvarying vec2 v_Texcoord;\n\nuniform float blurSize : 2.0;\n\nuniform vec2 textureSize : [512.0, 512.0];\n\nvoid main(void){\n   vec2 offset = blurSize / textureSize;\n\n   vec4 color1 = vec4(0.0);\n   // Down left\n   for(int i = 0; i < 10; i++){\n      color1 += 1.0/10.0 * texture2D(texture0, v_Texcoord - vec2(offset.x * float(i), offset.y * float(i)) );\n   }\n   vec4 color2 = vec4(0.0);\n   // Down right\n   for(int i = 0; i < 10; i++){\n      color2 += 1.0/10.0 * texture2D(texture1, v_Texcoord + vec2(offset.x * float(i), -offset.y * float(i)) );\n   }\n\n   gl_FragColor = (color1 + color2) / 2.0;\n}\n\n@end\n\n\n@export buildin.compositor.hexagonal_blur_1\n\n#define KERNEL_SIZE 10\n\nuniform sampler2D texture;\nvarying vec2 v_Texcoord;\n\nuniform float blurSize : 1.0;\n\nuniform vec2 textureSize : [512.0, 512.0];\n\nvoid main(void){\n   vec2 offset = blurSize / textureSize;\n\n   vec4 color = vec4(0.0);\n   float fKernelSize = float(KERNEL_SIZE);\n   // Top\n   for(int i = 0; i < KERNEL_SIZE; i++){\n      color += 1.0 / fKernelSize * texture2D(texture, v_Texcoord + vec2(0.0, offset.y * float(i)) );\n   }\n   gl_FragColor = color;\n}\n\n@end\n\n@export buildin.compositor.hexagonal_blur_2\n\n#define KERNEL_SIZE 10\n\nuniform sampler2D texture;\nvarying vec2 v_Texcoord;\n\nuniform float blurSize : 1.0;\n\nuniform vec2 textureSize : [512.0, 512.0];\n\nvoid main(void){\n   vec2 offset = blurSize / textureSize;\n   offset.y /= 2.0;\n\n   vec4 color = vec4(0.0);\n   float fKernelSize = float(KERNEL_SIZE);\n   // Down left\n   for(int i = 0; i < KERNEL_SIZE; i++){\n      color += 1.0/fKernelSize * texture2D(texture, v_Texcoord - vec2(offset.x * float(i), offset.y * float(i)) );\n   }\n   gl_FragColor = color;\n}\n@end\n\n@export buildin.compositor.hexagonal_blur_3\n\n#define KERNEL_SIZE 10\n\nuniform sampler2D texture1;\nuniform sampler2D texture2;\n\nvarying vec2 v_Texcoord;\n\nuniform float blurSize : 1.0;\n\nuniform vec2 textureSize : [512.0, 512.0];\n\nvoid main(void){\n   vec2 offset = blurSize / textureSize;\n   offset.y /= 2.0;\n\n   vec4 color1 = vec4(0.0);\n   float fKernelSize = float(KERNEL_SIZE);\n   // Down left\n   for(int i = 0; i < KERNEL_SIZE; i++){\n      color1 += 1.0/fKernelSize * texture2D(texture1, v_Texcoord - vec2(offset.x * float(i), offset.y * float(i)) );\n   }\n   vec4 color2 = vec4(0.0);\n   // Down right\n   for(int i = 0; i < KERNEL_SIZE; i++){\n      color2 += 1.0/fKernelSize * texture2D(texture1, v_Texcoord + vec2(offset.x * float(i), -offset.y * float(i)) );\n   }\n\n   vec4 color3 = vec4(0.0);\n   // Down right\n   for(int i = 0; i < KERNEL_SIZE; i++){\n      color3 += 1.0/fKernelSize * texture2D(texture2, v_Texcoord + vec2(offset.x * float(i), -offset.y * float(i)) );\n   }\n\n   gl_FragColor = (color1 + color2 + color3) / 3.0;\n}\n\n@end"}),d("qtek/shader/source/compositor/lum.essl",[],function(){return"\n@export buildin.compositor.lum\n\nvarying vec2 v_Texcoord;\n\nuniform sampler2D texture;\n\nconst vec3 w = vec3(0.2125, 0.7154, 0.0721);\n\nvoid main()\n{\n    vec4 tex = texture2D( texture, v_Texcoord );\n    float luminance = dot(tex.rgb, w);\n\n    gl_FragColor = vec4(vec3(luminance), 1.0);\n}\n\n@end"}),d("qtek/shader/source/compositor/lut.essl",[],function(){return"\n// https://github.com/BradLarson/GPUImage?source=c\n@export buildin.compositor.lut\n\nvarying vec2 v_Texcoord;\n\nuniform sampler2D texture;\nuniform sampler2D lookup;\n\nvoid main()\n{\n    vec4 tex = texture2D(texture, v_Texcoord);\n\n    float blueColor = tex.b * 63.0;\n    \n    vec2 quad1;\n    quad1.y = floor(floor(blueColor) / 8.0);\n    quad1.x = floor(blueColor) - (quad1.y * 8.0);\n    \n    vec2 quad2;\n    quad2.y = floor(ceil(blueColor) / 8.0);\n    quad2.x = ceil(blueColor) - (quad2.y * 8.0);\n    \n    vec2 texPos1;\n    texPos1.x = (quad1.x * 0.125) + 0.5/512.0 + ((0.125 - 1.0/512.0) * tex.r);\n    texPos1.y = (quad1.y * 0.125) + 0.5/512.0 + ((0.125 - 1.0/512.0) * tex.g);\n    \n    vec2 texPos2;\n    texPos2.x = (quad2.x * 0.125) + 0.5/512.0 + ((0.125 - 1.0/512.0) * tex.r);\n    texPos2.y = (quad2.y * 0.125) + 0.5/512.0 + ((0.125 - 1.0/512.0) * tex.g);\n    \n    vec4 newColor1 = texture2D(lookup, texPos1);\n    vec4 newColor2 = texture2D(lookup, texPos2);\n    \n    vec4 newColor = mix(newColor1, newColor2, fract(blueColor));\n    gl_FragColor = vec4(newColor.rgb, tex.w);\n}\n\n@end"}),d("qtek/shader/source/compositor/output.essl",[],function(){return"@export buildin.compositor.output\n\n#define OUTPUT_ALPHA;\n\nvarying vec2 v_Texcoord;\n\nuniform sampler2D texture;\n\nvoid main()\n{\n    vec4 tex = texture2D(texture, v_Texcoord);\n\n    gl_FragColor.rgb = tex.rgb;\n\n#ifdef OUTPUT_ALPHA\n    gl_FragColor.a = tex.a;\n#else\n    gl_FragColor.a = 1.0;\n#endif\n\n}\n\n@end"}),d("qtek/shader/source/compositor/hdr.essl",[],function(){return"// HDR Pipeline\n@export buildin.compositor.hdr.bright\n\nuniform sampler2D texture;\nuniform float threshold : 1;\nuniform float scale : 1.0;\n\nvarying vec2 v_Texcoord;\n\nconst vec3 lumWeight = vec3(0.2125, 0.7154, 0.0721);\n\n@import buildin.util.rgbm_decode\n@import buildin.util.rgbm_encode\n\nvoid main()\n{\n#ifdef TEXTURE_ENABLED\n#ifdef RGBM_DECODE\n    vec3 tex = RGBMDecode(texture2D(texture, v_Texcoord));\n#else\n    vec3 tex = texture2D(texture, v_Texcoord).rgb;\n#endif\n#else\n    vec3 tex = vec3(0.0);\n#endif\n\n    float lum = dot(tex, lumWeight);\n    if (lum > threshold)\n    {\n        gl_FragColor.rgb = tex * scale;\n    }\n    else\n    {\n        gl_FragColor.rgb = vec3(0.0);\n    }\n    gl_FragColor.a = 1.0;\n\n#ifdef RGBM_ENCODE\n    gl_FragColor.rgba = RGBMEncode(gl_FragColor.rgb);\n#endif\n}\n@end\n\n@export buildin.compositor.hdr.log_lum\n\nvarying vec2 v_Texcoord;\n\nuniform sampler2D texture;\n\nconst vec3 w = vec3(0.2125, 0.7154, 0.0721);\n\nvoid main()\n{\n    vec4 tex = texture2D(texture, v_Texcoord);\n    float luminance = dot(tex.rgb, w);\n    luminance = log(luminance + 0.001);\n\n    gl_FragColor = vec4(vec3(luminance), 1.0);\n}\n\n@end\n\n@export buildin.compositor.hdr.lum_adaption\nvarying vec2 v_Texcoord;\n\nuniform sampler2D adaptedLum;\nuniform sampler2D currentLum;\n\nuniform float frameTime : 0.02;\n\nvoid main()\n{\n    float fAdaptedLum = texture2D(adaptedLum, vec2(0.5, 0.5)).r;\n    float fCurrentLum = exp(texture2D(currentLum, vec2(0.5, 0.5)).r);\n\n    fAdaptedLum += (fCurrentLum - fAdaptedLum) * (1.0 - pow(0.98, 30.0 * frameTime));\n    gl_FragColor.rgb = vec3(fAdaptedLum);\n    gl_FragColor.a = 1.0;\n}\n@end\n\n// Tone mapping with gamma correction\n// http://filmicgames.com/archives/75\n@export buildin.compositor.hdr.tonemapping\n\nuniform sampler2D texture;\nuniform sampler2D bloom;\nuniform sampler2D lensflare;\nuniform sampler2D lum;\n\nuniform float exposure : 1.0;\n\nvarying vec2 v_Texcoord;\n\nconst float A = 0.22;   // Shoulder Strength\nconst float B = 0.30;   // Linear Strength\nconst float C = 0.10;   // Linear Angle\nconst float D = 0.20;   // Toe Strength\nconst float E = 0.01;   // Toe Numerator\nconst float F = 0.30;   // Toe Denominator\nconst vec3 whiteScale = vec3(11.2);\n\nvec3 uncharted2ToneMap(vec3 x)\n{\n    return ((x*(A*x+C*B)+D*E)/(x*(A*x+B)+D*F))-E/F;\n}\n\nvec3 filmicToneMap(vec3 color)\n{\n    vec3 x = max(vec3(0.0), color - 0.004);\n    return (x*(6.2*x+0.5))/(x*(6.2*x+1.7)+0.06);\n}\n\nfloat eyeAdaption(float fLum)\n{\n    return mix(0.2, fLum, 0.5);\n}\n\nvoid main()\n{\n    vec3 tex = vec3(0.0);\n    float a = 1.0;\n#ifdef TEXTURE_ENABLED\n    vec4 res = texture2D(texture, v_Texcoord);\n    a = res.a;\n    tex = res.rgb;\n#endif\n\n#ifdef BLOOM_ENABLED\n    tex += texture2D(bloom, v_Texcoord).rgb * 0.25;\n#endif\n\n#ifdef LENSFLARE_ENABLED\n    tex += texture2D(lensflare, v_Texcoord).rgb;\n#endif\n\n// Adjust exposure\n// From KlayGE\n#ifdef LUM_ENABLED\n    float fLum = texture2D(lum, vec2(0.5, 0.5)).r;\n    float adaptedLumDest = 3.0 / (max(0.1, 1.0 + 10.0*eyeAdaption(fLum)));\n    float exposureBias = adaptedLumDest * exposure;\n#else\n    float exposureBias = exposure;\n#endif\n    tex *= exposureBias;\n\n    // Do tone mapping\n    vec3 color = uncharted2ToneMap(tex) / uncharted2ToneMap(whiteScale);\n    color = pow(color, vec3(1.0/2.2));\n    // vec3 color = filmicToneMap(tex);\n\n#ifdef RGBM_ENCODE\n    gl_FragColor.rgba = RGBMEncode(color);\n#else\n    gl_FragColor = vec4(color, a);\n#endif\n}\n\n@end"}),d("qtek/shader/source/compositor/lensflare.essl",[],function(){return"// john-chapman-graphics.blogspot.co.uk/2013/02/pseudo-lens-flare.html\n@export buildin.compositor.lensflare\n\n#define SAMPLE_NUMBER 8\n\nuniform sampler2D texture;\nuniform sampler2D lensColor;\n\nuniform vec2 textureSize : [512, 512];\n\nuniform float dispersal : 0.3;\nuniform float haloWidth : 0.4;\nuniform float distortion : 1.0;\n\nvarying vec2 v_Texcoord;\n\nvec4 textureDistorted(\n    in vec2 texcoord,\n    in vec2 direction,\n    in vec3 distortion\n) {\n    return vec4(\n        texture2D(texture, texcoord + direction * distortion.r).r,\n        texture2D(texture, texcoord + direction * distortion.g).g,\n        texture2D(texture, texcoord + direction * distortion.b).b,\n        1.0\n    );\n}\n\nvoid main()\n{\n    vec2 texcoord = -v_Texcoord + vec2(1.0); // Flip texcoords\n    vec2 textureOffset = 1.0 / textureSize;\n\n    vec2 ghostVec = (vec2(0.5) - texcoord) * dispersal;\n    vec2 haloVec = normalize(ghostVec) * haloWidth;\n\n    vec3 distortion = vec3(-textureOffset.x * distortion, 0.0, textureOffset.x * distortion);\n    //Sample ghost\n    vec4 result = vec4(0.0);\n    for (int i = 0; i < SAMPLE_NUMBER; i++)\n    {\n        vec2 offset = fract(texcoord + ghostVec * float(i));\n\n        float weight = length(vec2(0.5) - offset) / length(vec2(0.5));\n        weight = pow(1.0 - weight, 10.0);\n\n        result += textureDistorted(offset, normalize(ghostVec), distortion) * weight;\n    }\n\n    result *= texture2D(lensColor, vec2(length(vec2(0.5) - texcoord)) / length(vec2(0.5)));\n    //Sample halo\n    float weight = length(vec2(0.5) - fract(texcoord + haloVec)) / length(vec2(0.5));\n    weight = pow(1.0 - weight, 10.0);\n    vec2 offset = fract(texcoord + haloVec);\n    result += textureDistorted(offset, normalize(ghostVec), distortion) * weight;\n\n    gl_FragColor = result;\n}\n@end"}),d("qtek/shader/source/compositor/blend.essl",[],function(){return"@export buildin.compositor.blend\n// Blend at most 4 textures\n#ifdef TEXTURE1_ENABLED\nuniform sampler2D texture1;\nuniform float weight1 : 1.0;\n#endif\n#ifdef TEXTURE2_ENABLED\nuniform sampler2D texture2;\nuniform float weight2 : 1.0;\n#endif\n#ifdef TEXTURE3_ENABLED\nuniform sampler2D texture3;\nuniform float weight3 : 1.0;\n#endif\n#ifdef TEXTURE4_ENABLED\nuniform sampler2D texture4;\nuniform float weight4 : 1.0;\n#endif\n\nvarying vec2 v_Texcoord;\n\nvoid main()\n{\n    vec3 tex = vec3(0.0);\n#ifdef TEXTURE1_ENABLED\n    tex += texture2D(texture1, v_Texcoord).rgb * weight1;\n#endif\n#ifdef TEXTURE2_ENABLED\n    tex += texture2D(texture2, v_Texcoord).rgb * weight2;\n#endif\n#ifdef TEXTURE3_ENABLED\n    tex += texture2D(texture3, v_Texcoord).rgb * weight3;\n#endif\n#ifdef TEXTURE4_ENABLED\n    tex += texture2D(texture4, v_Texcoord).rgb * weight4;\n#endif\n\n    gl_FragColor = vec4(tex, 1.0);\n}\n@end"}),d("qtek/shader/source/compositor/fxaa.essl",[],function(){return"// https://github.com/mitsuhiko/webgl-meincraft/blob/master/assets/shaders/fxaa.glsl\n@export buildin.compositor.fxaa\n\nuniform sampler2D texture;\nuniform vec2 viewportSize : [512, 512];\n\nvarying vec2 v_Texcoord;\n\n#define FXAA_REDUCE_MIN   (1.0/128.0)\n#define FXAA_REDUCE_MUL   (1.0/8.0)\n#define FXAA_SPAN_MAX     8.0\n\nvoid main()\n{\n    vec2 resolution = 1.0 / viewportSize;\n    vec3 rgbNW = texture2D( texture, ( gl_FragCoord.xy + vec2( -1.0, -1.0 ) ) * resolution ).xyz;\n    vec3 rgbNE = texture2D( texture, ( gl_FragCoord.xy + vec2( 1.0, -1.0 ) ) * resolution ).xyz;\n    vec3 rgbSW = texture2D( texture, ( gl_FragCoord.xy + vec2( -1.0, 1.0 ) ) * resolution ).xyz;\n    vec3 rgbSE = texture2D( texture, ( gl_FragCoord.xy + vec2( 1.0, 1.0 ) ) * resolution ).xyz;\n    vec4 rgbaM  = texture2D( texture,  gl_FragCoord.xy  * resolution );\n    vec3 rgbM  = rgbaM.xyz;\n    float opacity  = rgbaM.w;\n\n    vec3 luma = vec3( 0.299, 0.587, 0.114 );\n\n    float lumaNW = dot( rgbNW, luma );\n    float lumaNE = dot( rgbNE, luma );\n    float lumaSW = dot( rgbSW, luma );\n    float lumaSE = dot( rgbSE, luma );\n    float lumaM  = dot( rgbM,  luma );\n    float lumaMin = min( lumaM, min( min( lumaNW, lumaNE ), min( lumaSW, lumaSE ) ) );\n    float lumaMax = max( lumaM, max( max( lumaNW, lumaNE) , max( lumaSW, lumaSE ) ) );\n\n    vec2 dir;\n    dir.x = -((lumaNW + lumaNE) - (lumaSW + lumaSE));\n    dir.y =  ((lumaNW + lumaSW) - (lumaNE + lumaSE));\n\n    float dirReduce = max( ( lumaNW + lumaNE + lumaSW + lumaSE ) * ( 0.25 * FXAA_REDUCE_MUL ), FXAA_REDUCE_MIN );\n\n    float rcpDirMin = 1.0 / ( min( abs( dir.x ), abs( dir.y ) ) + dirReduce );\n    dir = min( vec2( FXAA_SPAN_MAX,  FXAA_SPAN_MAX),\n          max( vec2(-FXAA_SPAN_MAX, -FXAA_SPAN_MAX),\n                dir * rcpDirMin)) * resolution;\n\n    vec3 rgbA = texture2D( texture, gl_FragCoord.xy  * resolution + dir * ( 1.0 / 3.0 - 0.5 ) ).xyz;\n    rgbA += texture2D( texture, gl_FragCoord.xy  * resolution + dir * ( 2.0 / 3.0 - 0.5 ) ).xyz;\n    rgbA *= 0.5;\n\n    vec3 rgbB = texture2D( texture, gl_FragCoord.xy  * resolution + dir * -0.5 ).xyz;\n    rgbB += texture2D( texture, gl_FragCoord.xy  * resolution + dir * 0.5 ).xyz;\n    rgbB *= 0.25;\n    rgbB += rgbA * 0.5;\n\n    float lumaB = dot( rgbB, luma );\n\n    if ( ( lumaB < lumaMin ) || ( lumaB > lumaMax ) )\n    {\n\n        gl_FragColor = vec4( rgbA, opacity );\n\n    } else {\n\n        gl_FragColor = vec4( rgbB, opacity );\n\n    }\n}\n\n@end"}),d("qtek/shader/buildin",["require","./library","../Shader","./source/util.essl","./source/basic.essl","./source/lambert.essl","./source/phong.essl","./source/standard.essl","./source/wireframe.essl","./source/skybox.essl","./source/prez.essl","./source/shadowmap.essl","./source/compositor/coloradjust.essl","./source/compositor/blur.essl","./source/compositor/lum.essl","./source/compositor/lut.essl","./source/compositor/output.essl","./source/compositor/hdr.essl","./source/compositor/lensflare.essl","./source/compositor/blend.essl","./source/compositor/fxaa.essl"],function(a){var b=a("./library"),c=a("../Shader");
c["import"](a("./source/util.essl")),c["import"](a("./source/basic.essl")),c["import"](a("./source/lambert.essl")),c["import"](a("./source/phong.essl")),c["import"](a("./source/standard.essl")),c["import"](a("./source/wireframe.essl")),c["import"](a("./source/skybox.essl")),c["import"](a("./source/prez.essl")),c["import"](a("./source/shadowmap.essl")),b.template("buildin.basic",c.source("buildin.basic.vertex"),c.source("buildin.basic.fragment")),b.template("buildin.lambert",c.source("buildin.lambert.vertex"),c.source("buildin.lambert.fragment")),b.template("buildin.phong",c.source("buildin.phong.vertex"),c.source("buildin.phong.fragment")),b.template("buildin.wireframe",c.source("buildin.wireframe.vertex"),c.source("buildin.wireframe.fragment")),b.template("buildin.skybox",c.source("buildin.skybox.vertex"),c.source("buildin.skybox.fragment")),b.template("buildin.prez",c.source("buildin.prez.vertex"),c.source("buildin.prez.fragment")),b.template("buildin.standard",c.source("buildin.standard.vertex"),c.source("buildin.standard.fragment")),b.template("buildin.physical",c.source("buildin.physical.vertex"),c.source("buildin.physical.fragment")),c["import"](a("./source/compositor/coloradjust.essl")),c["import"](a("./source/compositor/blur.essl")),c["import"](a("./source/compositor/lum.essl")),c["import"](a("./source/compositor/lut.essl")),c["import"](a("./source/compositor/output.essl")),c["import"](a("./source/compositor/hdr.essl")),c["import"](a("./source/compositor/lensflare.essl")),c["import"](a("./source/compositor/blend.essl")),c["import"](a("./source/compositor/fxaa.essl"))}),d("qtek/loader/GLTF",["require","../core/Base","../core/request","../core/util","../core/vendor","../Scene","../Shader","../Material","../Mesh","../Node","../Texture","../Texture2D","../TextureCube","../shader/library","../Skeleton","../Joint","../camera/Perspective","../camera/Orthographic","../light/Point","../light/Spot","../light/Directional","../core/glenum","../math/Vector3","../math/Quaternion","../math/BoundingBox","../animation/SamplerClip","../animation/SkinningClip","../StaticGeometry","../dep/glmatrix","../shader/buildin"],function(a){var b=a("../core/Base"),c=a("../core/request"),d=a("../core/util"),e=a("../core/vendor"),f=a("../Scene");a("../Shader");var g=a("../Material"),h=a("../Mesh"),i=a("../Node");a("../Texture");var j=a("../Texture2D");a("../TextureCube");var k=a("../shader/library"),l=a("../Skeleton"),m=a("../Joint"),n=a("../camera/Perspective"),o=a("../camera/Orthographic"),p=a("../light/Point"),q=a("../light/Spot"),r=a("../light/Directional"),s=a("../core/glenum");a("../math/Vector3"),a("../math/Quaternion");var t=a("../math/BoundingBox"),u=a("../animation/SamplerClip"),v=a("../animation/SkinningClip"),w=a("../StaticGeometry"),x=a("../dep/glmatrix"),y=x.quat;a("../shader/buildin");var z={NORMAL:"normal",POSITION:"position",TEXCOORD_0:"texcoord0",WEIGHT:"weight",JOINT:"joint",COLOR:"color"},A=b.derive({rootNode:null,rootPath:"",textureRootPath:"",bufferRootPath:"",shaderName:"buildin.standard",includeCamera:!0,includeLight:!0,includeAnimation:!0,includeMesh:!0},{load:function(a){var b=this;this.rootPath||(this.rootPath=a.slice(0,a.lastIndexOf("/"))),c.get({url:a,onprogress:function(a,c,d){b.trigger("progress",a,c,d)},onerror:function(a){b.trigger("error",a)},responseType:"text",onload:function(a){b.parse(JSON.parse(a))}})},parse:function(a){function b(){c.includeMesh&&(c._parseTextures(a,g),c._parseMaterials(a,g),c._parseMeshes(a,g)),c._parseNodes(a,g);for(var b=a.scenes[a.scene],d=0;d<b.nodes.length;d++){var e=g.nodes[b.nodes[d]];e.update(),h.add(e)}if(c.includeMesh&&c._parseSkins(a,g),c.includeAnimation){var f=c._parseAnimations(a,g);if(f)for(var i in g.skeletons)g.skeletons[i].addClip(f)}c.trigger("success",{scene:c.rootNode?null:h,rootNode:c.rootNode?h:null,cameras:g.cameras,textures:g.textures,materials:g.materials,skeletons:g.skeletons,meshes:g.meshes,clip:f})}var c=this,e=0,g={buffers:{},materials:{},textures:{},meshes:{},joints:{},skeletons:{},cameras:{},nodes:{}},h=this.rootNode||new f;return d.each(a.buffers,function(a,d){e++,c._loadBuffer(a.path,function(a){g.buffers[d]=a,e--,0===e&&b()},function(){e--,0===e&&b()})}),{scene:c.rootNode?null:h,rootNode:c.rootNode?h:null,cameras:g.cameras,textures:g.textures,materials:g.materials,skeletons:g.skeletons,meshes:g.meshes,clip:null}},_loadBuffer:function(a,b,d){var e=this.bufferRootPath||this.rootPath;e&&(a=e+"/"+a),c.get({url:a,responseType:"arraybuffer",onload:function(a){b&&b(a)},onerror:function(a){d&&d(a)}})},_parseSkins:function(a,b){var c=!1;for(var d in a.skins){for(var f=a.skins[d],g=new l({name:d}),i=0;i<f.joints.length;i++){var j=f.joints[i],k=new m({name:j,index:g.joints.length});g.joints.push(k)}if(f.inverseBindMatrices){c=!0;var n=f.inverseBindMatrices,o=n.bufferView,p=a.bufferViews[o],q=b.buffers[p.buffer],r=n.byteOffset+p.byteOffset,s=16*n.count,t=new e.Float32Array(q,r,s);g._invBindPoseMatricesArray=t,g._skinMatricesArray=new e.Float32Array(t.length)}b.skeletons[d]=g}var u=function(c,d,e,f){var g=b.nodes[d],h=a.nodes[d],i=c[h.jointId];i?(i.node=g,i.parentIndex=e,i.rootNode=f,e=i.index):i=new m({node:g,rootNode:f,parentIndex:e});for(var j=0;j<h.children.length;j++)u(c,h.children[j],e,f);return i},v=function(a){return a.index},w={};for(var d in a.nodes){var x=a.nodes[d];if(x.instanceSkin){var y=x.instanceSkin.skin,g=b.skeletons[y];w[y]=g;var z=b.nodes[d],A=g.joints.map(v);if(z instanceof h){z.skeleton=g,z.joints=A;var B=z.material;B.shader=B.shader.clone(),B.shader.define("vertex","SKINNING"),B.shader.define("vertex","JOINT_NUMBER",A.length)}else for(var i=0;i<z._children.length;i++){var C=z._children[i];if(C.skeleton){C.skeleton=g,C.joints=A;var B=C.material;B.shader=B.shader.clone(),B.shader.define("vertex","SKINNING"),B.shader.define("vertex","JOINT_NUMBER",A.length)}}for(var D={},i=0;i<g.joints.length;i++){var k=g.joints[i];D[k.name]=k}var E=x.instanceSkin.skeletons;for(i=0;i<E.length;i++){var F=b.nodes[E[i]],G=u(D,E[i],-1,F);G&&g.roots.push(G)}}}for(var d in w){var g=w[d];c?g.updateMatricesSubArrays():g.updateJointMatrices(),g.update()}},_parseTextures:function(a,b){var c=this.textureRootPath||this.rootPath;d.each(a.textures,function(e,f){var g=a.samplers[e.sampler],h={};["wrapS","wrapT","magFilter","minFilter"].forEach(function(a){var b=g[a];void 0!==b&&("string"==typeof b&&(b=s[b]),h[a]=b)});var i=e.target,k=e.format;if("string"==typeof i&&(i=s[i],k=s[k]),h.format=k,i===s.TEXTURE_2D){var l=new j(h),m=a.images[e.source];l.load(d.relative2absolute(m.path,c)),b.textures[f]=l}else i===s.TEXTURE_CUBE_MAP},this)},_parseMaterials:function(a,b){var c={};for(var d in a.techniques){var e=a.techniques[d];c[d]={pass:e.passes[e.pass]}}for(var d in a.materials){var f=a.materials[d],h=f.instanceTechnique,i=c[h.technique],l=i.pass,m={};m=h.values;for(var n in m){var o=m[n];"string"==typeof o&&b.textures[o]&&(m[n]=b.textures[o])}var p=[];m.diffuse instanceof j&&p.push("diffuseMap"),m.normalMap instanceof j&&p.push("normalMap");var q=new g({name:f.name,shader:k.get(this.shaderName,p)});void 0!==l.states.depthMask&&(q.depthMask=l.states.depthMask),void 0!==l.states.depthTestEnable&&(q.depthTest=l.states.depthTestEnable),q.cullFace=l.states.cullFaceEnable||!1,l.states.blendEnable&&(q.transparent=!0),m.diffuse&&(m.diffuse instanceof Array?q.set("color",m.diffuse.slice(0,3)):q.set("diffuseMap",m.diffuse)),void 0!==m.normalMap&&q.set("normalMap",m.normalMap),void 0!==m.emission&&q.set("emission",m.emission.slice(0,3)),void 0!==m.shininess?(q.set("glossiness",Math.log(m.shininess)/Math.log(8192)),q.set("shininess",m.shininess)):(q.set("glossiness",.5),q.set("shininess",.5)),void 0!==m.specular&&q.set("specularColor",m.specular.slice(0,3)),void 0!==m.transparency&&q.set("alpha",m.transparency),b.materials[d]=q}},_parseMeshes:function(a,b){for(var c=this,d=Object.keys(a.meshes),f=0;f<d.length;f++){var i=d[f],j=a.meshes[i];b.meshes[i]=[];for(var l=0;l<j.primitives.length;l++){for(var m=j.primitives[l],n=new w({boundingBox:new t}),o=Object.keys(m.attributes),p=0;p<o.length;p++){var q=o[p],r=m.attributes[q],s=a.accessors[r],u=z[q];if(u){var v,x,y,A=s.type,B=a.bufferViews[s.bufferView],C=b.buffers[B.buffer],D=B.byteOffset+s.byteOffset;switch(A){case 35664:v=2,y="float",x=e.Float32Array;break;case 35665:v=3,y="float",x=e.Float32Array;break;case 35666:v=4,y="float",x=e.Float32Array;break;case 5126:v=1,y="float",x=e.Float32Array;break;default:console.warn("Attribute type "+s.type+" not support yet")}var E=new x(C,D,s.count*v);if("WEIGHT"===q&&4===v){for(var F=new x(3*s.count),G=0;G<s.count;G++)F[3*G]=E[4*G],F[3*G+1]=E[4*G+1],F[3*G+2]=E[4*G+2];n.attributes[u].value=F}else n.attributes[u].value=E;if("POSITION"===q){var H=s.min,I=s.max;H&&n.boundingBox.min.set(H[0],H[1],H[2]),I&&n.boundingBox.max.set(I[0],I[1],I[2])}}}var J=a.accessors[m.indices],B=a.bufferViews[J.bufferView],C=b.buffers[B.buffer],D=B.byteOffset+J.byteOffset;n.faces=5125===J.type?new e.Uint32Array(C,D,J.count):new e.Uint16Array(C,D,J.count);var K=b.materials[m.material];K||(K=new g({shader:k.get(c.shaderName)}));var L=new h({geometry:n,material:K});K.shader.isTextureEnabled("normalMap")&&(L.geometry.attributes.tangent.value||L.geometry.generateTangents()),j.name&&(L.name=j.primitives.length>1?[j.name,l].join("-"):j.name),b.meshes[i].push(L)}}},_parseNodes:function(a,b){for(var c in a.nodes){var d,e=a.nodes[c];if(e.camera&&this.includeCamera){var f=a.cameras[e.camera];"perspective"===f.projection?d=new n({name:e.name,aspect:f.aspect_ratio,fov:f.xfov,far:f.zfar,near:f.znear}):(d=new o,console.warn("TODO:Orthographic camera")),d.setName(e.name),b.cameras[e.name]=d}else if(e.lights&&this.includeLight){for(var g=[],h=0;h<e.lights.length;h++){var j=a.lights[e.lights[h]],k=this._parseLight(j);k&&g.push(k)}if(1==g.length)d=g[0],d.setName(e.name);else{d=new i,d.setName(e.name);for(var h=0;h<g.length;h++)d.add(g[h])}}else if((e.meshes||e.instanceSkin)&&this.includeMesh){var l;if(l=e.meshes?e.meshes[0]:e.instanceSkin.sources[0]){var m=b.meshes[l];if(m)if(1===m.length)d=m[0],d.setName(e.name);else{d=new i,d.setName(e.name);for(var p=0;p<m.length;p++)e.instanceSkin&&(m[p].skeleton=e.instanceSkin.skin),d.add(m[p])}}}else d=new i,d.setName(e.name);if(e.matrix){for(var h=0;16>h;h++)d.localTransform._array[h]=e.matrix[h];d.decomposeLocalTransform()}else e.translation&&d.position.setArray(e.translation),e.rotation&&(y.setAxisAngle(d.rotation._array,e.rotation.slice(0,3),e.rotation[3]),d.rotation._dirty=!0),e.scale&&d.scale.setArray(e.scale);b.nodes[c]=d}for(var c in a.nodes){var e=a.nodes[c],d=b.nodes[c];if(e.children)for(var h=0;h<e.children.length;h++){var q=e.children[h],r=b.nodes[q];d.add(r)}}},_parseLight:function(a){switch(a.type){case"point":var b=new p({name:a.id,color:a.point.color});break;case"spot":var b=new q({name:a.id,color:a.spot.color});break;case"directional":var b=new r({name:a.id,color:a.directional.color});break;default:console.warn("Light "+a.type+" not support yet")}return b},_parseAnimations:function(a,b){var c=new v;c.setLoop(!0);var d=!1,f={},g=y.create();for(var h in a.animations){d=!0;var i=a.animations[h],j={};for(var k in i.parameters){var l=i.parameters[k],m=a.accessors[l],n=a.bufferViews[m.bufferView],o=b.buffers[n.buffer],p=n.byteOffset+m.byteOffset;switch(m.type){case 35664:var q=2;break;case 35665:var q=3;break;case 35666:var q=4;break;case 5126:var q=1}j[k]=new e.Float32Array(o,p,q*m.count)}if(j.TIME&&i.channels.length){var r=i.channels[0].target.id,s=b.nodes[r],t=j.rotation;if(t)for(var w=0;w<j.TIME.length;w++){j.TIME[w]*=1e3;var x=4*w;t&&(g[0]=t[x],g[1]=t[x+1],g[2]=t[x+2],y.setAxisAngle(g,g,t[x+3]),j.rotation[x]=g[0],j.rotation[x+1]=g[1],j.rotation[x+2]=g[2],j.rotation[x+3]=g[3])}f[r]=new u({name:s.name});var z=f[r];z.channels.time=j.TIME,z.channels.rotation=j.rotation||null,z.channels.position=j.translation||null,z.channels.scale=j.scale||null,z.life=j.TIME[j.TIME.length-1]}}for(var r in f)c.addJointClip(f[r]);return d?c:null}});return A}),d("qtek/loader/ThreeModel",["require","../core/Base","../core/request","../core/util","../Shader","../Material","../DynamicGeometry","../Mesh","../Node","../Texture2D","../TextureCube","../shader/library","../Skeleton","../Joint","../math/Vector3","../math/Quaternion","../core/glenum","../animation/SkinningClip","../dep/glmatrix"],function(a){function b(a,b){return a&1<<b}function c(a){var b=255&a>>16,c=255&a>>8,d=255&a;return[b/255,c/255,d/255]}var d=a("../core/Base"),e=a("../core/request"),f=a("../core/util"),g=a("../Shader"),h=a("../Material"),i=a("../DynamicGeometry"),j=a("../Mesh"),k=a("../Node"),l=a("../Texture2D");a("../TextureCube");var m=a("../shader/library"),n=a("../Skeleton"),o=a("../Joint"),p=a("../math/Vector3"),q=a("../math/Quaternion"),r=a("../core/glenum"),s=a("../animation/SkinningClip"),t=a("../dep/glmatrix"),u=t.vec3,v=t.quat,w=d.derive({rootPath:"",textureRootPath:""},{load:function(a){var b=this;this.rootPath||(this.rootPath=a.slice(0,a.lastIndexOf("/"))),e.get({url:a,onprogress:function(a,c,d){b.trigger("progress",a,c,d)},onerror:function(a){b.trigger("error",a)},responseType:"text",onload:function(a){b.parse(JSON.parse(a))}})},parse:function(a){var b,c,d=this._parseGeometry(a),e=a.skinIndices,f=a.skinWeights,g=e&&e.length&&f&&f.length;g?(c=this._parseSkeleton(a),b=c.joints.length):b=0;for(var h=[],i=0;i<a.materials.length;i++){var k=d[i];if(k&&k.faces.length&&k.attributes.position.value.length){k.updateBoundingBox();var l=this._parseMaterial(a.materials[i],b),m=new j({geometry:d[i],material:l});if(g){m.skeleton=c;for(var i=0;i<c.joints.length;i++)m.joints[i]=i}h.push(m)}}return this.trigger("success",h),h},_parseGeometry:function(a){function d(a,b){return C[a]>=0?(E=D[a],q=e[E],r=q.attributes,s=r.position.value,t=r.normal.value,u=[r.texcoord0.value,r.texcoord1.value],v=r.color.value,x=r.weight.value,w=r.joint.value,F[b]=!1,C[a]):(s.push([j[3*a],j[3*a+1],j[3*a+2]]),p&&(x.push([n[2*a],n[2*a+1],0]),w.push([m[2*a],m[2*a+1],-1,-1])),C[a]=f[J],D[a]=J,F[b]=!0,f[J]++)}for(var e=[],f=[],g=0;g<a.materials.length;g++)e[g]=null,f[g]=0;e[0]=new i;var h=a.faces,j=a.vertices,k=a.normals,l=a.colors,m=a.skinIndices,n=a.skinWeights,o=a.uvs,p=m&&m.length&&n&&n.length,q=e[0],r=q.attributes,s=r.position.value,t=r.normal.value,u=[r.texcoord0.value,r.texcoord1.value],v=r.color.value,w=r.joint.value,x=r.weight.value,y=q.faces,z=0;o[0]&&o[0].length&&z++,o[1]&&o[1].length&&z++;for(var A=0,B=h.length,C=[],D=[],g=0;g<j.length;g++)C[g]=-1,D[g]=-1;for(var E=0,F=[],G=[],H=[],I=[],g=0;4>g;g++)G[g]=[0,0],H[g]=[0,0,0],I[g]=[0,0,0];for(var J=0;B>A;){var K=h[A++],L=b(K,0),M=b(K,1),N=b(K,2),O=b(K,3),P=b(K,4),Q=b(K,5),R=b(K,6),S=b(K,7),T=L?4:3;M&&(J=h[A+(L?4:3)],e[J]||(e[J]=new i),q=e[J],r=q.attributes,s=r.position.value,t=r.normal.value,u=[r.texcoord0.value,r.texcoord1.value],v=r.color.value,x=r.weight.value,w=r.joint.value,y=q.faces);var U,V,W,X,Y,Z,$,_,ab,bb;if(L?(U=h[A++],V=h[A++],W=h[A++],X=h[A++],Y=d(U,0),Z=d(V,1),$=d(X,2),_=d(V,3),ab=d(W,4),bb=d(X,5),y.push([Y,Z,$],[_,ab,bb])):(Y=h[A++],Z=h[A++],$=h[A++],Y=d(Y,0),Z=d(Z,1),$=d($,2),y.push([Y,Z,$])),M&&A++,N)for(var g=0;z>g;g++){var cb=o[g],db=y[A++],eb=cb[2*db],fb=cb[2*db+1];L?(F[0]&&(u[g][Y]=[eb,fb]),F[1]&&(u[g][Z]=[eb,fb]),F[2]&&(u[g][$]=[eb,fb]),F[3]&&(u[g][_]=[eb,fb]),F[4]&&(u[g][ab]=[eb,fb]),F[5]&&(u[g][bb]=[eb,fb])):(F[0]&&(u[g][Y]=[eb,fb]),F[1]&&(u[g][Z]=[eb,fb]),F[2]&&(u[g][$]=[eb,fb]))}if(O)for(var g=0;z>g;g++){for(var cb=o[g],gb=0;T>gb;gb++){var db=h[A++];G[gb][0]=cb[2*db],G[gb][1]=cb[2*db+1]}L?(F[0]&&(u[g][Y]=G[0].slice()),F[1]&&(u[g][Z]=G[1].slice()),F[2]&&(u[g][$]=G[3].slice()),F[3]&&(u[g][_]=G[1].slice()),F[4]&&(u[g][ab]=G[2].slice()),F[5]&&(u[g][bb]=G[3].slice())):(F[0]&&(u[g][Y]=G[0].slice()),F[1]&&(u[g][Z]=G[1].slice()),F[2]&&(u[g][$]=G[2].slice()))}if(P){var hb=3*h[A++],ib=k[hb++],jb=k[hb++],kb=k[hb];L?(F[0]&&(t[Y]=[ib,jb,kb]),F[1]&&(t[Z]=[ib,jb,kb]),F[2]&&(t[$]=[ib,jb,kb]),F[3]&&(t[_]=[ib,jb,kb]),F[4]&&(t[ab]=[ib,jb,kb]),F[5]&&(t[bb]=[ib,jb,kb])):(F[0]&&(t[Y]=[ib,jb,kb]),F[1]&&(t[Z]=[ib,jb,kb]),F[2]&&(t[$]=[ib,jb,kb]))}if(Q){for(var g=0;T>g;g++){var hb=3*h[A++];H[g][0]=k[hb++],H[g][1]=k[hb++],H[g][2]=k[hb]}L?(F[0]&&(t[Y]=H[0].slice()),F[1]&&(t[Z]=H[1].slice()),F[2]&&(t[$]=H[3].slice()),F[3]&&(t[_]=H[1].slice()),F[4]&&(t[ab]=H[2].slice()),F[5]&&(t[bb]=H[3].slice())):(F[0]&&(t[Y]=H[0].slice()),F[1]&&(t[Z]=H[1].slice()),F[2]&&(t[$]=H[2].slice()))}if(R){var lb=h[A++],mb=c(l[lb]);L?(F[0]&&(v[Y]=mb),F[1]&&(v[Z]=mb),F[2]&&(v[$]=mb),F[3]&&(v[_]=mb),F[4]&&(v[ab]=mb),F[5]&&(v[bb]=mb)):(F[0]&&(v[Y]=mb),F[1]&&(v[Z]=mb),F[2]&&(v[$]=mb))}if(S){for(var g=0;T>g;g++){var lb=h[A++];I[g]=c(l[lb])}L?(F[0]&&(v[Y]=I[0].slice()),F[1]&&(v[Z]=I[1].slice()),F[2]&&(v[$]=I[3].slice()),F[3]&&(v[_]=I[1].slice()),F[4]&&(v[ab]=I[2].slice()),F[5]&&(v[bb]=I[3].slice())):(F[0]&&(v[Y]=I[0].slice()),F[1]&&(v[Z]=I[1].slice()),F[2]&&(v[$]=I[2].slice()))}}return e},_parseSkeleton:function(a){for(var b=[],c=a.bones,d=0;d<c.length;d++){var e=c[d],f=new o({index:d,parentIndex:e.parent,name:e.name});f.node=new k({name:e.name,position:new p(e.pos[0],e.pos[1],e.pos[2]),rotation:new q(e.rotq[0],e.rotq[1],e.rotq[2],e.rotq[3]),scale:new p(e.scl[0],e.scl[1],e.scl[2])}),b.push(f)}var g=new n({joints:b});if(g.updateHierarchy(),g.updateJointMatrices(),g.update(),a.animation){for(var h=a.animation.hierarchy,i=[],d=0;d<h.length;d++){var j=h[d],l=i[d]={keyFrames:[]};l.name=b[d].name;for(var m=0;m<j.keys.length;m++){var r=j.keys[m];l.keyFrames[m]={};var t=l.keyFrames[m];t.time=1e3*parseFloat(r.time),r.pos&&(t.position=u.fromValues(r.pos[0],r.pos[1],r.pos[2])),r.rot&&(t.rotation=v.fromValues(r.rot[0],r.rot[1],r.rot[2],r.rot[3])),r.scl&&(t.scale=u.fromValues(r.scl[0],r.scl[1],r.scl[2]))}}var w=new s({jointClips:i});g.addClip(w)}return g},_parseMaterial:function(a,b){var d="buildin.lambert",e=a.shading&&a.shading.toLowerCase();("phong"===e||"lambert"===e)&&(d="buildin."+e);var f=[];a.mapDiffuse&&f.push("diffuseMap"),(a.mapNormal||a.mapBump)&&f.push("normalMap");var i;if(0===b)i=m.get(d,f);else{i=new g({vertex:g.source(d+".vertex"),fragment:g.source(d+".fragment")});for(var j=0;f>j;j++)i.enableTexture(f[j]);i.define("vertex","SKINNING"),i.define("vertex","JOINT_NUMBER",b)}var k=new h({shader:i});return a.colorDiffuse?k.set("color",a.colorDiffuse):a.DbgColor&&k.set("color",c(a.DbgColor)),a.colorSpecular&&k.set("specular",a.colorSpecular),void 0!==a.transparent&&a.transparent&&(k.transparent=!0),void 0!==a.depthTest&&(k.depthTest=a.depthTest),void 0!==a.depthWrite&&(k.depthMask=a.depthWrite),a.transparency&&a.transparency<1&&k.set("opacity",a.transparency),a.specularCoef&&k.set("shininess",a.specularCoef),a.mapDiffuse&&k.set("diffuseMap",this._loadTexture(a.mapDiffuse,a.mapDiffuseWrap)),a.mapBump&&k.set("normalMap",this._loadTexture(a.mapBump,a.mapBumpWrap)),a.mapNormal&&k.set("normalMap",this._loadTexture(a.mapNormal,a.mapBumpWrap)),k},_loadTexture:function(a,b){var c=new Image,d=new l;d.image=c,b&&b.length&&(d.wrapS=r[b[0].toUpperCase()],d.wrapT=r[b[1].toUpperCase()]),c.onload=function(){d.dirty()};var e=this.textureRootPath||this.rootPath;return c.src=f.relative2absolute(a,e),d}});return w}),d("qtek/math/Matrix2",["require","../dep/glmatrix"],function(a){var b=a("../dep/glmatrix"),c=b.mat2,d=function(){this._array=c.create(),this._dirty=!0};return d.prototype={constructor:d,clone:function(){return(new d).copy(this)},copy:function(a){return c.copy(this._array,a._array),this._dirty=!0,this},adjoint:function(){return c.adjoint(this._array,this._array),this._dirty=!0,this},determinant:function(){return c.determinant(this._array)},identity:function(){return c.identity(this._array),this._dirty=!0,this},invert:function(){return c.invert(this._array,this._array),this._dirty=!0,this},mul:function(a){return c.mul(this._array,this._array,a._array),this._dirty=!0,this},mulLeft:function(a){return c.mul(this._array,a._array,this._array),this._dirty=!0,this},multiply:function(a){return c.multiply(this._array,this._array,a._array),this._dirty=!0,this},multiplyLeft:function(a){return c.multiply(this._array,a._array,this._array),this._dirty=!0,this},rotate:function(a){return c.rotate(this._array,this._array,a),this._dirty=!0,this},scale:function(a){return c.scale(this._array,this._array,a._array),this._dirty=!0,this},transpose:function(){return c.transpose(this._array,this._array),this._dirty=!0,this},toString:function(){return"["+Array.prototype.join.call(this._array,",")+"]"}},d.adjoint=function(a,b){return c.adjoint(a._array,b._array),a._dirty=!0,a},d.copy=function(a,b){return c.copy(a._array,b._array),a._dirty=!0,a},d.determinant=function(a){return c.determinant(a._array)},d.identity=function(a){return c.identity(a._array),a._dirty=!0,a},d.invert=function(a,b){return c.invert(a._array,b._array),a._dirty=!0,a},d.mul=function(a,b,d){return c.mul(a._array,b._array,d._array),a._dirty=!0,a},d.multiply=d.mul,d.rotate=function(a,b,d){return c.rotate(a._array,b._array,d),a._dirty=!0,a},d.scale=function(a,b,d){return c.scale(a._array,b._array,d._array),a._dirty=!0,a},d.transpose=function(a,b){return c.transpose(a._array,b._array),a._dirty=!0,a},d}),d("qtek/math/Matrix2d",["require","../dep/glmatrix"],function(a){var b=a("../dep/glmatrix"),c=b.mat2d,d=function(){this._array=c.create(),this._dirty=!0};return d.prototype={constructor:d,clone:function(){return(new d).copy(this)},copy:function(a){return c.copy(this._array,a._array),this._dirty=!0,this},determinant:function(){return c.determinant(this._array)},identity:function(){return c.identity(this._array),this._dirty=!0,this},invert:function(){return c.invert(this._array,this._array),this._dirty=!0,this},mul:function(a){return c.mul(this._array,this._array,a._array),this._dirty=!0,this},mulLeft:function(a){return c.mul(this._array,a._array,this._array),this._dirty=!0,this},multiply:function(a){return c.multiply(this._array,this._array,a._array),this._dirty=!0,this},multiplyLeft:function(a){return c.multiply(this._array,a._array,this._array),this._dirty=!0,this},rotate:function(a){return c.rotate(this._array,this._array,a),this._dirty=!0,this},scale:function(a){return c.scale(this._array,this._array,a._array),this._dirty=!0,this},translate:function(a){return c.translate(this._array,this._array,a._array),this._dirty=!0,this},toString:function(){return"["+Array.prototype.join.call(this._array,",")+"]"}},d.copy=function(a,b){return c.copy(a._array,b._array),a._dirty=!0,a},d.determinant=function(a){return c.determinant(a._array)},d.identity=function(a){return c.identity(a._array),a._dirty=!0,a},d.invert=function(a,b){return c.invert(a._array,b._array),a._dirty=!0,a},d.mul=function(a,b,d){return c.mul(a._array,b._array,d._array),a._dirty=!0,a},d.multiply=d.mul,d.rotate=function(a,b,d){return c.rotate(a._array,b._array,d),a._dirty=!0,a},d.scale=function(a,b,d){return c.scale(a._array,b._array,d._array),a._dirty=!0,a},d.translate=function(a,b,d){return c.translate(a._array,b._array,d._array),a._dirty=!0,a},d}),d("qtek/math/Matrix3",["require","../dep/glmatrix"],function(a){var b=a("../dep/glmatrix"),c=b.mat3,d=function(){this._array=c.create(),this._dirty=!0};return d.prototype={constructor:d,adjoint:function(){return c.adjoint(this._array,this._array),this._dirty=!0,this},clone:function(){return(new d).copy(this)},copy:function(a){return c.copy(this._array,a._array),this._dirty=!0,this},determinant:function(){return c.determinant(this._array)},fromMat2d:function(a){return c.fromMat2d(this._array,a._array),this._dirty=!0,this},fromMat4:function(a){return c.fromMat4(this._array,a._array),this._dirty=!0,this},fromQuat:function(a){return c.fromQuat(this._array,a._array),this._dirty=!0,this},identity:function(){return c.identity(this._array),this._dirty=!0,this},invert:function(){return c.invert(this._array,this._array),this._dirty=!0,this},mul:function(a){return c.mul(this._array,this._array,a._array),this._dirty=!0,this},mulLeft:function(a){return c.mul(this._array,a._array,this._array),this._dirty=!0,this},multiply:function(a){return c.multiply(this._array,this._array,a._array),this._dirty=!0,this},multiplyLeft:function(a){return c.multiply(this._array,a._array,this._array),this._dirty=!0,this},rotate:function(a){return c.rotate(this._array,this._array,a),this._dirty=!0,this},scale:function(a){return c.scale(this._array,this._array,a._array),this._dirty=!0,this},translate:function(a){return c.translate(this._array,this._array,a._array),this._dirty=!0,this},normalFromMat4:function(a){return c.normalFromMat4(this._array,a._array),this._dirty=!0,this},transpose:function(){return c.transpose(this._array,this._array),this._dirty=!0,this},toString:function(){return"["+Array.prototype.join.call(this._array,",")+"]"}},d.adjoint=function(a,b){return c.adjoint(a._array,b._array),a._dirty=!0,a},d.copy=function(a,b){return c.copy(a._array,b._array),a._dirty=!0,a},d.determinant=function(a){return c.determinant(a._array)},d.identity=function(a){return c.identity(a._array),a._dirty=!0,a},d.invert=function(a,b){return c.invert(a._array,b._array),a},d.mul=function(a,b,d){return c.mul(a._array,b._array,d._array),a._dirty=!0,a},d.multiply=d.mul,d.fromMat2d=function(a,b){return c.fromMat2d(a._array,b._array),a._dirty=!0,a},d.fromMat4=function(a,b){return c.fromMat4(a._array,b._array),a._dirty=!0,a},d.fromQuat=function(a,b){return c.fromQuat(a._array,b._array),a._dirty=!0,a},d.normalFromMat4=function(a,b){return c.normalFromMat4(a._array,b._array),a._dirty=!0,a},d.rotate=function(a,b,d){return c.rotate(a._array,b._array,d),a._dirty=!0,a},d.scale=function(a,b,d){return c.scale(a._array,b._array,d._array),a._dirty=!0,a},d.transpose=function(a,b){return c.transpose(a._array,b._array),a._dirty=!0,a},d.translate=function(a,b,d){return c.translate(a._array,b._array,d._array),a._dirty=!0,a},d}),d("qtek/math/Value",["require","./Vector3","./Vector2"],function(a){var b=a("./Vector3"),c=a("./Vector2"),d=function(){};d.prototype.get=function(){};var e=function(a){this.get=function(){return a}};e.prototype=new d,e.prototype.constructor=e;var f=function(a){var b=a.constructor;this.get=function(c){return c||(c=new b),c.copy(a),c}};f.prototype=new d,f.prototype.constructor=f;var g=function(a,b){var c=b-a;this.get=function(){return Math.random()*c+a}};g.prototype=new d,g.prototype.constructor=g;var h=function(a,b){var d=b.x-a.x,e=b.y-a.y;this.get=function(b){return b||(b=new c),c.set(b,d*Math.random()+a._array[0],e*Math.random()+a._array[1]),b}};h.prototype=new d,h.prototype.constructor=h;var i=function(a,c){var d=c.x-a.x,e=c.y-a.y,f=c.z-a.z;this.get=function(c){return c||(c=new b),b.set(c,d*Math.random()+a._array[0],e*Math.random()+a._array[1],f*Math.random()+a._array[2]),c}};return i.prototype=new d,i.prototype.constructor=i,d.constant=function(a){return new e(a)},d.vector=function(a){return new f(a)},d.random1D=function(a,b){return new g(a,b)},d.random2D=function(a,b){return new h(a,b)},d.random3D=function(a,b){return new i(a,b)},d}),d("qtek/math/Vector4",["require","../dep/glmatrix"],function(a){var b=a("../dep/glmatrix"),c=b.vec4,d=function(a,b,d,e){a=a||0,b=b||0,d=d||0,e=e||0,this._array=c.fromValues(a,b,d,e),this._dirty=!0};d.prototype={constructor:d,add:function(a){return c.add(this._array,this._array,a._array),this._dirty=!0,this},set:function(a,b,c,d){return this._array[0]=a,this._array[1]=b,this._array[2]=c,this._array[3]=d,this._dirty=!0,this},setArray:function(a){return this._array[0]=a[0],this._array[1]=a[1],this._array[2]=a[2],this._array[3]=a[3],this._dirty=!0,this},clone:function(){return new d(this.x,this.y,this.z,this.w)},copy:function(a){return c.copy(this._array,a._array),this._dirty=!0,this},dist:function(a){return c.dist(this._array,a._array)},distance:function(a){return c.distance(this._array,a._array)},div:function(a){return c.div(this._array,this._array,a._array),this._dirty=!0,this},divide:function(a){return c.divide(this._array,this._array,a._array),this._dirty=!0,this},dot:function(a){return c.dot(this._array,a._array)},len:function(){return c.len(this._array)},length:function(){return c.length(this._array)},lerp:function(a,b,d){return c.lerp(this._array,a._array,b._array,d),this._dirty=!0,this},min:function(a){return c.min(this._array,this._array,a._array),this._dirty=!0,this},max:function(a){return c.max(this._array,this._array,a._array),this._dirty=!0,this},mul:function(a){return c.mul(this._array,this._array,a._array),this._dirty=!0,this},multiply:function(a){return c.multiply(this._array,this._array,a._array),this._dirty=!0,this},negate:function(){return c.negate(this._array,this._array),this._dirty=!0,this},normalize:function(){return c.normalize(this._array,this._array),this._dirty=!0,this},random:function(a){return c.random(this._array,a),this._dirty=!0,this},scale:function(a){return c.scale(this._array,this._array,a),this._dirty=!0,this},scaleAndAdd:function(a,b){return c.scaleAndAdd(this._array,this._array,a._array,b),this._dirty=!0,this},sqrDist:function(a){return c.sqrDist(this._array,a._array)},squaredDistance:function(a){return c.squaredDistance(this._array,a._array)},sqrLen:function(){return c.sqrLen(this._array)},squaredLength:function(){return c.squaredLength(this._array)},sub:function(a){return c.sub(this._array,this._array,a._array),this._dirty=!0,this},subtract:function(a){return c.subtract(this._array,this._array,a._array),this._dirty=!0,this},transformMat4:function(a){return c.transformMat4(this._array,this._array,a._array),this._dirty=!0,this},transformQuat:function(a){return c.transformQuat(this._array,this._array,a._array),this._dirty=!0,this},toString:function(){return"["+Array.prototype.join.call(this._array,",")+"]"}};var e=Object.defineProperty;if(e){var f=d.prototype;e(f,"x",{get:function(){return this._array[0]},set:function(a){this._array[0]=a,this._dirty=!0}}),e(f,"y",{get:function(){return this._array[1]},set:function(a){this._array[1]=a,this._dirty=!0}}),e(f,"z",{get:function(){return this._array[2]},set:function(a){this._array[2]=a,this._dirty=!0}}),e(f,"w",{get:function(){return this._array[3]},set:function(a){this._array[3]=a,this._dirty=!0}})}return d.add=function(a,b,d){return c.add(a._array,b._array,d._array),a._dirty=!0,a},d.set=function(a,b,d,e,f){c.set(a._array,b,d,e,f),a._dirty=!0},d.copy=function(a,b){return c.copy(a._array,b._array),a._dirty=!0,a},d.dist=function(a,b){return c.distance(a._array,b._array)},d.distance=d.dist,d.div=function(a,b,d){return c.divide(a._array,b._array,d._array),a._dirty=!0,a},d.divide=d.div,d.dot=function(a,b){return c.dot(a._array,b._array)},d.len=function(a){return c.length(a._array)},d.lerp=function(a,b,d,e){return c.lerp(a._array,b._array,d._array,e),a._dirty=!0,a},d.min=function(a,b,d){return c.min(a._array,b._array,d._array),a._dirty=!0,a},d.max=function(a,b,d){return c.max(a._array,b._array,d._array),a._dirty=!0,a},d.mul=function(a,b,d){return c.multiply(a._array,b._array,d._array),a._dirty=!0,a},d.multiply=d.mul,d.negate=function(a,b){return c.negate(a._array,b._array),a._dirty=!0,a},d.normalize=function(a,b){return c.normalize(a._array,b._array),a._dirty=!0,a},d.random=function(a,b){return c.random(a._array,b),a._dirty=!0,a},d.scale=function(a,b,d){return c.scale(a._array,b._array,d),a._dirty=!0,a},d.scaleAndAdd=function(a,b,d,e){return c.scaleAndAdd(a._array,b._array,d._array,e),a._dirty=!0,a},d.sqrDist=function(a,b){return c.sqrDist(a._array,b._array)},d.squaredDistance=d.sqrDist,d.sqrLen=function(a){return c.sqrLen(a._array)},d.squaredLength=d.sqrLen,d.sub=function(a,b,d){return c.subtract(a._array,b._array,d._array),a._dirty=!0,a},d.subtract=d.sub,d.transformMat4=function(a,b,d){return c.transformMat4(a._array,b._array,d._array),a._dirty=!0,a},d.transformQuat=function(a,b,d){return c.transformQuat(a._array,b._array,d._array),a._dirty=!0,a},d}),d("qtek/particleSystem/Particle",["require","../math/Vector3","../dep/glmatrix"],function(a){var b=a("../math/Vector3"),c=a("../dep/glmatrix"),d=c.vec3,e=function(){this.position=new b,this.rotation=new b,this.velocity=null,this.angularVelocity=null,this.life=1,this.age=0,this.spriteSize=1,this.weight=1,this.emitter=null
};return e.prototype.update=function(a){this.velocity&&d.scaleAndAdd(this.position._array,this.position._array,this.velocity._array,a),this.angularVelocity&&d.scaleAndAdd(this.rotation._array,this.rotation._array,this.angularVelocity._array,a)},e}),d("qtek/particleSystem/Emitter",["require","../core/Base","../math/Vector3","./Particle","../math/Value","../dep/glmatrix"],function(a){var b=a("../core/Base"),c=a("../math/Vector3"),d=a("./Particle"),e=a("../math/Value"),f=a("../dep/glmatrix");f.vec3;var g=b.derive({max:1e3,amount:20,life:null,position:null,rotation:null,velocity:null,angularVelocity:null,spriteSize:null,weight:null,_particlePool:null},function(){this._particlePool=[];for(var a=0;a<this.max;a++){var b=new d;b.emitter=this,this._particlePool.push(b),this.velocity&&(b.velocity=new c),this.angularVelocity&&(b.angularVelocity=new c)}},{emit:function(a){for(var b,c=Math.min(this._particlePool.length,this.amount),d=0;c>d;d++)b=this._particlePool.pop(),this.position&&this.position.get(b.position),this.rotation&&this.rotation.get(b.rotation),this.velocity&&this.velocity.get(b.velocity),this.angularVelocity&&this.angularVelocity.get(b.angularVelocity),this.life&&(b.life=this.life.get()),this.spriteSize&&(b.spriteSize=this.spriteSize.get()),this.weight&&(b.weight=this.weight.get()),b.age=0,a.push(b)},kill:function(a){this._particlePool.push(a)}});return g.constant=e.constant,g.vector=e.vector,g.random1D=e.random1D,g.random2D=e.random2D,g.random3D=e.random3D,g}),d("qtek/particleSystem/Field",["require","../core/Base"],function(a){var b=a("../core/Base"),c=b.derive({},{applyTo:function(){}});return c}),d("qtek/particleSystem/ForceField",["require","./Field","../math/Vector3","../dep/glmatrix"],function(a){var b=a("./Field"),c=a("../math/Vector3"),d=a("../dep/glmatrix"),e=d.vec3,f=b.derive(function(){return{force:new c}},{applyTo:function(a,b,c,d){c>0&&e.scaleAndAdd(a._array,a._array,this.force._array,d/c)}});return f}),d("qtek/particleSystem/particle.essl",[],function(){return"@export buildin.particle.vertex\n\nuniform mat4 worldView : WORLDVIEW;\nuniform mat4 projection : PROJECTION;\n\nattribute vec3 position : POSITION;\nattribute vec3 normal : NORMAL;\n\n#ifdef UV_ANIMATION\nattribute vec2 texcoord0 : TEXCOORD_0;\nattribute vec2 texcoord1 : TEXCOORD_1;\n\nvarying vec2 v_Uv0;\nvarying vec2 v_Uv1;\n#endif\n\nvarying float v_Age;\n\nvoid main() {\n    v_Age = normal.x;\n    float rotation = normal.y;\n\n    vec4 worldViewPosition = worldView * vec4(position, 1.0);\n    gl_Position = projection * worldViewPosition;\n    float w = gl_Position.w;\n    // TODO\n    gl_PointSize = normal.z * projection[0].x / w;\n\n    #ifdef UV_ANIMATION\n        v_Uv0 = texcoord0;\n        v_Uv1 = texcoord1;\n    #endif\n}\n\n@end\n\n@export buildin.particle.fragment\n\nuniform sampler2D sprite;\nuniform sampler2D gradient;\nuniform vec3 color : [1.0, 1.0, 1.0];\nuniform float alpha : 1.0;\n\nvarying float v_Age;\n\n#ifdef UV_ANIMATION\nvarying vec2 v_Uv0;\nvarying vec2 v_Uv1;\n#endif\n\nvoid main() {\n    vec4 color = vec4(color, alpha);\n    #ifdef SPRITE_ENABLED\n        #ifdef UV_ANIMATION\n            color *= texture2D(sprite, mix(v_Uv0, v_Uv1, gl_PointCoord));\n        #else\n            color *= texture2D(sprite, gl_PointCoord);\n        #endif\n    #endif\n    #ifdef GRADIENT_ENABLED\n        color *= texture2D(gradient, vec2(v_Age, 0.5));\n    #endif\n    gl_FragColor = color;\n}\n\n@end"}),d("qtek/particleSystem/ParticleRenderable",["require","../Renderable","../math/Vector3","../core/glenum","../StaticGeometry","../Material","../Shader","../dep/glmatrix","./particle.essl"],function(a){var b=a("../Renderable");a("../math/Vector3"),a("../core/glenum");var c=a("../StaticGeometry"),d=a("../Material"),e=a("../Shader"),f=a("../dep/glmatrix");f.vec3,e["import"](a("./particle.essl"));var g=new e({vertex:e.source("buildin.particle.vertex"),fragment:e.source("buildin.particle.fragment")});g.enableTexture("sprite");var h=b.derive({loop:!0,oneshot:!1,duration:1,spriteAnimationTileX:1,spriteAnimationTileY:1,spriteAnimationRepeat:0,mode:b.POINTS,_elapsedTime:0,_emitting:!0},function(){this.geometry=new c({dynamic:!0}),this.material||(this.material=new d({shader:g,transparent:!0,depthMask:!1})),this._particles=[],this._fields=[],this._emitters=[]},{culling:!1,frustumCulling:!1,castShadow:!1,receiveShadow:!1,addEmitter:function(a){this._emitters.push(a)},removeEmitter:function(a){this._emitters.splice(this._emitters.indexOf(a),1)},addField:function(a){this._fields.push(a)},removeField:function(a){this._fields.splice(this._fields.indexOf(a),1)},reset:function(){for(var a=0;a<this._particles.length;a++){var b=this._particles[a];b.emitter.kill(b)}this._particles.length=0,this._elapsedTime=0,this._emitting=!0},updateParticles:function(a){a/=1e3,this._elapsedTime+=a;var b=this._particles;if(this._emitting){for(var c=0;c<this._emitters.length;c++)this._emitters[c].emit(b);this.oneshot&&(this._emitting=!1)}for(var d=b.length,c=0;d>c;){var e=b[c];e.age+=a,e.age>=e.life?(e.emitter.kill(e),b[c]=b[d-1],b.pop(),d--):c++}for(var c=0;d>c;c++){var e=b[c];if(this._fields.length>0)for(var f=0;f<this._fields.length;f++)this._fields[f].applyTo(e.velocity,e.position,e.weight,a);e.update(a)}},_updateVertices:function(){var a=this.geometry,b=this.spriteAnimationTileX,c=this.spriteAnimationTileY,d=this.spriteAnimationRepeat,e=c*b*d,f=e>1,g=a.attributes.position.value,h=a.attributes.normal.value,i=a.attributes.texcoord0.value,j=a.attributes.texcoord1.value,k=this._particles.length;g&&g.length===3*k||(g=a.attributes.position.value=new Float32Array(3*k),h=a.attributes.normal.value=new Float32Array(3*k),f&&(i=a.attributes.texcoord0.value=new Float32Array(2*k),j=a.attributes.texcoord1.value=new Float32Array(2*k)));for(var l=1/b,m=0;k>m;m++){for(var n=this._particles[m],o=3*m,p=0;3>p;p++)g[o+p]=n.position._array[p],h[o]=n.age/n.life,h[o+1]=0,h[o+2]=n.spriteSize;var q=2*m;if(f){var r=n.age/n.life,s=Math.round(r*(e-1))*d,t=Math.floor(s*l),u=s-t*b;i[q]=u/b,i[q+1]=1-t/c,j[q]=(u+1)/b,j[q+1]=1-(t+1)/c}}a.dirty()},render:function(a){return this._updateVertices(),b.prototype.render.call(this,a)},isFinished:function(){return this._elapsedTime>this.duration&&!this.loop},dispose:function(a){for(var b=0;b<this._particles.length;b++){var c=this._particles[b];c.emitter.kill(c)}this.geometry.dispose(a)},clone:function(){var a=new h({material:this.material});a.loop=this.loop,a.duration=this.duration,a.oneshot=this.oneshot,a.spriteAnimationRepeat=this.spriteAnimationRepeat,a.spriteAnimationTileY=this.spriteAnimationTileY,a.spriteAnimationTileX=this.spriteAnimationTileX,a.position.copy(this.position),a.rotation.copy(this.rotation),a.scale.copy(this.scale);for(var b=0;b<this._children.length;b++)a.add(this._children[b].clone());return a}});return h}),d("qtek/picking/color.essl",[],function(){return"@export buildin.picking.color.vertex\n\nuniform mat4 worldViewProjection : WORLDVIEWPROJECTION;\n\nattribute vec3 position : POSITION;\n\n#ifdef SKINNING\nattribute vec3 weight : WEIGHT;\nattribute vec4 joint : JOINT;\n\nuniform mat4 skinMatrix[JOINT_NUMBER] : SKIN_MATRIX;\n#endif\n\nvoid main(){\n\n    vec3 skinnedPosition = position;\n\n    #ifdef SKINNING\n        \n        @import buildin.chunk.skin_matrix\n\n        skinnedPosition = (skinMatrixWS * vec4(position, 1.0)).xyz;\n    #endif\n\n    gl_Position = worldViewProjection * vec4(skinnedPosition, 1.0);\n}\n\n@end\n\n@end\n@export buildin.picking.color.fragment\n\nuniform vec4 color : [1.0, 1.0, 1.0, 1.0];\n\nvoid main(){\n    gl_FragColor = color;\n}\n\n@end"}),d("qtek/picking/PixelPicking",["require","../core/Base","../FrameBuffer","../Texture2D","../Shader","../Material","./color.essl"],function(a){function b(a){var b=a>>16,c=a-(b<<8)>>8,d=a-(b<<16)-(c<<8);return[b,c,d]}function c(a,b,c){return(a<<16)+(b<<8)+c}var d=a("../core/Base"),e=a("../FrameBuffer"),f=a("../Texture2D"),g=a("../Shader"),h=a("../Material");g.import(a("./color.essl"));var i=d.derive(function(){return{renderer:null,downSampleRatio:1,width:100,height:100,lookupOffset:1,_frameBuffer:null,_texture:null,_shader:null,_idMaterials:[],_lookupTable:[],_meshMaterials:[],_idOffset:0}},function(){this.renderer&&(this.width=this.renderer.getWidth(),this.height=this.renderer.getHeight()),this._init()},{_init:function(){this._texture=new f({width:this.width*this.downSampleRatio,height:this.height*this.downSampleRatio}),this._frameBuffer=new e,this._shader=new g({vertex:g.source("buildin.picking.color.vertex"),fragment:g.source("buildin.picking.color.fragment")})},setPrecision:function(a){this._texture.width=this.width*a,this._texture.height=this.height*a,this.downSampleRatio=a},resize:function(a,b){this._texture.width=a*this.downSampleRatio,this._texture.height=b*this.downSampleRatio,this.width=a,this.height=b,this._texture.dirty()},update:function(a,b){var c=this.renderer;(c.getWidth()!==this.width||c.getHeight()!==this.height)&&this.resize(c.width,c.height),this._frameBuffer.attach(c.gl,this._texture),this._frameBuffer.bind(c),this._idOffset=this.lookupOffset,this._setMaterial(a),c.render(a,b),this._restoreMaterial(),this._frameBuffer.unbind(c)},_setMaterial:function(a){for(var c=0;c<a._children.length;c++){var d=a._children[c];if(d.geometry&&d.material&&d.material.shader){var e=this._idOffset++,f=e-this.lookupOffset,g=this._idMaterials[f];if(!g){g=new h({shader:this._shader});var i=b(e);i[0]/=255,i[1]/=255,i[2]/=255,i[3]=1,g.set("color",i),this._idMaterials[f]=g}this._meshMaterials[f]=d.material,this._lookupTable[f]=d,d.material=g}d._children.length&&this._setMaterial(d)}},pick:function(a,b){var d=this.renderer,e=this.downSampleRatio;a=Math.ceil(e*a),b=Math.ceil(e*(this.height-b)),this._frameBuffer.bind(d);var f=new Uint8Array(4),g=d.gl;if(g.readPixels(a,b,1,1,g.RGBA,g.UNSIGNED_BYTE,f),this._frameBuffer.unbind(d),255===f[3]){var h=c(f[0],f[1],f[2]);if(h){var i=this._lookupTable[h-this.lookupOffset];return i}}},_restoreMaterial:function(){for(var a=0;a<this._lookupTable.length;a++)this._lookupTable[a].material=this._meshMaterials[a]},dispose:function(a){this._frameBuffer.dispose(a),this._shader.dispose(a)}});return i}),d("qtek/picking/RayPicking",["require","../core/Base","../math/Ray","../math/Vector2","../math/Vector3","../math/Matrix4","../Renderable","../StaticGeometry","../core/glenum"],function(a){var b=a("../core/Base"),c=a("../math/Ray"),d=a("../math/Vector2"),e=a("../math/Vector3"),f=a("../math/Matrix4"),g=a("../Renderable"),h=a("../StaticGeometry"),i=a("../core/glenum"),j=b.derive({scene:null,camera:null,renderer:null},function(){this._ray=new c,this._ndc=new d},{pick:function(a,b){var c=this.pickAll(a,b);return c[0]||null},pickAll:function(a,b){this.renderer.screenToNdc(a,b,this._ndc),this.camera.castRay(this._ndc,this._ray);var c=[];return this._intersectNode(this.scene,c),c.sort(this._intersectionCompareFunc),c},_intersectNode:function(a,b){a instanceof g&&a.isRenderable()&&!a.ignorePicking&&a.geometry.isUseFace()&&this._intersectRenderable(a,b);for(var c=0;c<a._children.length;c++)this._intersectNode(a._children[c],b)},_intersectRenderable:function(){var a=new e,b=new e,d=new e,g=new c,k=new f;return function(c,l){g.copy(this._ray),f.invert(k,c.worldTransform),g.applyTransform(k);var m=c.geometry;if(!m.boundingBox||g.intersectBoundingBox(m.boundingBox)){if(m.pickByRay){var n=m.pickByRay(g);return n&&l.push(n),void 0}var o,p=m instanceof h,q=c.cullFace===i.BACK&&c.frontFace===i.CCW||c.cullFace===i.FRONT&&c.frontFace===i.CW;if(p)for(var r=m.faces,s=m.attributes.position.value,t=0;t<r.length;){var u=3*r[t++],v=3*r[t++],w=3*r[t++];if(a._array[0]=s[u],a._array[1]=s[u+1],a._array[2]=s[u+2],b._array[0]=s[v],b._array[1]=s[v+1],b._array[2]=s[v+2],d._array[0]=s[w],d._array[1]=s[w+1],d._array[2]=s[w+2],o=q?g.intersectTriangle(a,b,d,c.culling):g.intersectTriangle(a,d,b,c.culling)){var x=new e;e.transformMat4(x,o,c.worldTransform),l.push(new j.Intersection(o,x,c,[u,v,w],e.dist(x,this._ray.origin)))}}else for(var r=m.faces,s=m.attributes.position.value,t=0;t<r.length;t++){var y=r[t],u=y[0],v=y[1],w=y[2];if(a.setArray(s[u]),b.setArray(s[v]),d.setArray(s[w]),o=q?g.intersectTriangle(a,b,d,c.culling):g.intersectTriangle(a,d,b,c.culling)){var x=new e;e.transformMat4(x,o,c.worldTransform),l.push(new j.Intersection(o,x,c,[u,v,w],e.dist(x,this._ray.origin)))}}}}}(),_intersectionCompareFunc:function(a,b){return a.distance-b.distance}});return j.Intersection=function(a,b,c,d,e){this.point=a,this.pointWorld=b,this.target=c,this.face=d,this.distance=e},j}),d("qtek/plugin/FirstPersonControl",["require","../core/Base","../math/Vector3","../math/Matrix4","../math/Quaternion"],function(a){var b=a("../core/Base"),c=a("../math/Vector3");a("../math/Matrix4"),a("../math/Quaternion");var d=b.derive(function(){return{target:null,domElement:null,sensitivity:1,speed:.4,up:new c(0,1,0),verticalMoveLock:!1,_moveForward:!1,_moveBackward:!1,_moveLeft:!1,_moveRight:!1,_offsetPitch:0,_offsetRoll:0}},function(){this._lockChange=this._lockChange.bind(this),this._keyDown=this._keyDown.bind(this),this._keyUp=this._keyUp.bind(this),this._mouseMove=this._mouseMove.bind(this),this.domElement&&this.enable()},{enable:function(){var a=this.domElement;a.addEventListener("click",this._requestPointerLock),document.addEventListener("pointerlockchange",this._lockChange),document.addEventListener("mozpointerlockchange",this._lockChange),document.addEventListener("webkitpointerlockchange",this._lockChange),document.addEventListener("keydown",this._keyDown),document.addEventListener("keyup",this._keyUp)},disable:function(){this.target.off("beforeupdate",this._beforeUpdateCamera);var a=this.domElement;a.exitPointerLock=a.exitPointerLock||a.mozExitPointerLock||a.webkitExitPointerLock,a.exitPointerLock&&a.exitPointerLock(),this.domElement.removeEventListener("click",this._requestPointerLock),document.removeEventListener("pointerlockchange",this._lockChange),document.removeEventListener("mozpointerlockchange",this._lockChange),document.removeEventListener("webkitpointerlockchange",this._lockChange),document.removeEventListener("keydown",this._keyDown),document.removeEventListener("keyup",this._keyUp)},_requestPointerLock:function(){var a=this;a.requestPointerLock=a.requestPointerLock||a.mozRequestPointerLock||a.webkitRequestPointerLock,a.requestPointerLock()},update:function(a){var b=this.target,c=this.target.position,d=b.localTransform.x.normalize(),e=b.localTransform.z.normalize();this.verticalMoveLock&&(e.y=0,e.normalize());var f=this.speed*a/20;this._moveForward&&c.scaleAndAdd(e,-f),this._moveBackward&&c.scaleAndAdd(e,f),this._moveLeft&&c.scaleAndAdd(d,-f/2),this._moveRight&&c.scaleAndAdd(d,f/2),b.rotateAround(b.position,this.up,-this._offsetPitch*a*Math.PI/360);var d=b.localTransform.right;b.rotateAround(b.position,d,-this._offsetRoll*a*Math.PI/360),this._offsetRoll=this._offsetPitch=0},_lockChange:function(){document.pointerLockElement===this.domElement||document.mozPointerLockElement===this.domElement||document.webkitPointerLockElement===this.domElement?document.addEventListener("mousemove",this._mouseMove,!1):document.removeEventListener("mousemove",this._mouseMove)},_mouseMove:function(a){var b=a.movementX||a.mozMovementX||a.webkitMovementX||0,c=a.movementY||a.mozMovementY||a.webkitMovementY||0;this._offsetPitch+=b*this.sensitivity/200,this._offsetRoll+=c*this.sensitivity/200},_keyDown:function(a){switch(a.keyCode){case 87:case 37:this._moveForward=!0;break;case 83:case 40:this._moveBackward=!0;break;case 65:case 37:this._moveLeft=!0;break;case 68:case 39:this._moveRight=!0}},_keyUp:function(){this._moveForward=!1,this._moveBackward=!1,this._moveLeft=!1,this._moveRight=!1}});return d}),d("qtek/plugin/InfinitePlane",["require","../Mesh","../DynamicGeometry","../math/Plane","../math/Vector3","../math/Matrix4","../math/Ray","../camera/Perspective","../dep/glmatrix"],function(a){var b=a("../Mesh"),c=a("../DynamicGeometry"),d=a("../math/Plane"),e=a("../math/Vector3");a("../math/Matrix4");var f=a("../math/Ray");a("../camera/Perspective");var g=a("../dep/glmatrix");g.mat4;var h=g.vec3;g.vec4;var i=[[0,0],[0,1],[1,1],[1,0]],j=[0,1,2,2,3,0],k=b.derive({camera:null,plane:null,gridSize:1,maxGrid:0,frustumCulling:!1},function(){this.geometry||(this.geometry=new c),this.plane||(this.plane=new d)},{updateGeometry:function(){var a=this._unProjectGrid();if(a){for(var b=this.geometry.attributes.position.value,c=this.geometry.attributes.normal.value,d=this.geometry.attributes.texcoord0.value,e=this.geometry.faces,f=0,g=h.clone(this.plane.normal._array),k=0;6>k;k++){var l=j[k];b[f]=a[l]._array,c[f]=g,d[f]=i[l],f++}e[0]=[0,1,2],e[1]=[3,4,5],this.geometry.dirty()}},_unProjectGrid:function(){for(var a=new d,b=[0,1,0,2,1,3,2,3,4,5,4,6,5,7,6,7,0,4,1,5,2,6,3,7],c=new e,g=new e,h=[],i=[],j=0;4>j;j++)i[j]=new e(0,0);var k=new f;return function(){a.copy(this.plane),a.applyTransform(this.camera.viewMatrix);for(var d=this.camera.frustum.vertices,e=0,f=0;12>f;f++){c._array=d[b[2*f]],g._array=d[b[2*f+1]];var j=a.intersectLine(c,g,h[e]);j&&(h[e]||(h[e]=j),e++)}if(0!==e){for(var f=0;e>f;f++)h[f].applyProjection(this.camera.projectionMatrix);for(var l=h[0]._array[0],m=h[0]._array[1],n=h[0]._array[0],o=h[0]._array[1],f=1;e>f;f++)n=Math.max(n,h[f]._array[0]),o=Math.max(o,h[f]._array[1]),l=Math.min(l,h[f]._array[0]),m=Math.min(m,h[f]._array[1]);if(l!=n&&m!=o){i[0]._array[0]=l,i[0]._array[1]=m,i[1]._array[0]=l,i[1]._array[1]=o,i[2]._array[0]=n,i[2]._array[1]=o,i[3]._array[0]=n,i[3]._array[1]=m;for(var f=0;4>f;f++)this.camera.castRay(i[f],k),k.intersectPlane(this.plane,i[f]);return i}}}}()});return k}),d("qtek/plugin/OrbitControl",["require","../core/Base","../math/Vector3","../math/Matrix4"],function(a){function b(a,b,c){a.addEventListener(b,c)}function c(a,b,c){a.removeEventListener(b,c)}var d=a("../core/Base"),e=a("../math/Vector3");a("../math/Matrix4");var f=d.derive(function(){return{target:null,domElement:null,sensitivity:1,origin:new e,up:new e(0,1,0),minDistance:0,maxDistance:1/0,minPolarAngle:0,maxPolarAngle:Math.PI,_offsetPitch:0,_offsetRoll:0,_panX:0,_panY:0,_offsetX:0,_offsetY:0,_forward:0,_op:-1}},function(){this._mouseDown=this._mouseDown.bind(this),this._mouseUp=this._mouseUp.bind(this),this._mouseMove=this._mouseMove.bind(this),this._mouseOut=this._mouseOut.bind(this),this._mouseWheel=this._mouseWheel.bind(this),this.domElement&&this.enable()},{enable:function(){var a=this.domElement;b(a,"mousedown",this._mouseDown),b(a,"touchstart",this._mouseDown),b(a,"mousewheel",this._mouseWheel),b(a,"DOMMouseScroll",this._mouseWheel)},disable:function(){var a=this.domElement;c(a,"mousedown",this._mouseDown),c(a,"mousemove",this._mouseMove),c(a,"mouseup",this._mouseUp),c(a,"touchstart",this._mouseDown),c(a,"touchmove",this._mouseMove),c(a,"touchend",this._mouseUp),c(a,"mousewheel",this._mouseWheel),c(a,"DOMMouseScroll",this._mouseWheel),this._mouseUp()},_mouseWheel:function(a){a.preventDefault();var b=a.wheelDelta||-a.detail;this._forward+=b*this.sensitivity},_mouseDown:function(a){var c=this.domElement;b(c,"mousemove",this._mouseMove),b(c,"mouseup",this._mouseUp),b(c,"mouseout",this._mouseOut),b(c,"touchend",this._mouseUp),b(c,"touchmove",this._mouseMove);var d=a.pageX,e=a.pageY;if(a.targetTouches){var f=a.targetTouches[0];d=f.clientX,e=f.clientY,this._op=0}this._offsetX=d,this._offsetY=e,0===a.button?this._op=0:1===a.button&&(this._op=1)},_mouseMove:function(a){var b=a.pageX,c=a.pageY;if(a.targetTouches){var d=a.targetTouches[0];b=d.clientX,c=d.clientY,a.preventDefault()}var e=b-this._offsetX,f=c-this._offsetY;if(0===this._op)this._offsetPitch+=e*this.sensitivity/100,this._offsetRoll+=f*this.sensitivity/100;else if(1===this._op){var g,h=this.origin.distance(this.target.position);g=this.target.fov?Math.sin(this.target.fov*Math.PI/360)/200:.005,this._panX+=e*this.sensitivity*h*g,this._panY+=f*this.sensitivity*h*g}this._offsetX=b,this._offsetY=c},_mouseUp:function(){var a=this.domElement;c(a,"mousemove",this._mouseMove),c(a,"mouseup",this._mouseUp),c(a,"mouseout",this._mouseOut),c(a,"touchend",this._mouseUp),c(a,"touchmove",this._mouseMove),this._op=-1},_mouseOut:function(){this._mouseUp()},update:function(){var a=this.target,b=a.localTransform.z.normalize(),c=a.localTransform.y.normalize();if(0!==this._op||0===this._offsetPitch&&0===this._offsetRoll){if(1===this._op){var d=a.localTransform.x.normalize().scale(-this._panX),c=a.localTransform.y.normalize().scale(this._panY);a.position.add(d).add(c),this.origin.add(d).add(c),this._panX=this._panY=0}}else{a.rotateAround(this.origin,this.up,-this._offsetPitch);var d=a.localTransform.x;a.rotateAround(this.origin,d,-this._offsetRoll);var b=a.worldTransform.z.normalize(),e=Math.acos(this.up.dot(b));this._offsetRoll>0&&e<=this.minPolarAngle?a.rotateAround(this.origin,d,-e+this.minPolarAngle):this._offsetRoll<0&&e>=this.maxPolarAngle&&a.rotateAround(this.origin,d,-e+this.maxPolarAngle),this._offsetRoll=this._offsetPitch=0}if(0!==this._forward){var f=a.position.distance(this.origin),g=f+this._forward*f/5e3;g<this.maxDistance&&g>this.minDistance&&a.position.scaleAndAdd(b,this._forward*f/5e3),this._forward=0}}});return f}),d("qtek/plugin/Skybox",["require","../Mesh","../geometry/Cube","../Shader","../Material"],function(a){var b,c=a("../Mesh"),d=a("../geometry/Cube"),e=a("../Shader"),f=a("../Material"),g=c.derive(function(){b||(b=new e({vertex:e.source("buildin.skybox.vertex"),fragment:e.source("buildin.skybox.fragment")}));var a=new f({shader:b,depthMask:!1});return{scene:null,geometry:new d,material:a,culling:!1}},function(){var a=this.scene;a&&this.attachScene(a)},{attachScene:function(a){this.scene&&this.detachScene(),this.scene=a,a.on("beforerender",this._beforeRenderScene,this)},detachScene:function(){this.scene&&this.scene.off("beforerender",this._beforeRenderScene,this),this.scene=null},dispose:function(){this.detachScene()},_beforeRenderScene:function(a,b,c){this.position.copy(c.getWorldPosition()),this.update(),a.renderQueue([this],c)}});return g}),d("qtek/plugin/Skydome",["require","../Mesh","../geometry/Sphere","../Shader","../Material","../shader/library"],function(a){var b=a("../Mesh"),c=a("../geometry/Sphere"),d=a("../Shader"),e=a("../Material");a("../shader/library");var f,g=b.derive(function(){f||(f=new d({vertex:d.source("buildin.basic.vertex"),fragment:d.source("buildin.basic.fragment")}),f.enableTexture("diffuseMap"));var a=new e({shader:f,depthMask:!1});return{scene:null,geometry:new c({widthSegments:30,heightSegments:30}),material:a,culling:!1}},function(){var a=this.scene;a&&this.attachScene(a)},{attachScene:function(a){this.scene&&this.detachScene(),this.scene=a,a.on("beforerender",this._beforeRenderScene,this)},detachScene:function(){this.scene&&this.scene.off("beforerender",this._beforeRenderScene,this),this.scene=null},_beforeRenderScene:function(a,b,c){this.position.copy(c.getWorldPosition()),this.update(),a.renderQueue([this],c)},dispose:function(){this.detachScene()}});return g}),d("qtek/prePass/EnvironmentMap",["require","../core/Base","../math/Vector3","../camera/Perspective","../core/glenum","../FrameBuffer","../TextureCube"],function(a){var b=a("../core/Base"),c=a("../math/Vector3"),d=a("../camera/Perspective");a("../core/glenum");var e=a("../FrameBuffer");a("../TextureCube");var f=["px","nx","py","ny","pz","nz"],g=b.derive(function(){var a={position:new c,far:1e3,near:.1,texture:null};return a._cameras={px:new d({fov:90}),nx:new d({fov:90}),py:new d({fov:90}),ny:new d({fov:90}),pz:new d({fov:90}),nz:new d({fov:90})},a._cameras.px.lookAt(c.POSITIVE_X,c.NEGATIVE_Y),a._cameras.nx.lookAt(c.NEGATIVE_X,c.NEGATIVE_Y),a._cameras.py.lookAt(c.POSITIVE_Y,c.POSITIVE_Z),a._cameras.ny.lookAt(c.NEGATIVE_Y,c.NEGATIVE_Z),a._cameras.pz.lookAt(c.POSITIVE_Z,c.NEGATIVE_Y),a._cameras.nz.lookAt(c.NEGATIVE_Z,c.NEGATIVE_Y),a._frameBuffers={px:new e,nx:new e,py:new e,ny:new e,pz:new e,nz:new e},a},{render:function(a,b,d){var e=a.gl;d||b.update(!0);for(var g=this.texture.width,h=180*(2*Math.atan(g/(g-.5))/Math.PI),i=0;6>i;i++){var j=f[i],k=this._cameras[j];c.copy(k.position,this.position),k.far=this.far,k.near=this.near,k.fov=h,this._frameBuffers[j].attach(e,this.texture,e.COLOR_ATTACHMENT0,e.TEXTURE_CUBE_MAP_POSITIVE_X+i),this._frameBuffers[j].bind(a),a.render(b,k,!0),this._frameBuffers[j].unbind(a)}},dispose:function(a){for(var b=0;6>b;b++){var c=f[b];this._frameBuffers[c].dispose(a.gl)}}});return g}),d("qtek/prePass/Reflection",["require","../core/Base","../math/Vector4"],function(a){var b=a("../core/Base");a("../math/Vector4");var c=b.derive(function(){console.warn("TODO")},{render:function(){}});return c}),d("qtek/prePass/ShadowMap",["require","../core/Base","../core/glenum","../math/Vector3","../math/BoundingBox","../math/Frustum","../math/Matrix4","../Renderer","../Shader","../Light","../Mesh","../light/Spot","../light/Directional","../light/Point","../shader/library","../Material","../FrameBuffer","../Texture2D","../TextureCube","../camera/Perspective","../camera/Orthographic","../compositor/Pass","../compositor/TexturePool","../dep/glmatrix"],function(a){var b=a("../core/Base"),c=a("../core/glenum"),d=a("../math/Vector3"),e=a("../math/BoundingBox"),f=a("../math/Frustum"),g=a("../math/Matrix4"),h=a("../Renderer"),i=a("../Shader");a("../Light"),a("../Mesh");var j=a("../light/Spot"),k=a("../light/Directional"),l=a("../light/Point");a("../shader/library");var m=a("../Material"),n=a("../FrameBuffer"),o=a("../Texture2D"),p=a("../TextureCube"),q=a("../camera/Perspective"),r=a("../camera/Orthographic"),s=a("../compositor/Pass"),t=a("../compositor/TexturePool"),u=a("../dep/glmatrix"),v=u.mat4;u.vec3;var w=["px","nx","py","ny","pz","nz"],x=b.derive(function(){return{softShadow:x.PCF,shadowBlur:1,shadowCascade:1,cascadeSplitLogFactor:.2,lightFrustumBias:10,_frameBuffer:new n,_textures:{},_shadowMapNumber:{POINT_LIGHT:0,DIRECTIONAL_LIGHT:0,SPOT_LIGHT:0},_meshMaterials:{},_depthMaterials:{},_depthShaders:{},_distanceMaterials:{},_opaqueCasters:[],_receivers:[],_lightsCastShadow:[],_lightCameras:{},_texturePool:new t}},function(){this._gaussianPassH=new s({fragment:i.source("buildin.compositor.gaussian_blur_h")}),this._gaussianPassV=new s({fragment:i.source("buildin.compositor.gaussian_blur_v")}),this._gaussianPassH.setUniform("blurSize",this.shadowBlur),this._gaussianPassV.setUniform("blurSize",this.shadowBlur),this._outputDepthPass=new s({fragment:i.source("buildin.sm.debug_depth")})},{render:function(a,b,c){this.trigger("beforerender",this,a,b,c),this._renderShadowPass(a,b,c),this.trigger("afterrender",this,a,b,c)},renderDebug:function(a,b){var d=a.clear;a.clear=c.DEPTH_BUFFER_BIT;var e=a.viewport,f=0,g=0,h=b||e.width/4,i=h;this.softShadow===x.VSM?this._outputDepthPass.material.shader.define("fragment","USE_VSM"):this._outputDepthPass.material.shader.unDefine("fragment","USE_VSM");for(var j in this._textures)a.setViewport(f,g,h,i),this._outputDepthPass.setUniform("depthMap",this._textures[j]),this._outputDepthPass.render(a),f+=h;a.setViewport(e),a.clear=d},_bindDepthMaterial:function(a,b,c){for(var d=0;d<a.length;d++){var e,f,g=a[d],h=g.material.shadowTransparentMap instanceof o,j=g.material.shadowTransparentMap,k=g.joints&&g.joints.length;h?(e=k+"-"+j.__GUID__,f=k+"s"):(e=k,f=k);var l=this._depthMaterials[e],n=this._depthShaders[f];g.material!==l&&(n||(n=new i({vertex:i.source("buildin.sm.depth.vertex"),fragment:i.source("buildin.sm.depth.fragment")}),k>0&&(n.define("vertex","SKINNING"),n.define("vertex","JOINT_NUMBER",k)),h&&n.define("both","SHADOW_TRANSPARENT"),this._depthShaders[f]=n),l||(l=new m({shader:n}),this._depthMaterials[e]=l),this._meshMaterials[g.__GUID__]=g.material,g.material=l,this.softShadow===x.VSM?n.define("fragment","USE_VSM"):n.unDefine("fragment","USE_VSM"),l.setUniform("bias",b),l.setUniform("slopeScale",c),h&&l.set("shadowTransparentMap",j))}},_bindDistanceMaterial:function(a,b){for(var c=0;c<a.length;c++){var d=a[c],e=d.joints&&d.joints.length,f=this._distanceMaterials[e];d.material!==f&&(f||(f=new m({shader:new i({vertex:i.source("buildin.sm.distance.vertex"),fragment:i.source("buildin.sm.distance.fragment")})}),e>0&&(f.shader.define("vertex","SKINNING"),f.shader.define("vertex","JOINT_NUMBER",e)),this._distanceMaterials[e]=f),this._meshMaterials[d.__GUID__]=d.material,d.material=f,this.softShadow===x.VSM?f.shader.define("fragment","USE_VSM"):f.shader.unDefine("fragment","USE_VSM"),f.set("lightPosition",b.position._array),f.set("range",5*b.range))}},_restoreMaterial:function(a){for(var b=0;b<a.length;b++){var c=a[b];c.material=this._meshMaterials[c.__GUID__]}},_updateCaster:function(a){a.castShadow&&this._opaqueCasters.push(a),a.receiveShadow?(this._receivers.push(a),a.material.__shadowUniformUpdated=!1,a.material.shader.__shadowDefineUpdated=!1,a.material.set("shadowEnabled",1)):a.material.set("shadowEnabled",0),this.softShadow===x.VSM?a.material.shader.define("fragment","USE_VSM"):a.material.shader.unDefine("fragment","USE_VSM")},_update:function(a){for(var b=0;b<a.opaqueQueue.length;b++)this._updateCaster(a.opaqueQueue[b]);for(var b=0;b<a.transparentQueue.length;b++)this._updateCaster(a.transparentQueue[b]);for(var b=0;b<a.lights.length;b++){var c=a.lights[b];c.castShadow&&this._lightsCastShadow.push(c)}},_renderShadowPass:function(a,b,c){for(var d in this._shadowMapNumber)this._shadowMapNumber[d]=0;this._lightsCastShadow.length=0,this._opaqueCasters.length=0,this._receivers.length=0;var e=a.gl;if(b.update(),this._update(b),this._lightsCastShadow.length){e.enable(e.DEPTH_TEST),e.depthMask(!0),e.disable(e.BLEND),e.clearColor(1,1,1,1);for(var f=[],g=[],h=[],i=[],m=[],n=[],o=[],p=0;p<this._lightsCastShadow.length;p++){var q=this._lightsCastShadow[p];q instanceof k?this._renderDirectionalLightShadow(a,q,b,c,this._opaqueCasters,m,i,h):q instanceof j?this._renderSpotLightShadow(a,q,this._opaqueCasters,g,f):q instanceof l&&this._renderPointLightShadow(a,q,this._opaqueCasters,o,n),this._shadowMapNumber[q.type]++}this._restoreMaterial(this._opaqueCasters),this.shadowCascade>1&&this._shadowMapNumber.DIRECTIONAL_LIGHT>1&&console.warn("There is only one directional light can cast shadow when using cascaded shadow map");var r=m.slice(),s=m.slice();r.pop(),s.shift(),r.reverse(),s.reverse(),h.reverse(),i.reverse();for(var p=0;p<this._receivers.length;p++){var t=this._receivers[p],u=t.material;if(!u.__shadowUniformUpdated){var v=u.shader;if(!v.__shadowDefineUpdated){var w=!1;for(var x in this._shadowMapNumber){var y=this._shadowMapNumber[x],z=x+"_SHADOWMAP_NUMBER";v.fragmentDefines[z]!==y&&y>0&&(v.fragmentDefines[z]=y,w=!0)}w&&v.dirty(),this.shadowCascade>1?v.define("fragment","SHADOW_CASCADE",this.shadowCascade):v.unDefine("fragment","SHADOW_CASCADE"),v.__shadowDefineUpdated=!0}f.length>0&&(u.setUniform("spotLightShadowMaps",f),u.setUniform("spotLightMatrices",g)),h.length>0&&(u.setUniform("directionalLightShadowMaps",h),this.shadowCascade>1&&(u.setUniform("shadowCascadeClipsNear",r),u.setUniform("shadowCascadeClipsFar",s)),u.setUniform("directionalLightMatrices",i)),n.length>0&&(u.setUniform("pointLightShadowMaps",n),u.setUniform("pointLightRanges",o)),u.__shadowUniformUpdated=!0}}}},_renderDirectionalLightShadow:function(){var a=new f,b=new g,c=new e,d=new g,i=new g,j=new g,k=0,l=0;return function(e,f,m,n,o,p,q,r){var s=f.shadowBias;this._bindDepthMaterial(o,s,f.shadowSlopeScale),o.sort(h.opaqueSortFunc);var t=n.far,u=-n.sceneBoundingBoxLastFrame.min.z;l=Math.max(u-k,0),k=u,u+=l,u>n.near&&(n.far=Math.min(n.far,u)),n.updateProjectionMatrix(),n.frustum.setFromProjection(n.projectionMatrix);var w=this._getDirectionalLightCamera(f,m,n),y=i._array;v.copy(y,w.worldTransform._array),v.invert(y,y),v.multiply(y,w.projectionMatrix._array,y),v.multiply(y,y,n.worldTransform._array),j.copy(w.projectionMatrix);for(var z=[],A=n.near,B=n.far,C=n.fov/180*Math.PI,D=n.aspect,E=(A+t)/(A-t),F=2*A*t/(A-t),G=0;G<=this.shadowCascade;G++){var H=A*Math.pow(B/A,G/this.shadowCascade),I=A+(B-A)*G/this.shadowCascade,J=H*this.cascadeSplitLogFactor+I*(1-this.cascadeSplitLogFactor);z.push(J),p.push(-(-J*E+F)/-J)
}for(var G=0;G<this.shadowCascade;G++){var K=this._getTexture(f.__GUID__+"_"+G,f),L=z[G],M=z[G+1];v.perspective(b._array,C,D,L,M),a.setFromProjection(b),a.getTransformedBoundingBox(c,i);var N=c.min._array,O=c.max._array;d.ortho(N[0],O[0],N[1],O[1],1,-1),w.projectionMatrix.multiplyLeft(d);var P=e.gl;this._frameBuffer.attach(P,K),this._frameBuffer.bind(e),P.clear(P.COLOR_BUFFER_BIT|P.DEPTH_BUFFER_BIT);for(var Q in this._depthMaterials)this._depthMaterials[Q].set("shadowBias",s);e.renderQueue(o,w),this._frameBuffer.unbind(e),this.softShadow===x.VSM&&this._gaussianFilter(e,K,K.width);var R=new g;R.copy(w.worldTransform).invert().multiplyLeft(w.projectionMatrix),r.push(K),q.push(R._array),w.projectionMatrix.copy(j)}n.far=t}}(),_renderSpotLightShadow:function(a,b,c,d,e){this._bindDepthMaterial(c,b.shadowBias,b.shadowSlopeScale),c.sort(h.opaqueSortFunc);var f=this._getTexture(b.__GUID__,b),i=this._getSpotLightCamera(b),j=a.gl;this._frameBuffer.attach(j,f),this._frameBuffer.bind(a),j.clear(j.COLOR_BUFFER_BIT|j.DEPTH_BUFFER_BIT),a.renderQueue(c,i),this._frameBuffer.unbind(a),this.softShadow===x.VSM&&this._gaussianFilter(a,f,f.width);var k=new g;k.copy(i.worldTransform).invert().multiplyLeft(i.projectionMatrix),e.push(f),d.push(k._array)},_renderPointLightShadow:function(a,b,c,d,e){var f=this._getTexture(b.__GUID__,b),g=a.gl;e.push(f),d.push(5*b.range),this._bindDistanceMaterial(c,b);for(var h=0;6>h;h++){var i=w[h],j=this._getPointLightCamera(b,i);this._frameBuffer.attach(a.gl,f,g.COLOR_ATTACHMENT0,g.TEXTURE_CUBE_MAP_POSITIVE_X+h),this._frameBuffer.bind(a),g.clear(g.COLOR_BUFFER_BIT|g.DEPTH_BUFFER_BIT),a.renderQueue(c,j),this._frameBuffer.unbind(a)}},_gaussianFilter:function(a,b,d){var e={width:d,height:d,type:c.FLOAT},f=a.gl,g=this._texturePool.get(e);this._frameBuffer.attach(f,g),this._frameBuffer.bind(a),this._gaussianPassH.setUniform("texture",b),this._gaussianPassH.setUniform("textureWidth",d),this._gaussianPassH.render(a),this._frameBuffer.unbind(a),this._frameBuffer.attach(f,b),this._frameBuffer.bind(a),this._gaussianPassV.setUniform("texture",g),this._gaussianPassV.setUniform("textureHeight",d),this._gaussianPassV.render(a),this._frameBuffer.unbind(a),this._texturePool.put(g)},_getTexture:function(a,b){var d=this._textures[a],e=b.shadowResolution||512;return d||(d=b instanceof l?new p:new o,d.width=e,d.height=e,this.softShadow===x.VSM?(d.type=c.FLOAT,d.anisotropic=4):(d.minFilter=c.LINEAR,d.magFilter=c.LINEAR,d.useMipmap=!1),this._textures[a]=d),d},_getPointLightCamera:function(a,b){this._lightCameras.point||(this._lightCameras.point={px:new q,nx:new q,py:new q,ny:new q,pz:new q,nz:new q});var c=this._lightCameras.point[b];switch(c.far=a.range,c.fov=90,c.position.set(0,0,0),b){case"px":c.lookAt(d.POSITIVE_X,d.NEGATIVE_Y);break;case"nx":c.lookAt(d.NEGATIVE_X,d.NEGATIVE_Y);break;case"py":c.lookAt(d.POSITIVE_Y,d.POSITIVE_Z);break;case"ny":c.lookAt(d.NEGATIVE_Y,d.NEGATIVE_Z);break;case"pz":c.lookAt(d.POSITIVE_Z,d.NEGATIVE_Y);break;case"nz":c.lookAt(d.NEGATIVE_Z,d.NEGATIVE_Y)}return c.position.copy(a.position),c.update(),c},_getDirectionalLightCamera:function(){var a=new g,b=new e;return function(c,d,e){this._lightCameras.directional||(this._lightCameras.directional=new r);var f=this._lightCameras.directional;f.position.copy(e.frustum.boundingBox.min).add(e.frustum.boundingBox.max).scale(.5).transformMat4(e.worldTransform),f.rotation.copy(c.rotation),f.scale.copy(c.scale),f.updateLocalTransform(),f.updateWorldTransform(),a.copy(f.worldTransform).invert().multiply(e.worldTransform),e.frustum.getTransformedBoundingBox(b,a);var g=b.min._array,h=b.max._array;return f.position.scaleAndAdd(f.worldTransform.z,h[2]+this.lightFrustumBias),f.near=0,f.far=-g[2]+h[2]+this.lightFrustumBias,f.left=g[0]-this.lightFrustumBias,f.right=h[0]+this.lightFrustumBias,f.top=h[1]+this.lightFrustumBias,f.bottom=g[1]-this.lightFrustumBias,f.update(!0),f}}(),_getSpotLightCamera:function(a){this._lightCameras.spot||(this._lightCameras.spot=new q);var b=this._lightCameras.spot;return b.fov=2*a.penumbraAngle,b.far=a.range,b.worldTransform.copy(a.worldTransform),b.updateProjectionMatrix(),v.invert(b.viewMatrix._array,b.worldTransform._array),b},dispose:function(a){var b=a.gl;for(var c in this._depthMaterials){var d=this._depthMaterials[c];d.dispose(b)}for(var c in this._distanceMaterials){var d=this._distanceMaterials[c];d.dispose(b)}this._frameBuffer&&this._frameBuffer.dispose(b);for(var e in this._textures)this._textures[e].dispose(b);this._texturePool.clear(a.gl),this._depthMaterials={},this._distanceMaterials={},this._textures={},this._lightCameras={},this._shadowMapNumber={POINT_LIGHT:0,DIRECTIONAL_LIGHT:0,SPOT_LIGHT:0},this._meshMaterials={};for(var f=0;f<this._receivers.length;f++){var g=this._receivers[f];if(g.material&&g.material.shader){var h=g.material,i=h.shader;i.unDefine("fragment","POINT_LIGHT_SHADOW_NUMBER"),i.unDefine("fragment","DIRECTIONAL_LIGHT_SHADOW_NUMBER"),i.unDefine("fragment","AMBIENT_LIGHT_SHADOW_NUMBER"),h.set("shadowEnabled",0)}}this._opaqueCasters=[],this._receivers=[],this._lightsCastShadow=[]}});return x.VSM=1,x.PCF=2,x}),d("qtek/util/dds",["require","../Texture","../Texture2D","../TextureCube"],function(a){function b(a){return a.charCodeAt(0)+(a.charCodeAt(1)<<8)+(a.charCodeAt(2)<<16)+(a.charCodeAt(3)<<24)}var c=a("../Texture"),d=a("../Texture2D");a("../TextureCube");var e=542327876,f=131072,g=512,h=4,i=31,j=b("DXT1"),k=b("DXT3"),l=b("DXT5"),m=0,n=1,o=2,p=3,q=4,r=7,s=20,t=21,u=28,v={parse:function(a,b){var v=new Int32Array(a,0,i);if(v[m]!==e)return null;if(!v(s)&h)return null;var w,x,y=v(t),z=v[q],A=v[p],B=v[u]&g,C=v[o]&f;switch(y){case j:w=8,x=c.COMPRESSED_RGB_S3TC_DXT1_EXT;break;case k:w=16,x=c.COMPRESSED_RGBA_S3TC_DXT3_EXT;break;case l:w=16,x=c.COMPRESSED_RGBA_S3TC_DXT5_EXT;break;default:return null}var D=v[n]+4,E=B?6:1,F=1;C&&(F=Math.max(1,v[r]));for(var G=[],H=0;E>H;H++){var I=z,J=A;G[H]=new d({width:I,height:J,format:x});for(var K=[],L=0;F>L;L++){var M=Math.max(4,I)/4*Math.max(4,J)/4*w,N=new Uint8Array(a,D,M);D+=M,I*=.5,J*=.5,K[L]=N}G[H].pixels=K[0],C&&(G[H].mipmaps=K)}return b?(b.width=G[0].width,b.height=G[0].height,b.format=G[0].format,b.pixels=G[0].pixels,b.mipmaps=G[0].mipmaps,void 0):G[0]}};return v}),d("qtek/util/hdr",["require","../Texture","../Texture2D"],function(a){function b(a,b,c,d){if(a[3]>0){var e=Math.pow(2,a[3]-128-8+d);b[c+0]=a[0]*e,b[c+1]=a[1]*e,b[c+2]=a[2]*e}else b[c+0]=0,b[c+1]=0,b[c+2]=0;return b[c+3]=1,b}function c(a,b,c){for(var d="",e=b;c>e;e++)d+=i(a[e]);return d}function d(a,b){b[0]=a[0],b[1]=a[1],b[2]=a[2],b[3]=a[3]}function e(a,b,c,e){for(var f=0,g=0,h=e;h>0;)if(a[g][0]=b[c++],a[g][1]=b[c++],a[g][2]=b[c++],a[g][3]=b[c++],1===a[g][0]&&1===a[g][1]&&1===a[g][2]){for(var i=a[g][3]<<f>>>0;i>0;i--)d(a[g-1],a[g]),g++,h--;f+=8}else g++,h--,f=0;return c}function f(a,b,c,d){if(j>d|d>k)return e(a,b,c,d);var f=b[c++];if(2!=f)return e(a,b,c-1,d);if(a[0][1]=b[c++],a[0][2]=b[c++],f=b[c++],(a[0][2]<<8>>>0|f)>>>0!==d)return null;for(var f=0;4>f;f++)for(var g=0;d>g;){var h=b[c++];if(h>128){h=(127&h)>>>0;for(var i=b[c++];h--;)a[g++][f]=i}else for(;h--;)a[g++][f]=b[c++]}return c}var g=a("../Texture"),h=a("../Texture2D"),i=String.fromCharCode,j=8,k=32767,l={parseRGBE:function(a,d,e){void 0===e&&(e=0);var j=new Uint8Array(a),k=j.length;if("#?"===c(j,0,2)){for(var l=2;k>l&&("\n"!==i(j[l])||"\n"!==i(j[l+1]));l++);if(!(l>=k)){l+=2;for(var m="";k>l;l++){var n=i(j[l]);if("\n"===n)break;m+=n}var o=m.split(" "),p=parseInt(o[1]),q=parseInt(o[3]);if(q&&p){for(var r=l+1,s=[],t=0;q>t;t++){s[t]=[];for(var u=0;4>u;u++)s[t][u]=0}for(var v=new Float32Array(4*q*p),w=0,x=0;p>x;x++){var r=f(s,j,r,q);if(!r)return null;for(var t=0;q>t;t++)b(s[t],v,w,e),w+=4}return d||(d=new h),d.width=q,d.height=p,d.pixels=v,d.type=g.FLOAT,d}}}},parseRGBEFromPNG:function(){}};return l}),d("qtek/util/mesh",["require","../Geometry","../DynamicGeometry","../StaticGeometry","../Mesh","../Node","../Material","../Shader","../math/BoundingBox","../dep/glmatrix"],function(a){a("../Geometry");var b=a("../DynamicGeometry"),c=a("../StaticGeometry"),d=a("../Mesh"),e=a("../Node"),f=a("../Material");a("../Shader");var g=a("../math/BoundingBox"),h=a("../dep/glmatrix"),i=h.mat4,j=h.vec3,k=Array.prototype.slice,l={merge:function(a,e){if(a.length){var f=a[0],h=f.geometry,k=f.material,l=h instanceof c,m=l?new c:new b;m.boundingBox=new g;var n=m.faces,o=h.getEnabledAttributes();l||(o=Object.keys(o));for(var p=0;p<o.length;p++){var q=o[p],r=h.attributes[q];m.attributes[q]||(m.attributes[q]=r.clone(!1))}var s=i.create();if(l){for(var t=0,u=0,v=0;v<a.length;v++){var w=a[v].geometry;w.boundingBox&&(w.boundingBox.applyTransform(e?a[v].worldTransform:a[v].localTransform),m.boundingBox.union(w.boundingBox)),t+=w.getVertexNumber(),u+=w.getFaceNumber()}for(var x=0;x<o.length;x++){var q=o[x],y=m.attributes[q];y.init(t)}m.faces=t>=65535?new Uint32Array(3*u):new Uint16Array(3*u)}for(var z=0,A=0,B=h.isUseFace(),C=0;C<a.length;C++){var D=a[C],w=D.geometry,t=w.getVertexNumber(),E=e?D.worldTransform._array:D.localTransform._array;i.invert(s,E),i.transpose(s,s);for(var F=0;F<o.length;F++){var q=o[F],G=w.attributes[q],H=m.attributes[q];if(G.value.length)if(l){for(var I=G.value.length,J=G.size,K=z*J,L=I/J,p=0;I>p;p++)H.value[K+p]=G.value[p];"position"===q?j.forEach(H.value,J,K,L,j.transformMat4,E):("normal"===q||"tangent"===q)&&j.forEach(H.value,J,K,L,j.transformMat4,s)}else for(var p=0;t>p;p++)if("position"===q){var M=j.create();j.transformMat4(M,G.value[p],E),H.value.push(M)}else if("normal"===q||"tangent"===q){var M=j.create();j.transformMat4(M,G.value[p],s),H.value.push(M)}else H.value.push(G.value[p])}if(B){var I=w.faces.length;if(l){for(var p=0;I>p;p++)m.faces[p+A]=w.faces[p]+z;A+=I}else for(var p=0;I>p;p++){var N=[],O=w.faces[p];N[0]=O[0]+z,N[1]=O[1]+z,N[2]=O[2]+z,n.push(N)}}z+=t}return new d({material:k,geometry:m})}},splitByJoints:function(a,g,h){var i=a.geometry,j=a.skeleton,l=a.material,m=l.shader,n=a.joints;if(i&&j&&n.length){if(n.length<g)return a;for(var o=i instanceof c,p={},q=i.faces,r=i.getFaceNumber(),s=r,t=[],u=i.attributes.joint.value,v=0;r>v;v++)t[v]=!1;for(var w=[],x=[],y=function(a){return n[a]};s>0;){for(var z=[],A=[],B=[],C=0,v=0;v<n.length;v++)A[v]=-1;for(var D=0;r>D;D++)if(!t[D]){for(var E=!0,F=0,v=0;3>v;v++)for(var G=o?q[3*D+v]:q[D][v],H=0;4>H;H++){var I;I=o?u[4*G+H]:u[G][H],I>=0&&-1===A[I]&&(g>C?(A[I]=C,B[C++]=I,w[F++]=I):E=!1)}if(E)o?z.push(q.subarray(3*D,3*(D+1))):z.push(q[D]),t[D]=!0,s--;else for(var v=0;F>v;v++)A[w[v]]=-1,B.pop(),C--}x.push({faces:z,joints:B.map(y),jointReverseMap:A})}var J=new e({name:a.name}),K=i.getEnabledAttributes();o||(K=Object.keys(K)),K.splice(K.indexOf("joint"),1);for(var L=[],M=0;M<x.length;M++){var N=x[M],O=N.jointReverseMap,C=N.joints.length,P=p[C];P||(P=m.clone(),P.define("vertex","JOINT_NUMBER",C),p[C]=P);var Q=new f({name:[l.name,M].join("-"),shader:P,transparent:l.transparent,depthTest:l.depthTest,depthMask:l.depthMask,blend:l.blend});for(var R in l.uniforms){var S=l.uniforms[R];Q.set(R,S.value)}for(var T=o?new c:new b,U=new d({name:[a.name,v].join("-"),material:Q,geometry:T,skeleton:j,joints:N.joints.slice()}),V=0,W=i.getVertexNumber(),v=0;W>v;v++)L[v]=-1;for(var D=0;D<N.faces.length;D++)for(var X=N.faces[D],v=0;3>v;v++){var G=X[v];-1===L[G]&&(L[G]=V,V++)}if(o){for(var Y=0;Y<K.length;Y++){var Z=K[Y],$=T.attributes[Z];$.init(V)}T.attributes.joint.value=new Float32Array(4*V),T.faces=V>65535?new Uint32Array(3*N.faces.length):new Uint16Array(3*N.faces.length)}var _=0;V=0;for(var v=0;W>v;v++)L[v]=-1;for(var D=0;D<N.faces.length;D++){var ab;o||(ab=[]);for(var X=N.faces[D],v=0;3>v;v++){var G=X[v];if(-1===L[G]){L[G]=V;for(var Y=0;Y<K.length;Y++){var Z=K[Y],bb=i.attributes[Z],$=T.attributes[Z],cb=bb.size;if(o)for(var H=0;cb>H;H++)$.value[V*cb+H]=bb.value[G*cb+H];else $.value[V]=1===bb.size?bb.value[G]:k.call(bb.value[G])}if(o)for(var H=0;4>H;H++){var I=i.attributes.joint.value[4*G+H],db=4*V+H;T.attributes.joint.value[db]=I>=0?O[I]:-1}else for(var eb=T.attributes.joint.value[V]=[-1,-1,-1,-1],H=0;4>H;H++){var I=i.attributes.joint.value[G][H];I>=0&&(eb[H]=O[I])}V++}o?T.faces[_++]=L[G]:ab.push(L[G])}o||T.faces.push(ab)}J.add(U)}for(var fb=a.children(),v=0;v<fb.length;v++)J.add(fb[v]);if(J.position.copy(a.position),J.rotation.copy(a.rotation),J.scale.copy(a.scale),h&&a.getParent()){var gb=a.getParent();gb.remove(a),gb.add(J)}return J}}};return l}),d("qtek/util/texture",["require","../Texture","../Texture2D","../TextureCube","../core/request","../prePass/EnvironmentMap","../plugin/Skydome","../Scene","./dds","./hdr"],function(a){a("../Texture");var b=a("../Texture2D"),c=a("../TextureCube"),d=a("../core/request"),e=a("../prePass/EnvironmentMap"),f=a("../plugin/Skydome"),g=a("../Scene"),h=a("./dds"),i=a("./hdr"),j={loadTexture:function(a,d,e,f){var g;if("function"==typeof d?(e=d,f=e,d={}):d=d||{},"string"==typeof a){if(a.match(/.hdr$/))return g=new b({width:0,height:0}),j._fetchTexture(a,function(a){i.parseRGBE(a,g,d.exposure),g.dirty(),e&&e(g)},f),g;a.match(/.dds$/)?(g=new b({width:0,height:0}),j._fetchTexture(a,function(a){h.parse(a,g),g.dirty(),e&&e(g)},f)):(g=new b,g.load(a),g.success(e),g.error(f))}else if("object"==typeof a&&"undefined"!=typeof a.px){var g=new c;g.load(a),g.success(e),g.error(f)}return g},loadPanorama:function(a,b,c,d,e,f){var g=this;"function"==typeof d?(e=d,f=e,d={}):d=d||{},j.loadTexture(a,d,function(a){a.flipY=!1,g.panoramaToCubeMap(a,b,c),a.dispose(c.gl),e&&e(b)},f)},panoramaToCubeMap:function(a,b,c){var d=new e,h=new f({scene:new g});return h.material.set("diffuseMap",a),d.texture=b,d.render(c,h.scene),d.texture=null,d.dispose(c),b},_fetchTexture:function(a,b,c){d.get({url:a,responseType:"arraybuffer",onload:b,onerror:c})},createChessboard:function(a,c,d,e){a=a||512,c=c||64,d=d||"black",e=e||"white";var f=Math.ceil(a/c),g=document.createElement("canvas");g.width=a,g.height=a;var h=g.getContext("2d");h.fillStyle=e,h.fillRect(0,0,a,a),h.fillStyle=d;for(var i=0;f>i;i++)for(var j=0;f>j;j++){var k=j%2?i%2:i%2-1;k&&h.fillRect(i*c,j*c,c,c)}var l=new b({image:g,anisotropic:8});return l},createBlank:function(a){var c=document.createElement("canvas");c.width=1,c.height=1;var d=c.getContext("2d");d.fillStyle=a,d.fillRect(0,0,1,1);var e=new b({image:c});return e}};return j}),d("qtek/qtek",["require","qtek/Camera","qtek/DynamicGeometry","qtek/FrameBuffer","qtek/Geometry","qtek/Joint","qtek/Light","qtek/Material","qtek/Mesh","qtek/Node","qtek/Renderable","qtek/Renderer","qtek/Scene","qtek/Shader","qtek/Skeleton","qtek/StaticGeometry","qtek/Texture","qtek/Texture2D","qtek/TextureCube","qtek/animation/Animation","qtek/animation/Blend1DClip","qtek/animation/Blend2DClip","qtek/animation/Clip","qtek/animation/SamplerClip","qtek/animation/SkinningClip","qtek/animation/TransformClip","qtek/animation/easing","qtek/async/Task","qtek/async/TaskGroup","qtek/camera/Orthographic","qtek/camera/Perspective","qtek/compositor/Compositor","qtek/compositor/Graph","qtek/compositor/Node","qtek/compositor/Pass","qtek/compositor/SceneNode","qtek/compositor/TextureNode","qtek/compositor/TexturePool","qtek/core/Base","qtek/core/Cache","qtek/core/Event","qtek/core/LRU","qtek/core/LinkedList","qtek/core/glenum","qtek/core/glinfo","qtek/core/mixin/derive","qtek/core/mixin/notifier","qtek/core/request","qtek/core/util","qtek/deferred/Renderer","qtek/deferred/StandardMaterial","qtek/dep/glmatrix","qtek/geometry/Cone","qtek/geometry/Cube","qtek/geometry/Cylinder","qtek/geometry/Plane","qtek/geometry/Sphere","qtek/light/Ambient","qtek/light/Directional","qtek/light/Point","qtek/light/Sphere","qtek/light/Spot","qtek/light/Tube","qtek/loader/FX","qtek/loader/GLTF","qtek/loader/ThreeModel","qtek/math/BoundingBox","qtek/math/Frustum","qtek/math/Matrix2","qtek/math/Matrix2d","qtek/math/Matrix3","qtek/math/Matrix4","qtek/math/Plane","qtek/math/Quaternion","qtek/math/Ray","qtek/math/Value","qtek/math/Vector2","qtek/math/Vector3","qtek/math/Vector4","qtek/particleSystem/Emitter","qtek/particleSystem/Field","qtek/particleSystem/ForceField","qtek/particleSystem/Particle","qtek/particleSystem/ParticleRenderable","qtek/picking/PixelPicking","qtek/picking/RayPicking","qtek/plugin/FirstPersonControl","qtek/plugin/InfinitePlane","qtek/plugin/OrbitControl","qtek/plugin/Skybox","qtek/plugin/Skydome","qtek/prePass/EnvironmentMap","qtek/prePass/Reflection","qtek/prePass/ShadowMap","qtek/shader/buildin","qtek/shader/library","qtek/util/dds","qtek/util/delaunay","qtek/util/hdr","qtek/util/mesh","qtek/util/texture"],function(a){var b={Camera:a("qtek/Camera"),DynamicGeometry:a("qtek/DynamicGeometry"),FrameBuffer:a("qtek/FrameBuffer"),Geometry:a("qtek/Geometry"),Joint:a("qtek/Joint"),Light:a("qtek/Light"),Material:a("qtek/Material"),Mesh:a("qtek/Mesh"),Node:a("qtek/Node"),Renderable:a("qtek/Renderable"),Renderer:a("qtek/Renderer"),Scene:a("qtek/Scene"),Shader:a("qtek/Shader"),Skeleton:a("qtek/Skeleton"),StaticGeometry:a("qtek/StaticGeometry"),Texture:a("qtek/Texture"),Texture2D:a("qtek/Texture2D"),TextureCube:a("qtek/TextureCube"),animation:{Animation:a("qtek/animation/Animation"),Blend1DClip:a("qtek/animation/Blend1DClip"),Blend2DClip:a("qtek/animation/Blend2DClip"),Clip:a("qtek/animation/Clip"),SamplerClip:a("qtek/animation/SamplerClip"),SkinningClip:a("qtek/animation/SkinningClip"),TransformClip:a("qtek/animation/TransformClip"),easing:a("qtek/animation/easing")},async:{Task:a("qtek/async/Task"),TaskGroup:a("qtek/async/TaskGroup")},camera:{Orthographic:a("qtek/camera/Orthographic"),Perspective:a("qtek/camera/Perspective")},compositor:{Compositor:a("qtek/compositor/Compositor"),Graph:a("qtek/compositor/Graph"),Node:a("qtek/compositor/Node"),Pass:a("qtek/compositor/Pass"),SceneNode:a("qtek/compositor/SceneNode"),TextureNode:a("qtek/compositor/TextureNode"),TexturePool:a("qtek/compositor/TexturePool")},core:{Base:a("qtek/core/Base"),Cache:a("qtek/core/Cache"),Event:a("qtek/core/Event"),LRU:a("qtek/core/LRU"),LinkedList:a("qtek/core/LinkedList"),glenum:a("qtek/core/glenum"),glinfo:a("qtek/core/glinfo"),mixin:{derive:a("qtek/core/mixin/derive"),notifier:a("qtek/core/mixin/notifier")},request:a("qtek/core/request"),util:a("qtek/core/util")},deferred:{Renderer:a("qtek/deferred/Renderer"),StandardMaterial:a("qtek/deferred/StandardMaterial")},dep:{glmatrix:a("qtek/dep/glmatrix")},geometry:{Cone:a("qtek/geometry/Cone"),Cube:a("qtek/geometry/Cube"),Cylinder:a("qtek/geometry/Cylinder"),Plane:a("qtek/geometry/Plane"),Sphere:a("qtek/geometry/Sphere")},light:{Ambient:a("qtek/light/Ambient"),Directional:a("qtek/light/Directional"),Point:a("qtek/light/Point"),Sphere:a("qtek/light/Sphere"),Spot:a("qtek/light/Spot"),Tube:a("qtek/light/Tube")},loader:{FX:a("qtek/loader/FX"),GLTF:a("qtek/loader/GLTF"),ThreeModel:a("qtek/loader/ThreeModel")},math:{BoundingBox:a("qtek/math/BoundingBox"),Frustum:a("qtek/math/Frustum"),Matrix2:a("qtek/math/Matrix2"),Matrix2d:a("qtek/math/Matrix2d"),Matrix3:a("qtek/math/Matrix3"),Matrix4:a("qtek/math/Matrix4"),Plane:a("qtek/math/Plane"),Quaternion:a("qtek/math/Quaternion"),Ray:a("qtek/math/Ray"),Value:a("qtek/math/Value"),Vector2:a("qtek/math/Vector2"),Vector3:a("qtek/math/Vector3"),Vector4:a("qtek/math/Vector4")},particleSystem:{Emitter:a("qtek/particleSystem/Emitter"),Field:a("qtek/particleSystem/Field"),ForceField:a("qtek/particleSystem/ForceField"),Particle:a("qtek/particleSystem/Particle"),ParticleRenderable:a("qtek/particleSystem/ParticleRenderable")},picking:{PixelPicking:a("qtek/picking/PixelPicking"),RayPicking:a("qtek/picking/RayPicking")},plugin:{FirstPersonControl:a("qtek/plugin/FirstPersonControl"),InfinitePlane:a("qtek/plugin/InfinitePlane"),OrbitControl:a("qtek/plugin/OrbitControl"),Skybox:a("qtek/plugin/Skybox"),Skydome:a("qtek/plugin/Skydome")},prePass:{EnvironmentMap:a("qtek/prePass/EnvironmentMap"),Reflection:a("qtek/prePass/Reflection"),ShadowMap:a("qtek/prePass/ShadowMap")},shader:{buildin:a("qtek/shader/buildin"),library:a("qtek/shader/library")},util:{dds:a("qtek/util/dds"),delaunay:a("qtek/util/delaunay"),hdr:a("qtek/util/hdr"),mesh:a("qtek/util/mesh"),texture:a("qtek/util/texture")}};return b.version="0.2.1",b}),d("qtek",["qtek/qtek"],function(a){return a});var e=c("qtek");for(var f in e)a[f]=e[f]});